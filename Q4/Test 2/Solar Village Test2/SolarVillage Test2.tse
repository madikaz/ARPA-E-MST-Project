version = 4.2

//
// Saved by sw version: 2021.1
// Save timestamp: 14-Mar-2021 @ 10:24:26 AM
//

model "SolarVillage Test2" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 2
        simulation_method = trapezoidal
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        reset_analog_outputs_on_sim_stop = True
        reset_digital_outputs_on_sim_stop = True
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 5e-05
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "medium"
        user_cpu_optimization = "medium"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
    }

    component Subsystem Root {
        component Subsystem "Line 1" {
            layout = dynamic
            component pas_inductor La {
                inductance = "L01"
            }
            [
                position = 8240, 8112
                rotation = down
            ]

            component pas_inductor Lb {
                inductance = "L01"
            }
            [
                position = 8240, 8272
                rotation = down
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8064, 8112
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8320, 8272
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8320, 8112
                rotation = down
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8064, 8272
            ]

            connect Lb.p_node b as Connection5060
            connect La.p_node a as Connection5061
            connect A La.n_node as Connection5063
            connect B Lb.n_node as Connection5064
        }
        [
            position = 6200, 7936
            size = 48, 64
        ]

        component Subsystem "Line 2" {
            layout = dynamic
            component pas_inductor La {
                inductance = "L02"
            }
            [
                position = 8240, 8112
                rotation = down
            ]

            component pas_inductor Lb {
                inductance = "L02"
            }
            [
                position = 8240, 8272
                rotation = down
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8064, 8112
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8320, 8272
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8320, 8112
                rotation = down
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8064, 8272
            ]

            connect Lb.p_node b as Connection5060
            connect La.p_node a as Connection5061
            connect A La.n_node as Connection5062
            connect B Lb.n_node as Connection5063
        }
        [
            position = 6192, 7808
            size = 48, 64
        ]

        component Subsystem "Line 3" {
            layout = dynamic
            component pas_inductor La {
                inductance = "L03"
            }
            [
                position = 8240, 8112
                rotation = down
            ]

            component pas_inductor Lb {
                inductance = "L03"
            }
            [
                position = 8240, 8272
                rotation = down
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8064, 8112
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8320, 8272
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8320, 8112
                rotation = down
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8064, 8272
            ]

            connect Lb.p_node b as Connection5060
            connect La.p_node a as Connection5061
            connect A La.n_node as Connection5062
            connect B Lb.n_node as Connection5063
        }
        [
            position = 6192, 7688
            size = 48, 64
        ]

        component Subsystem "Line 4" {
            layout = dynamic
            component pas_inductor La {
                inductance = "L04"
            }
            [
                position = 8240, 8112
                rotation = down
            ]

            component pas_inductor Lb {
                inductance = "L04"
            }
            [
                position = 8240, 8272
                rotation = down
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8064, 8112
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8320, 8272
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8320, 8112
                rotation = down
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8064, 8272
            ]

            connect Lb.p_node b as Connection5060
            connect La.p_node a as Connection5061
            connect A La.n_node as Connection5062
            connect B Lb.n_node as Connection5063
        }
        [
            position = 6184, 7560
            size = 48, 64
        ]

        component Subsystem "Line 5" {
            layout = dynamic
            component pas_inductor La {
                inductance = "L05"
            }
            [
                position = 8240, 8112
                rotation = down
            ]

            component pas_inductor Lb {
                inductance = "L05"
            }
            [
                position = 8240, 8272
                rotation = down
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8064, 8112
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8320, 8272
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8320, 8112
                rotation = down
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8064, 8272
            ]

            connect Lb.p_node b as Connection5060
            connect La.p_node a as Connection5061
            connect A La.n_node as Connection5063
            connect B Lb.n_node as Connection5064
        }
        [
            position = 5984, 7656
            rotation = right
            scale = -1, -1
            size = 48, 64
        ]

        component Subsystem SolarHouse1 {
            layout = dynamic
            component Subsystem Load {
                layout = dynamic
                component pas_inductor L {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8208, 8144
                    rotation = right
                ]

                component pas_resistor R {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8144, 8144
                    rotation = right
                ]

                port A {
                    label = "A"
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8048
                ]

                port B {
                    label = "B"
                    position = left:2
                    kind = pe
                }
                [
                    position = 8080, 8224
                ]

                junction Junction1 pe
                [
                    position = 8144, 8048
                ]

                junction Junction2 pe
                [
                    position = 8144, 8224
                ]

                connect R.p_node Junction1 as Connection3
                connect Junction1 A as Connection4
                connect L.p_node Junction1 as Connection5
                connect R.n_node Junction2 as Connection6
                connect Junction2 B as Connection7
                connect L.n_node Junction2 as Connection8

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Constant Impedance Load</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxingle-phase RL load.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxand L values are calculated using the input parameters:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated voltage</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated power</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxf: Rated frequency</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxpf: Rated power factor</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxone of the parameters can be set to 0.</p></body></html>"

                    V {
                        label = "Voltage"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "General"
                    }

                    S {
                        label = "Power"
                        widget = edit
                        type = generic
                        default_value = "1e3"
                        unit = "VA"
                        group = "General"
                    }

                    f {
                        label = "Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General"
                    }

                    pf {
                        label = "Power Factor"
                        widget = edit
                        type = generic
                        default_value = "0.9"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8344, 8288
                scale = -1, 1
                size = 48, 72
            ]

            component Subsystem Inverter {
                layout = dynamic
                component gen_probe V {
                }
                [
                    position = 7848, 8032
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                    }
                    [
                        position = 7064, 8360
                        scale = -1, 1
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8040
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[1]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7960
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 7920, 8600
                                scale = -1, 1
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "10"
                            }
                            [
                                position = 7840, 8600
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc1 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8128, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc2 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8136, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Iq_meas {
                                label = "Iq_meas"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Iq_ref {
                                label = "Iq_ref"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Id_ref {
                                label = "Id_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8032
                                rotation = down
                            ]

                            port Id_meas {
                                label = "Id_meas"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8128
                                rotation = down
                            ]

                            tag From23 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Vd"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Vq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8016, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8128
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8040
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Iq_meas Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Id_ref as Connection297
                            connect Sum9.in Iq_ref as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Id_meas Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8040; 8240, 8040
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                            connect From27 LPF_dc.in as Connection356
                            connect LPF_dc.out Limit3.in as Connection357
                            connect Limit3.out Gain5.in as Connection358
                            connect LPF_dc1.in From26 as Connection359
                            connect LPF_dc1.out Sum6.in as Connection360
                            connect LPF_dc2.in From24 as Connection361
                            connect Sum5.in LPF_dc2.out as Connection362
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Id_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Iq_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7976, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component gen_d_q2alpha_beta "dq to alpha beta" {
                        }
                        [
                            position = 7912, 8584
                            scale = -1, 1
                        ]

                        component gen_probe ud {
                        }
                        [
                            position = 8152, 8448
                        ]

                        component gen_probe uq {
                        }
                        [
                            position = 8144, 8744
                        ]

                        component Subsystem "outer power loop1" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8144
                                rotation = down
                            ]

                            port Id_r {
                                label = "Id_r"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8168
                                rotation = down
                            ]

                            port Iq_r {
                                label = "Iq_r"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8080
                                rotation = down
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect Ed Junction142 as Connection390
                            [
                                breakpoints = 8720, 8072
                            ]
                            connect P_ref Junction139 as Connection391
                            [
                                breakpoints = 8752, 8144; 8600, 8144
                            ]
                            connect Id_r Product2.out as Connection392
                            connect Iq_r Product1.out as Connection393
                        }
                        [
                            position = 8496, 8568
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8656, 8632
                            size = 48, 56
                        ]

                        component gen_probe Edq_sq {
                        }
                        [
                            position = 8656, 8712
                        ]

                        port ma {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port mb {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From29 {
                            value = "Id"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8736
                            hide_name = True
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Iq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8616
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From20 {
                            value = "Vd"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8568
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Vq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8600
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8512
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8544
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        junction Junction23 sp
                        [
                            position = 8352, 8664
                        ]

                        junction Junction17 sp
                        [
                            position = 8032, 8560
                        ]

                        junction Junction18 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction19 sp
                        [
                            position = 8112, 8520
                        ]

                        junction Junction20 sp
                        [
                            position = 8112, 8656
                        ]

                        junction Junction13 sp
                        [
                            position = 8728, 8568
                        ]

                        junction Junction14 sp
                        [
                            position = 8752, 8600
                        ]

                        junction Junction21 sp
                        [
                            position = 8608, 8632
                        ]

                        junction Junction22 sp
                        [
                            position = 8296, 8520
                        ]

                        connect From29 "inner current control loop.Id_meas" as Connection253
                        connect From30 "inner current control loop.Iq_meas" as Connection257
                        connect "inner current control loop.Iq_ref" Junction23 as Connection505
                        [
                            breakpoints = 8240, 8664
                        ]
                        connect Junction23 Iq_ref.in as Connection506
                        [
                            breakpoints = 8352, 8664; 8352, 8664; 8352, 8664
                        ]
                        connect "outer power loop1.Iq_r" Junction23 as Connection507
                        connect Ud.in Junction17 as Connection449
                        connect Junction17 Gain5.out as Connection450
                        connect "dq to alpha beta.d" Junction17 as Connection451
                        connect Uq.in Junction18 as Connection452
                        connect Junction18 Gain6.out as Connection453
                        [
                            breakpoints = 8032, 8624
                        ]
                        connect "dq to alpha beta.q" Junction18 as Connection454
                        connect From1 "dq to alpha beta.wt" as Connection455
                        connect ma "dq to alpha beta.alpha" as Connection456
                        connect mb "dq to alpha beta.beta" as Connection457
                        connect Gain5.in Junction19 as Connection458
                        connect Junction19 "inner current control loop.Ud1" as Connection459
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect ud.in Junction19 as Connection460
                        connect Gain6.in Junction20 as Connection461
                        connect Junction20 "inner current control loop.Uq1" as Connection462
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect uq.in Junction20 as Connection463
                        connect From42 "outer power loop1.P_ref" as Connection431
                        connect From43 "outer power loop1.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop1.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop1.Eq" as Connection437
                        [
                            breakpoints = 8752, 8600; 8696, 8600
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                        connect squared_Vt2.Et_p2 Junction21 as Connection464
                        connect Junction21 "outer power loop1.Et_p2" as Connection465
                        connect Edq_sq.in Junction21 as Connection466
                        connect Id_ref.in Junction22 as Connection499
                        [
                            breakpoints = 8296, 8416; 8296, 8504
                        ]
                        connect Junction22 "inner current control loop.Id_ref" as Connection500
                        [
                            breakpoints = 8296, 8520; 8296, 8520; 8288, 8520; 8296, 8520
                        ]
                        connect "outer power loop1.Id_r" Junction22 as Connection501
                    }
                    [
                        position = 7224, 8360
                        size = 128, 152
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 6880, 8512
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_split "Bus Split1" {
                    }
                    [
                        position = 6944, 8360
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain20 {
                        gain = "-1"
                    }
                    [
                        position = 6832, 8408
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_z_domain_transfer "Hilbert Transform" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7000, 8896
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts"
                        input_terminals = "real in;inherit pi;inherit Ts;"
                        input_terminals_dimensions = "inherit;inherit;inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7384, 8688
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 7608, 8736
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 7488, 8720
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe Vd {
                    }
                    [
                        position = 7656, 8856
                    ]

                    component gen_probe Vq {
                    }
                    [
                        position = 7648, 9040
                    ]

                    component gen_z_domain_transfer "Hilbert Transform1" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 6992, 9016
                    ]

                    component gen_probe Id {
                    }
                    [
                        position = 8168, 8856
                    ]

                    component gen_probe Iq {
                    }
                    [
                        position = 8168, 9056
                    ]

                    component gen_gain Gain28 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7528, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain29 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7520, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain30 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain31 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq1" {
                    }
                    [
                        position = 7408, 8944
                        hide_name = True
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq2" {
                    }
                    [
                        position = 7912, 8936
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8056, 8640
                        hide_name = True
                    ]

                    component gen_gain Gain22 {
                        gain = "1000/S"
                    }
                    [
                        position = 7968, 8432
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        input_terminals = "real ref;int charge;"
                        input_terminals_dimensions = "1;1"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'ref\', True), (\'charge\', True)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = -1;
else out = ref;
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7880, 8432
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8464
                        hide_name = True
                        size = 32, 32
                    ]

                    component src_scada_input charge {
                        execution_rate = "Ts"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 7720, 8464
                    ]

                    component "core/Rate Transition" "Rate Transition9" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8400
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_probe Pref {
                    }
                    [
                        position = 7864, 8296
                    ]

                    component gen_gain Gain23 {
                        gain = "1000"
                    }
                    [
                        position = 7768, 8296
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        execution_rate = "1"
                        global_variables = "int k;real t;"
                        init_fnc = "/*Begin code section*/
k = 0; t = 1;
/*End code section*/"
                        input_terminals = ""
                        input_terminals_dimensions = ""
                        input_terminals_feedthrough = ""
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
Pref = 0.2;

if (k>12) k = 0;
if (t>3) t = 0;
if (k==0) {Pref = 0.7;}
else if (k==1) {Pref = 0.8;}
else if (k==2) {Pref = 0.6;}
else if (k==3) {Pref = 0.5;}
else if (k==4) {Pref = 0.2;}
else if (k==5) {Pref = 0.8;}
else if (k==6) {Pref = 0.7;}
else if(k==7) {Pref = 0.5;}
else if(k==8) {Pref = 0.66;}
else if(k==9) {Pref =0.75;}
else if(k==10) {Pref =0.54;}
else if(k==11) {Pref =0.30;}
else if(k==12) {Pref =0.45;}

if (t>=3) k+=1;
t+=1;
/*End code section*/"
                        output_terminals = "real Pref;"
                        output_terminals_dimensions = "1"
                        output_terminals_feedthrough = "False"
                        output_terminals_show_labels = "True"
                    }
                    [
                        position = 7608, 8400
                        size = 72, 88
                    ]

                    component gen_gain Gain32 {
                        gain = "1/S"
                    }
                    [
                        position = 7760, 8560
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "2*np.pi*60"
                    }
                    [
                        position = 7000, 8680
                        hide_name = True
                    ]

                    port En {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6768, 8512
                        scale = -1, 1
                    ]

                    port ma {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6800, 8336
                        scale = -1, 1
                    ]

                    port mb {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6760, 8408
                        scale = -1, 1
                    ]

                    port PREF {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7688, 8560
                    ]

                    tag Goto60 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8848
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From54 {
                        value = "V"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6832, 8848
                        hide_name = True
                    ]

                    tag Goto61 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8896
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From55 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8920
                        hide_name = True
                    ]

                    tag From56 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8952
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7264, 8688
                        scale = -1, 1
                    ]

                    tag From57 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8992
                        hide_name = True
                    ]

                    tag Goto64 {
                        value = "Vd"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7632, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto65 {
                        value = "Vq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7624, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto66 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 8968
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From60 {
                        value = "I"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6824, 8968
                        hide_name = True
                    ]

                    tag Goto67 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 9016
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From61 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8904
                        hide_name = True
                    ]

                    tag From62 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8936
                        hide_name = True
                    ]

                    tag Goto68 {
                        value = "Id"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto69 {
                        value = "Iq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto57 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7136, 8680
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From65 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8672
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag From66 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8968
                        hide_name = True
                    ]

                    tag Goto55 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7848, 8560
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto56 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8192, 8640
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction276 sp
                    [
                        position = 6904, 8352
                    ]

                    junction Junction386 sp
                    [
                        position = 6912, 8848
                    ]

                    junction Junction392 sp
                    [
                        position = 6904, 8968
                    ]

                    junction Junction398 sp
                    [
                        position = 7568, 8920
                    ]

                    junction Junction399 sp
                    [
                        position = 7560, 8984
                    ]

                    junction Junction400 sp
                    [
                        position = 8064, 8920
                    ]

                    junction Junction401 sp
                    [
                        position = 8072, 8984
                    ]

                    junction Junction403 sp
                    [
                        position = 7696, 8400
                    ]

                    connect En Constant2.out as Connection1061
                    connect ma Junction276 as Connection1064
                    connect Junction276 "Bus Split1.out" as Connection1065
                    connect Gain20.in Junction276 as Connection1066
                    connect Gain20.out mb as Connection1067
                    connect "Bus Split1.in" "Bus Join1.out" as Connection4453
                    connect From54 Junction386 as Connection4478
                    connect Junction386 Goto60 as Connection4479
                    connect "Hilbert Transform.in" Junction386 as Connection4480
                    connect "Hilbert Transform.out" Goto61 as Connection4481
                    connect "C function4.out" Goto21 as Connection1023
                    connect Constant3.out "C function4.pi" as Connection1024
                    [
                        breakpoints = 7520, 8736; 7520, 8688
                    ]
                    connect Constant4.out "C function4.Ts" as Connection1025
                    connect From60 Junction392 as Connection4503
                    connect Junction392 Goto66 as Connection4504
                    connect "Hilbert Transform1.in" Junction392 as Connection4505
                    connect "Hilbert Transform1.out" Goto67 as Connection4506
                    connect Gain28.out Junction398 as Connection4539
                    connect Junction398 Goto64 as Connection4540
                    connect Vd.in Junction398 as Connection4541
                    connect Gain29.out Junction399 as Connection4543
                    connect Junction399 Goto65 as Connection4544
                    connect Vq.in Junction399 as Connection4545
                    connect Gain30.out Junction400 as Connection4548
                    connect Junction400 Goto68 as Connection4549
                    connect Id.in Junction400 as Connection4550
                    connect Gain31.out Junction401 as Connection4551
                    connect Junction401 Goto69 as Connection4552
                    connect Iq.in Junction401 as Connection4553
                    connect "Bus Join1.in" "Outer Voltage Loop + Inner Current Loop.ma" as Connection4554
                    [
                        breakpoints = 7104, 8304
                    ]
                    connect "Outer Voltage Loop + Inner Current Loop.mb" "Bus Join1.in1" as Connection4555
                    [
                        breakpoints = 7120, 8368
                    ]
                    connect From55 "alpha beta to dq1.alpha" as Connection4561
                    connect From56 "alpha beta to dq1.beta" as Connection4562
                    connect From57 "alpha beta to dq1.wt" as Connection4563
                    connect "alpha beta to dq1.d" Gain28.in as Connection4564
                    connect "alpha beta to dq1.q" Gain29.in as Connection4565
                    connect "alpha beta to dq2.d" Gain30.in as Connection4566
                    connect "alpha beta to dq2.q" Gain31.in as Connection4567
                    connect From61 "alpha beta to dq2.alpha" as Connection4568
                    connect From62 "alpha beta to dq2.beta" as Connection4569
                    connect From66 "alpha beta to dq2.wt" as Connection4570
                    connect From65 "C function4.in" as Connection4575
                    connect Constant5.out Goto56 as Connection4577
                    connect charge.out "Rate Transition8.in" as Connection4421
                    connect "Rate Transition9.out" "C function1.ref" as Connection4425
                    connect Pref.in Gain23.out as Connection4436
                    connect "Rate Transition8.out" "C function1.charge" as Connection4580
                    [
                        breakpoints = 7840, 8464
                    ]
                    connect "Rate Transition9.in" Junction403 as Connection4581
                    connect Junction403 Gain23.in as Connection4582
                    [
                        breakpoints = 7696, 8400
                    ]
                    connect "C function3.Pref" Junction403 as Connection4583
                    connect Gain22.in "C function1.out" as Connection4584
                    [
                        breakpoints = 7928, 8432
                    ]
                    connect PREF Gain32.in as Connection4585
                    connect Gain32.out Goto55 as Connection4586
                    connect Constant6.out Goto57 as Connection4587
                }
                [
                    position = 7408, 7760
                    size = 88, 96
                ]

                component pas_inductor La {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7848
                    rotation = down
                ]

                component pas_inductor Loa {
                    inductance = "L_o"
                }
                [
                    position = 8392, 7848
                    rotation = down
                ]

                component "core/Voltage Measurement" E {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8024, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" I {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7848
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Cs {
                    capacitance = "C_s"
                }
                [
                    position = 8104, 8096
                    rotation = right
                ]

                component gen_probe S {
                }
                [
                    position = 8144, 7656
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Q {
                }
                [
                    position = 8144, 7592
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 8144, 7720
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe P {
                }
                [
                    position = 8144, 7528
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem Power_Meas {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8232
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "S"
                    }
                    [
                        position = 7952, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component Subsystem Power_Meas_DQpu {
                        layout = dynamic
                        component gen_c_function S_and_pf {
                            init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                            input_terminals = "real P;inherit Q;"
                            input_terminals_dimensions = "inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = "False;False;"
                            output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                            output_terminals = "inherit S;inherit pf;"
                            output_terminals_dimensions = "inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = "False;False;"
                        }
                        [
                            position = 8392, 8192
                            size = 48, 48
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 8024, 8232
                            hide_name = True
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 8024, 8320
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_Q {
                            a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8272
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8024, 8064
                            hide_name = True
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8128, 8112
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_P {
                            a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8024, 8152
                            hide_name = True
                        ]

                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8128, 8272
                            hide_name = True
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8056
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8144
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8240
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8328
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8112
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8272
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8144
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8240
                        ]

                        junction Junction1 sp
                        [
                            position = 7920, 8240
                        ]

                        junction Junction2 sp
                        [
                            position = 7928, 8328
                        ]

                        junction Junction3 sp
                        [
                            position = 7944, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 7960, 8056
                        ]

                        junction Junction5 sp
                        [
                            position = 8264, 8112
                        ]

                        junction Junction6 sp
                        [
                            position = 8264, 8272
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                        [
                            position = 8000, 7976
                        ]

                        connect Junction1 Id as Connection49
                        connect Junction1 Product4.in1 as Connection24
                        connect Junction2 Iq as Connection52
                        connect Junction2 Product3.in1 as Connection27
                        connect Junction3 Product2.in as Connection32
                        connect Junction3 Vq as Connection53
                        connect Junction4 Product1.in as Connection35
                        connect Junction4 Vd as Connection50
                        connect Junction5 LPF_P.out as Connection44
                        connect Junction5 P as Connection55
                        connect Junction6 LPF_Q.out as Connection47
                        connect Junction6 Q as Connection56
                        connect LPF_P.in Sum1.out as Connection39
                        connect LPF_Q.in Sum2.out as Connection40
                        connect Product1.in1 Junction1 as Connection25
                        connect Product2.in1 Junction2 as Connection28
                        connect Product3.in Junction4 as Connection36
                        connect Product4.in Junction3 as Connection33
                        connect S_and_pf.P Junction5 as Connection45
                        connect S_and_pf.Q Junction6 as Connection48
                        connect S_and_pf.S S as Connection51
                        connect S_and_pf.pf pf as Connection54
                        connect Sum1.in Product1.out as Connection29
                        connect Sum1.in1 Product2.out as Connection30
                        connect Sum2.in1 Product3.out as Connection38
                        connect Sum2.in Product4.out as Connection37

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                            fc_P {
                                label = "Active power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            fc_Q {
                                label = "Reactive power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                            
                            ENDCODE
                        }
                    }
                    [
                        position = 7864, 8160
                        size = 72, 128
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8048
                        rotation = right
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8048
                        rotation = right
                    ]

                    port Id {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8248
                        rotation = left
                    ]

                    port Iq {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8248
                        rotation = left
                    ]

                    port P {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8000
                        rotation = left
                    ]

                    port Q {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8000
                        rotation = left
                    ]

                    port S {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                        rotation = right
                    ]

                    port pf {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7992, 8288
                        rotation = right
                    ]

                    connect Gain4.out P as Connection10
                    connect Gain5.in Power_Meas_DQpu.Q as Connection21
                    connect Gain5.out Q as Connection11
                    connect Gain6.in Power_Meas_DQpu.S as Connection16
                    connect Gain6.out S as Connection13
                    connect Id Power_Meas_DQpu.Id as Connection14
                    connect Iq Power_Meas_DQpu.Iq as Connection17
                    connect Vd Power_Meas_DQpu.Vd as Connection15
                    connect Vq Power_Meas_DQpu.Vq as Connection18
                    connect pf Power_Meas_DQpu.pf as Connection19
                    connect Gain4.in Power_Meas_DQpu.P as Connection25
                    [
                        breakpoints = 7920, 8128
                    ]
                }
                [
                    position = 7952, 7624
                    size = 96, 232
                ]

                component "core/Single Phase Inverter" "Single Phase Inverter1" {
                    ctrl_src = "Internal modulator"
                    fvd_def_method = "LUT"
                    ref_sig_min_max = "[-1, 1]"
                }
                [
                    position = 7544, 8000
                    size = 127, 256
                ]

                component pas_resistor Ra {
                    resistance = "R_i"
                }
                [
                    position = 7728, 7848
                    rotation = down
                ]

                component pas_resistor Rs {
                    resistance = "R_s"
                }
                [
                    position = 8104, 8000
                    rotation = right
                    scale = -1, 1
                ]

                component pas_resistor Roa {
                    resistance = "R_o"
                }
                [
                    position = 8280, 7848
                    rotation = down
                ]

                component "core/Voltage RMS" Vrms {
                    frequency = "60"
                    op_mode = "Fixed frequency"
                }
                [
                    position = 8192, 8008
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VDC {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7344, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_z_domain_transfer LPF_dc {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 7248, 8000
                    scale = -1, 1
                ]

                component pas_inductor Lb {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8136
                    rotation = down
                ]

                component pas_resistor Rb {
                    resistance = "R_i"
                }
                [
                    position = 7728, 8136
                    rotation = down
                ]

                component pas_inductor Lob {
                    inductance = "L_o"
                }
                [
                    position = 8400, 8136
                    rotation = down
                ]

                component pas_resistor Rob {
                    resistance = "R_o"
                }
                [
                    position = 8288, 8136
                    rotation = down
                ]

                component pas_capacitor C {
                    capacitance = "2000e-6"
                }
                [
                    position = 7416, 8000
                    rotation = right
                ]

                component gen_probe Pref_probe {
                }
                [
                    position = 7384, 7640
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7928, 8000
                    scale = -1, 1
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7872, 7912
                    scale = -1, 1
                    size = 88, 48
                ]

                port B {
                    label = "B"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8624, 8136
                    scale = -1, 1
                ]

                port A {
                    label = "A"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8624, 7848
                    scale = -1, 1
                ]

                port + {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7904
                ]

                port - {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8096
                ]

                port Pref {
                    position = top:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7264, 7760
                ]

                tag Goto35 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7736, 7912
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto41 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto49 {
                    value = "Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7568
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto50 {
                    value = "P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7504
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto51 {
                    value = "pf"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7696
                    hide_name = True
                    size = 0, 0
                ]

                tag From31 {
                    value = "Vq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto52 {
                    value = "S"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7632
                    hide_name = True
                    size = 0, 0
                ]

                tag From34 {
                    value = "Id"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Vd"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7528
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Iq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7720
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto53 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7144, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                junction Junction397 pe
                [
                    position = 7344, 8096
                ]

                junction Junction188 sp
                [
                    position = 8032, 7528
                ]

                junction Junction189 sp
                [
                    position = 8032, 7592
                ]

                junction Junction190 sp
                [
                    position = 8032, 7656
                ]

                junction Junction191 sp
                [
                    position = 8032, 7720
                ]

                junction Junction385 pe
                [
                    position = 8104, 7920
                ]

                junction Junction387 pe
                [
                    position = 8104, 7848
                ]

                junction Junction388 pe
                [
                    position = 8104, 7920
                ]

                junction Junction393 pe
                [
                    position = 7344, 7904
                ]

                junction Junction395 pe
                [
                    position = 8024, 8136
                ]

                junction Junction396 pe
                [
                    position = 8192, 8136
                ]

                junction Junction398 pe
                [
                    position = 7416, 7904
                ]

                junction Junction399 pe
                [
                    position = 7416, 8096
                ]

                junction Junction401 sp
                [
                    position = 7800, 8000
                ]

                junction Junction403 sp
                [
                    position = 7312, 7760
                ]

                connect - Junction397 as Connection4543
                connect Junction397 VDC.n_node as Connection4544
                [
                    breakpoints = 7344, 8096; 7344, 8096
                ]
                connect La.p_node I.p_node as Connection378
                connect From31 Power_Meas.Vq as Connection403
                connect From32 Power_Meas.Vd as Connection402
                connect From34 Power_Meas.Id as Connection404
                connect Goto49 Junction189 as Connection544
                connect Goto52 Junction190 as Connection547
                connect Goto51 Junction191 as Connection550
                connect Junction188 Power_Meas.P as Connection540
                connect Junction189 Power_Meas.Q as Connection543
                connect Junction190 Power_Meas.S as Connection546
                connect Junction191 Power_Meas.pf as Connection549
                connect P.in Junction188 as Connection539
                connect Power_Meas.Iq From35 as Connection405
                connect Q.in Junction189 as Connection542
                connect S.in Junction190 as Connection545
                connect pf.in Junction191 as Connection548
                connect Ra.p_node La.n_node as Connection4453
                connect Ra.n_node "Single Phase Inverter1.a_in" as Connection4454
                connect Rs.p_node Junction385 as Connection4472
                connect E.p_node Junction385 as Connection4474
                connect Rs.n_node Cs.p_node as Connection4475
                connect I.n_node Junction387 as Connection4486
                connect Roa.n_node Junction387 as Connection4488
                connect Roa.p_node Loa.n_node as Connection4489
                connect Junction387 Junction388 as Connection4498
                [
                    breakpoints = 8104, 7848; 8104, 7848
                ]
                connect Junction388 Junction385 as Connection4499
                [
                    breakpoints = 8104, 7920
                ]
                connect Vrms.p_node Junction388 as Connection4500
                connect Junction393 + as Connection4521
                [
                    breakpoints = 7344, 7904
                ]
                connect VDC.p_node Junction393 as Connection4522
                connect VDC.out LPF_dc.in as Connection4526
                connect "Single Phase Inverter1.b_in" Rb.n_node as Connection4529
                [
                    breakpoints = 7624, 8136; 7680, 8136
                ]
                connect Rb.p_node Lb.n_node as Connection4530
                connect E.n_node Junction395 as Connection4531
                connect Junction395 Cs.n_node as Connection4532
                [
                    breakpoints = 8024, 8136
                ]
                connect Lb.p_node Junction395 as Connection4533
                connect Rob.p_node Lob.n_node as Connection4534
                connect Vrms.n_node Junction396 as Connection4536
                connect Junction396 Cs.n_node as Connection4537
                [
                    breakpoints = 8192, 8136
                ]
                connect Rob.n_node Junction396 as Connection4538
                connect Lob.p_node B as Connection4539
                connect "Single Phase Inverter1.pos_out" Junction398 as Connection4546
                connect Junction398 Junction393 as Connection4547
                [
                    breakpoints = 7376, 7904; 7376, 7904; 7376, 7904
                ]
                connect C.p_node Junction398 as Connection4548
                connect "Single Phase Inverter1.neg_out" Junction399 as Connection4549
                connect Junction399 Junction397 as Connection4550
                connect C.n_node Junction399 as Connection4551
                connect Junction401 V.in as Connection4596
                [
                    breakpoints = 7800, 8000
                ]
                connect Goto41 Junction401 as Connection4597
                connect Controller.mb "Single Phase Inverter1.InB" as Connection4599
                connect Controller.ma "Single Phase Inverter1.InA" as Connection4600
                connect Controller.En "Single Phase Inverter1.En" as Connection4601
                connect Goto53 LPF_dc.out as Connection4602
                connect Pref Junction403 as Connection4607
                connect Junction403 Controller.PREF as Connection4608
                connect Pref_probe.in Junction403 as Connection4609
                connect Loa.p_node A as Connection4610
                connect E.out BPF.in as Connection4611
                connect BPF.out Junction401 as Connection4612
                connect Goto35 BPF1.out as Connection4613
                connect BPF1.in I.out as Connection4614
                connect Junction188 Goto50 as Connection4615
                [
                    breakpoints = 8032, 7528; 8032, 7504
                ]

                C_s = "40e-6"
                Imax = "1"
                Imin = "-1"
                Ki_I = "4*20"
                Kp_I = "0.076*20"
                L_i = "0.0133/2"
                L_o = "38e-6/2"
                R_i = "1e-3/2"
                R_o = "2e-3/2"
                R_s = "0.3244"
                S = "50e3"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A lead acid battery interfaced with a three-phase inverter and LCL filter</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "10e3"
                        unit = "VA"
                        group = "1. Single-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "1. Single-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Single-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_inv"
                        unit = "s"
                        group = "1. Single-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "0.0165"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "2.5872"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "5e-6"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "1e-4"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    Kp_I {
                        label = "Current Regulator Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.6079*30"
                        group = "3. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Current Regulator Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "4*30"
                        group = "3. Cascaded Controller"
                    }

                    Imax {
                        label = "Current Regulator Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1.5"
                        group = "3. Cascaded Controller"
                    }

                    Imin {
                        label = "Current Regulator Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1.5"
                        group = "3. Cascaded Controller"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE

                    CODE define_icon
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE
                }
            }
            [
                position = 8336, 8144
                size = 64, 80
            ]

            component src_voltage Vs1 {
                init_const_value = "500"
            }
            [
                position = 8184, 8144
                rotation = right
            ]

            component Subsystem "Core coupling" {
                layout = dynamic
                component "core/Single Phase Core Coupling" "Core Coupling 1" {
                }
                [
                    position = 8184, 8168
                    size = 12, 256
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8264
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8264
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8088, 8072
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8072
                    rotation = down
                ]

                connect A "Core Coupling 1.a_in" as Connection1
                connect B "Core Coupling 1.b_in" as Connection2
                connect "Core Coupling 1.a_out" a as Connection3
                connect b "Core Coupling 1.b_out" as Connection4
            }
            [
                position = 8608, 8144
                size = 48, 80
            ]

            component Subsystem Measurement {
                layout = dynamic
                component "core/Voltage Measurement" Va {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8240, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8192, 8088
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe P {
                }
                [
                    position = 8888, 7856
                    rotation = down
                    scale = -1, 1
                ]

                component gen_z_domain_transfer "Hilbert Transform" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8112, 7832
                ]

                component gen_z_domain_transfer "Hilbert Transform1" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8104, 7952
                ]

                component gen_product Product1 {
                }
                [
                    position = 8512, 7808
                    hide_name = True
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8616, 7856
                    hide_name = True
                ]

                component gen_z_domain_transfer LPF_P {
                    a_coeff = "[1.0/(2*np.pi),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8768, 7856
                ]

                component gen_product Product2 {
                }
                [
                    position = 8512, 7896
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "0.5"
                }
                [
                    position = 8696, 7856
                    hide_name = True
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8288, 8008
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8344, 8152
                    size = 88, 48
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8216
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8216
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8096, 8088
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8088
                    rotation = down
                ]

                port Pm {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8856, 7784
                ]

                tag From31 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7888
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7840
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7928
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto60 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7784
                    hide_name = True
                    size = 60, 20
                ]

                tag From54 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7944, 7784
                    hide_name = True
                ]

                tag Goto61 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7832
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto66 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7904
                    hide_name = True
                    size = 60, 20
                ]

                tag From60 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7936, 7904
                    hide_name = True
                ]

                tag Goto67 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7952
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto68 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8464, 8152
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto69 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8424, 8008
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7800
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction647 pe
                [
                    position = 8240, 8216
                ]

                junction Junction651 pe
                [
                    position = 8240, 8088
                ]

                junction Junction386 sp
                [
                    position = 8024, 7784
                ]

                junction Junction392 sp
                [
                    position = 8016, 7904
                ]

                junction Junction652 sp
                [
                    position = 8824, 7856
                ]

                connect b Junction647 as Connection4978
                connect Junction647 Va.n_node as Connection4979
                [
                    breakpoints = 8240, 8216
                ]
                connect a Junction651 as Connection4996
                connect Junction651 Va.p_node as Connection4997
                [
                    breakpoints = 8240, 8088
                ]
                connect Ia.p_node Junction651 as Connection4998
                connect Ia.n_node A as Connection5000
                [
                    breakpoints = 8144, 8088
                ]
                connect B Junction647 as Connection5001
                [
                    breakpoints = 8144, 8216
                ]
                connect From54 Junction386 as Connection4478
                connect Junction386 Goto60 as Connection4479
                connect "Hilbert Transform.in" Junction386 as Connection4480
                connect "Hilbert Transform.out" Goto61 as Connection4481
                connect From60 Junction392 as Connection4503
                connect Junction392 Goto66 as Connection4504
                connect "Hilbert Transform1.in" Junction392 as Connection4505
                connect "Hilbert Transform1.out" Goto67 as Connection4506
                connect Sum1.in Product1.out as Connection29
                connect Sum1.in1 Product2.out as Connection30
                connect From31 Product2.in as Connection5032
                connect From32 Product1.in as Connection5033
                connect From34 Product1.in1 as Connection5034
                connect From35 Product2.in1 as Connection5035
                connect P.in Junction652 as Connection5036
                connect Junction652 Pm as Connection5037
                [
                    breakpoints = 8816, 7856; 8816, 7856; 8816, 7856; 8816, 7832
                ]
                connect LPF_P.out Junction652 as Connection5038
                connect LPF_P.in Gain1.out as Connection5039
                connect Gain1.in Sum1.out as Connection5040
                connect Ia.out BPF.in as Connection5041
                connect BPF.out Goto69 as Connection5042
                connect Goto68 BPF1.out as Connection5043
                connect BPF1.in Va.out as Connection5044
            }
            [
                position = 8464, 8288
                size = 48, 80
            ]

            component Subsystem Modbus {
                layout = dynamic
                component gen_terminator Termination1 {
                }
                [
                    position = 8400, 7920
                ]

                component src_constant C_u12 {
                    execution_rate = "Ts"
                }
                [
                    position = 7968, 7800
                ]

                component src_constant C_u13 {
                    execution_rate = "Ts"
                    value = "50"
                }
                [
                    position = 7920, 7872
                ]

                component src_constant C_u11 {
                    execution_rate = "Ts"
                }
                [
                    position = 8008, 7720
                ]

                component "core/ModBus Device" "ModBus Device1 (config1)" {
                    execution_rate = "Ts"
                }
                [
                    position = 8192, 7992
                    size = 184, 184
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts"
                }
                [
                    position = 7864, 8064
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe P_probe {
                }
                [
                    position = 7888, 8000
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8368, 8064
                ]

                component gen_bus_join "Bus Join1" {
                }
                [
                    position = 7968, 8128
                ]

                component "core/Dynamic Table" "Dynamic Table" {
                    execution_rate = "Ts"
                    import_dynamic_table_file = "C:/Users/zholbar1/Documents/microgrid_testbed/APRA-E MST project/Q4/Test 2/Solar Village Test2/P1max.csv"
                    signal_names = "[\'P1max\']"
                    x_vec = "[0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788, 792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844, 848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 960, 964, 968, 972, 976, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1092, 1096, 1100, 1104, 1108, 1112, 1116, 1120, 1124, 1128, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1180, 1184, 1188, 1192, 1196, 1200, 1204, 1208, 1212, 1216, 1220, 1224, 1228, 1232, 1236, 1240, 1244, 1248, 1252, 1256, 1260, 1264, 1268, 1272, 1276, 1280, 1284, 1288, 1292, 1296, 1300, 1304, 1308, 1312, 1316, 1320, 1324, 1328, 1332, 1336, 1340, 1344, 1348, 1352, 1356, 1360, 1364, 1368, 1372, 1376, 1380, 1384, 1388, 1392, 1396, 1400, 1404, 1408, 1412, 1416, 1420, 1424, 1428, 1432, 1436, 1440, 1444, 1448, 1452, 1456, 1460, 1464, 1468, 1472, 1476, 1480, 1484, 1488, 1492, 1496, 1500, 1504, 1508, 1512, 1516, 1520, 1524, 1528, 1532, 1536, 1540, 1544, 1548, 1552, 1556, 1560, 1564, 1568, 1572, 1576, 1580, 1584, 1588, 1592, 1596, 1600, 1604, 1608, 1612, 1616, 1620, 1624, 1628, 1632, 1636, 1640, 1644, 1648, 1652, 1656, 1660, 1664, 1668, 1672, 1676, 1680, 1684, 1688, 1692, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1724, 1728, 1732, 1736, 1740, 1744, 1748, 1752, 1756, 1760, 1764, 1768, 1772, 1776, 1780, 1784, 1788, 1792, 1796, 1800, 1804, 1808, 1812, 1816, 1820, 1824, 1828, 1832, 1836, 1840, 1844, 1848, 1852, 1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1900, 1904, 1908, 1912, 1916, 1920, 1924, 1928, 1932, 1936, 1940, 1944, 1948, 1952, 1956, 1960, 1964, 1968, 1972, 1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020, 2024, 2028, 2032, 2036, 2040, 2044, 2048, 2052, 2056, 2060, 2064, 2068, 2072, 2076, 2080, 2084, 2088, 2092, 2096, 2100, 2104, 2108, 2112, 2116, 2120, 2124, 2128, 2132, 2136, 2140, 2144, 2148, 2152, 2156, 2160, 2164, 2168, 2172, 2176, 2180, 2184, 2188, 2192, 2196, 2200, 2204, 2208, 2212, 2216, 2220, 2224, 2228, 2232, 2236, 2240, 2244, 2248, 2252, 2256, 2260, 2264, 2268, 2272, 2276, 2280, 2284, 2288, 2292, 2296, 2300, 2304, 2308, 2312, 2316, 2320, 2324, 2328, 2332, 2336, 2340, 2344, 2348, 2352, 2356, 2360, 2364, 2368, 2372, 2376, 2380, 2384, 2388, 2392, 2396, 2400, 2404, 2408, 2412, 2416, 2420, 2424, 2428, 2432, 2436, 2440, 2444, 2448, 2452, 2456, 2460, 2464, 2468, 2472, 2476, 2480, 2484, 2488, 2492, 2496, 2500, 2504, 2508, 2512, 2516, 2520, 2524, 2528, 2532, 2536, 2540, 2544, 2548, 2552, 2556, 2560, 2564, 2568, 2572, 2576, 2580, 2584, 2588, 2592, 2596, 2600, 2604, 2608, 2612, 2616, 2620, 2624, 2628, 2632, 2636, 2640, 2644, 2648, 2652, 2656, 2660, 2664, 2668, 2672, 2676, 2680, 2684, 2688, 2692, 2696, 2700, 2704, 2708, 2712, 2716, 2720, 2724, 2728, 2732, 2736, 2740, 2744, 2748, 2752, 2756, 2760, 2764, 2768, 2772, 2776, 2780, 2784, 2788, 2792, 2796, 2800, 2804, 2808, 2812, 2816, 2820, 2824, 2828, 2832, 2836, 2840, 2844, 2848, 2852, 2856, 2860, 2864, 2868, 2872, 2876, 2880, 2884, 2888, 2892, 2896, 2900, 2904, 2908, 2912, 2916, 2920, 2924, 2928, 2932, 2936, 2940, 2944, 2948, 2952, 2956, 2960, 2964, 2968, 2972, 2976, 2980, 2984, 2988, 2992, 2996, 3000, 3004, 3008, 3012, 3016, 3020, 3024, 3028, 3032, 3036, 3040, 3044, 3048, 3052, 3056, 3060, 3064, 3068, 3072, 3076, 3080, 3084, 3088, 3092, 3096, 3100, 3104, 3108, 3112, 3116, 3120, 3124, 3128, 3132, 3136, 3140, 3144, 3148, 3152, 3156, 3160, 3164, 3168, 3172, 3176, 3180, 3184, 3188, 3192, 3196, 3200, 3204, 3208, 3212, 3216, 3220, 3224, 3228, 3232, 3236, 3240, 3244, 3248, 3252, 3256, 3260, 3264, 3268, 3272, 3276, 3280, 3284, 3288, 3292, 3296, 3300, 3304, 3308, 3312, 3316, 3320, 3324, 3328, 3332, 3336, 3340, 3344, 3348, 3352, 3356, 3360, 3364, 3368, 3372, 3376, 3380, 3384, 3388, 3392, 3396, 3400, 3404, 3408, 3412, 3416, 3420, 3424, 3428, 3432, 3436, 3440, 3444, 3448, 3452, 3456, 3460, 3464, 3468, 3472, 3476, 3480, 3484, 3488, 3492, 3496, 3500, 3504, 3508, 3512, 3516, 3520, 3524, 3528, 3532, 3536, 3540, 3544, 3548, 3552, 3556, 3560, 3564, 3568, 3572, 3576, 3580, 3584, 3588, 3592, 3596, 3600, 3604, 3608, 3612, 3616, 3620, 3624, 3628, 3632, 3636, 3640, 3644, 3648, 3652, 3656, 3660, 3664, 3668, 3672, 3676, 3680, 3684, 3688, 3692, 3696, 3700, 3704, 3708, 3712, 3716, 3720, 3724, 3728, 3732, 3736, 3740, 3744, 3748, 3752, 3756, 3760, 3764, 3768, 3772, 3776, 3780, 3784, 3788, 3792, 3796, 3800, 3804, 3808, 3812, 3816, 3820, 3824, 3828, 3832, 3836, 3840, 3844, 3848, 3852, 3856, 3860, 3864, 3868, 3872, 3876, 3880, 3884, 3888, 3892, 3896, 3900, 3904, 3908, 3912, 3916, 3920, 3924, 3928, 3932, 3936, 3940, 3944, 3948, 3952, 3956, 3960, 3964, 3968, 3972, 3976, 3980, 3984, 3988, 3992, 3996, 4000, 4004, 4008, 4012, 4016, 4020, 4024, 4028, 4032, 4036, 4040, 4044, 4048, 4052, 4056, 4060, 4064, 4068, 4072, 4076, 4080, 4084, 4088, 4092, 4096, 4100, 4104, 4108, 4112, 4116, 4120, 4124, 4128, 4132, 4136, 4140, 4144, 4148, 4152, 4156, 4160, 4164, 4168, 4172, 4176, 4180, 4184, 4188, 4192, 4196, 4200, 4204, 4208, 4212, 4216, 4220, 4224, 4228, 4232, 4236, 4240, 4244, 4248, 4252, 4256, 4260, 4264, 4268, 4272, 4276, 4280, 4284, 4288, 4292, 4296, 4300, 4304, 4308, 4312, 4316, 4320, 4324, 4328, 4332, 4336, 4340, 4344, 4348, 4352, 4356, 4360, 4364, 4368, 4372, 4376, 4380, 4384, 4388, 4392, 4396, 4400, 4404, 4408, 4412, 4416, 4420, 4424, 4428, 4432, 4436, 4440, 4444, 4448, 4452, 4456, 4460, 4464, 4468, 4472, 4476, 4480, 4484, 4488, 4492, 4496, 4500, 4504, 4508, 4512, 4516, 4520, 4524, 4528, 4532, 4536, 4540, 4544, 4548, 4552, 4556, 4560, 4564, 4568, 4572, 4576, 4580, 4584, 4588, 4592, 4596, 4600, 4604, 4608, 4612, 4616, 4620, 4624, 4628, 4632, 4636, 4640, 4644, 4648, 4652, 4656, 4660, 4664, 4668, 4672, 4676, 4680, 4684, 4688, 4692, 4696, 4700, 4704, 4708, 4712, 4716, 4720, 4724, 4728, 4732, 4736, 4740, 4744, 4748, 4752, 4756, 4760, 4764, 4768, 4772, 4776, 4780, 4784, 4788, 4792, 4796, 4800, 4804, 4808, 4812, 4816, 4820, 4824, 4828, 4832, 4836, 4840]"
                    y_vec = "[[6235.877575959929, 6235.877575959929, 6239.195840882765, 6232.566381941354, 6219.300925299671, 6109.9413368856685, 5864.8840112554335, 5811.933879925354, 5901.294097243253, 5897.980628589916, 6060.246580294778, 6192.786063716469, 6215.989936530523, 6176.191045559711, 6186.136682123104, 6215.9688475625035, 6225.908966704829, 6239.174750087261, 6235.856485423443, 6222.597895754777, 6232.538261572044, 6229.227108658306, 6232.538261572044, 6235.856485423443, 6229.227108658306, 6242.486025092966, 6232.538261572044, 6235.856485423443, 6239.174750087261, 6235.856485423443, 6232.538261572044, 6245.804370936686, 6235.856485423443, 6239.174750087261, 6245.804370936686, 6235.856485423443, 6235.856485423443, 6245.804370936686, 6235.856485423443, 6222.597895754777, 6239.174750087261, 6255.745589439051, 6239.174750087261, 6255.745589439051, 6249.11572671189, 6252.434153258014, 6242.486025092966, 6239.174750087261, 6229.227108658306, 6239.174750087261, 6222.597895754777, 6215.9688475625035, 6232.538261572044, 6232.538261572044, 6239.174750087261, 6242.486025092966, 6232.538261572044, 6229.227108658306, 6239.174750087261, 6252.434153258014, 6225.908966704829, 6219.279836068613, 6222.597895754777, 6225.908966704829, 6219.279836068613, 6212.650870846148, 6209.339965263032, 6215.9688475625035, 6215.9688475625035, 6212.650870846148, 6192.764976613422, 6242.486025092966, 6199.393440153968, 6215.9688475625035, 6196.082701861083, 6202.711249707748, 6229.227108658306, 6209.339965263032, 6209.339965263032, 6206.022071886672, 6199.393440153968, 6219.258746839228, 6206.000983715175, 6212.629782144175, 6222.5768062625475, 6215.947758596165, 6202.690161802355, 6202.690161802355, 6199.372352516017, 6199.372352516017, 6212.629782144175, 6209.318876825632, 6229.206018643248, 6225.887876951081, 6239.153659293398, 6222.5768062625475, 6232.524201388487, 6229.206018643248, 6222.5768062625475, 6232.524201388487, 6219.258746839228, 6229.206018643248, 6232.524201388487, 6202.690161802355, 6206.000983715175, 6196.061614490769, 6182.80502676262, 6206.000983715175, 6189.433235746853, 6215.947758596165, 6219.258746839228, 6199.372352516017, 6206.000983715175, 6229.206018643248, 6222.5768062625475, 6212.629782144175, 6202.690161802355, 6212.629782144175, 6215.947758596165, 6219.258746839228, 6212.629782144175, 6199.372352516017, 6206.000983715175, 6202.690161802355, 6199.372352516017, 6202.690161802355, 6215.947758596165, 6215.947758596165, 6222.5768062625475, 6209.318876825632, 6202.690161802355, 6189.433235746853, 6182.80502676262, 6172.8595192517905, 6176.169959813711, 6162.914399188147, 6172.8595192517905, 6172.8595192517905, 6169.542093218628, 6182.80502676262, 6189.433235746853, 6202.690161802355, 6206.000983715175, 6206.000983715175, 6212.629782144175, 6209.318876825632, 6212.629782144175, 6206.000983715175, 6212.629782144175, 6205.986924935115, 6192.729831445482, 6196.040527122162, 6179.473414509918, 6186.101537854682, 6182.7839404734395, 6192.729831445482, 6192.729831445482, 6196.040527122162, 6199.358294091658, 6186.101537854682, 6212.61572301046, 6196.040527122162, 6212.61572301046, 6196.040527122162, 6196.040527122162, 6169.528036420553, 6156.272822526702, 6152.955613882688, 6146.328356006349, 6143.018306833155, 6156.272822526702, 6136.391313220035, 6149.645476929414, 6146.328356006349, 6149.645476929414, 6146.328356006349, 6149.645476929414, 6149.645476929414, 6139.701274122314, 6152.955613882688, 6139.701274122314, 6136.391313220035, 6146.328356006349, 6152.955613882688, 6162.9003427571, 6172.845462270786, 6192.729831445482, 6189.412148916421, 6192.729831445482, 6196.040527122162, 6196.040527122162, 6202.66907389866, 6189.412148916421, 6186.101537854682, 6189.412148916421, 6179.473414509918, 6196.040527122162, 6186.101537854682, 6176.1559026506775, 6182.7839404734395, 6169.528036420553, 6166.217682110646, 6166.217682110646, 6176.1559026506775, 6166.217682110646, 6189.412148916421, 6172.845462270786, 6176.1559026506775, 6182.7839404734395, 6192.729831445482, 6182.7839404734395, 6192.729831445482, 6179.473414509918, 6182.7839404734395, 6192.729831445482, 6192.729831445482, 6205.986924935115, 6196.026468877374, 6199.344235668058, 6192.7157733796375, 6205.972866155809, 6202.655015297139, 6192.7157733796375, 6192.7157733796375, 6189.398091030419, 6199.344235668058, 6192.7157733796375, 6202.655015297139, 6205.972866155809, 6199.344235668058, 6205.972866155809, 6186.08748014865, 6186.08748014865, 6182.769882948278, 6176.141845488418, 6176.141845488418, 6176.141845488418, 6196.026468877374, 6209.283729433717, 6199.344235668058, 6212.601663877494, 6205.972866155809, 6222.548686942168, 6215.912610322655, 6225.8597572820045, 6212.601663877494, 6215.912610322655, 6212.601663877494, 6202.655015297139, 6222.548686942168, 6199.344235668058, 6209.283729433717, 6212.601663877494, 6222.548686942168, 6235.807274178051, 6235.807274178051, 6242.436812641836, 6219.230627869315, 6196.026468877374, 6205.972866155809, 6186.08748014865, 6196.026468877374, 6176.141845488418, 6166.1965971895825, 6149.631421239436, 6152.941558007059, 6146.31430050294, 6143.0042515164405, 6159.568990635527, 6176.141845488418, 6166.1965971895825, 6176.141845488418, 6186.08748014865, 6192.7157733796375, 6189.398091030419, 6199.344235668058, 6182.769882948278, 6176.141845488418, 6176.141845488418, 6172.824376800728, 6166.1965971895825, 6166.1965971895825, 6166.1965971895825, 6159.568990635527, 6156.258766465543, 6166.189568882952, 6176.127788326925, 6202.640956696373, 6189.384033145181, 6219.216568385473, 6219.216568385473, 6222.534627283091, 6225.845697448572, 6222.534627283091, 6225.845697448572, 6222.534627283091, 6219.216568385473, 6222.534627283091, 6225.845697448572, 6222.534627283091, 6232.474990751844, 6239.1044474474475, 6249.05245202094, 6242.4227519431515, 6259.000819225779, 6255.682313216035, 6245.7340665794445, 6262.3123343547095, 6252.363847193448, 6252.363847193448, 6245.7340665794445, 6265.630920119423, 6255.682313216035, 6259.000819225779, 6259.000819225779, 6255.682313216035, 6265.630920119423, 6285.522170791168, 6255.682313216035, 6285.522170791168, 6285.522170791168, 6302.09576938168, 6288.834000594202, 6282.203348605587, 6295.4648077960865, 6298.78378523599, 6272.261179642365, 6288.834000594202, 6275.572852996284, 6278.891596847973, 6282.203348605587, 6282.203348605587, 6268.9425145974255, 6268.9425145974255, 6268.9425145974255, 6292.152900642946, 6302.09576938168, 6305.414823742613, 6312.046015225396, 6312.046015225396, 6331.940498298148, 6331.940498298148, 6305.414823742613, 6312.046015225396, 6325.308853492605, 6302.09576938168, 6312.046015225396, 6331.940498298148, 6315.365184129161, 6325.308853492605, 6328.6281734304175, 6328.6281734304175, 6328.6281734304175, 6321.982538840184, 6318.663294232884, 6295.45777610524, 6298.76972169083, 6298.76972169083, 6285.50810790287, 6292.138837425218, 6268.928452541623, 6285.50810790287, 6308.7198523960315, 6282.196317244168, 6298.76972169083, 6265.61685823141, 6272.247117418921, 6258.98675767521, 6275.565821801079, 6295.45777610524, 6272.247117418921, 6302.088737527615, 6295.45777610524, 6288.826969067571, 6295.45777610524, 6282.196317244168, 6252.356816587984, 6258.98675767521, 6262.298272635346, 6255.668251835122, 6282.196317244168, 6278.877534291099, 6285.50810790287, 6305.400759872009, 6335.245827742387, 6341.877695829065, 6338.565259613115, 6358.46152759418, 6358.46152759418, 6391.624872741101, 6401.585119877903, 6404.8912038318595, 6414.809662610006, 6431.411458729798, 6444.7075775309395, 6441.401084836087, 6444.7075775309395, 6461.310891853364, 6467.92430638489, 6474.537850646918, 6491.142634139058, 6511.055353620987, 6507.748215732684, 6451.320662561364, 6235.779153470426, 5878.0307559417115, 5778.760611451165, 5878.0307559417115, 5815.154688919261, 5339.3560018714925, 5131.671486306303, 5448.263744661252, 5745.684405546302, 6040.274689997604, 6159.547906268326, 5864.792766178853, 5418.550976584816, 4737.103234832049, 4193.976795284722, 4177.679801143931, 4229.85414090954, 4229.847222434175, 5032.8893078188285, 5620.0295306520975, 5983.965274324653, 6368.399604142981, 6511.055353620987, 6530.969197109819, 6527.661874219171, 6537.58393380947, 6540.891347401233, 6527.661874219171, 6524.28421418695, 6507.748215732684, 6484.5287680613155, 6464.617582847459, 6451.320662561364, 6434.717850404521, 6428.105100715857, 6414.809662610006, 6401.585119877903, 6408.197322346969, 6398.2790705976295, 6404.8912038318595, 6398.2790705976295, 6404.8912038318595, 6398.2790705976295, 6418.186229757971, 6421.492486117931, 6414.809662610006, 6398.2790705976295, 6394.902715748813, 6381.66494330567, 6368.399604142981, 6358.45449439279, 6348.502678800091, 6355.134841626164, 6338.55119414536, 6338.55119414536, 6341.87066301667, 6325.287756240318, 6321.975506502592, 6312.02491893457, 6308.712820379915, 6295.443712724069, 6302.081705673722, 6321.975506502592, 6312.02491893457, 6312.02491893457, 6318.656261975377, 6312.02491893457, 6318.656261975377, 6305.393727936967, 6312.02491893457, 6305.393727936967, 6305.393727936967, 6308.712820379915, 6292.131805816615, 6288.812906014829, 6308.712820379915, 6308.712820379915, 6321.975506502592, 6318.656261975377, 6321.975506502592, 6331.919400569586, 6315.344087596602, 6308.712820379915, 6302.081705673722, 6292.131805816615, 6275.544728216526, 6288.80587448872, 6268.914390486533, 6265.602796344109, 6252.335724772674, 6232.446870392087, 6229.135718605029, 6222.506507967159, 6232.446870392087, 6215.877462053807, 6205.930689822405, 6199.302060401796, 6186.045307035151, 6152.906418321425, 6139.645053610672, 6129.708278822889, 6119.76487818604, 6129.708278822889, 6139.645053610672, 6152.906418321425, 6172.789234354501, 6189.355917376994, 6205.930689822405, 6225.8175777839315, 6232.446870392087, 6249.02432994078, 6249.02432994078, 6232.446870392087, 6225.8175777839315, 6225.8175777839315, 6212.559486483084, 6195.99132326872, 6189.355917376994, 6176.099674006258, 6159.533850024505, 6146.27916174788, 6152.906418321425, 6149.5892541742405, 6166.16145565837, 6186.045307035151, 6199.302060401796, 6219.188449420023, 6225.8175777839315, 6245.705944841631, 6229.135718605029, 6219.188449420023, 6215.877462053807, 6202.612839497103, 6189.355917376994, 6186.045307035151, 6186.045307035151, 6182.727710377398, 6199.302060401796, 6199.302060401796, 6205.930689822405, 6212.559486483084, 6222.506507967159, 6235.765093117716, 6245.705944841631, 6245.705944841631, 6258.972696125356, 6268.914390486533, 6285.4940450152735, 6305.386696002096, 6302.067641966455, 6312.017886837967, 6318.6492297180375, 6318.6492297180375, 6328.5930109461815, 6325.273691406309, 6328.5930109461815, 6315.330023242414, 6318.642197460868, 6308.691724332592, 6302.0606101130825, 6292.117742599931, 6282.168191800258, 6282.168191800258, 6292.117742599931, 6298.748626374389, 6295.429649343588, 6288.798842962786, 6295.429649343588, 6288.798842962786, 6282.168191800258, 6268.907359459254, 6245.6989144076315, 6229.128688602224, 6215.870432400599, 6199.295031191415, 6212.552456918003, 6205.923660434162, 6205.923660434162, 6229.128688602224, 6252.328694167934, 6265.595765400729, 6278.856440457114, 6298.748626374389, 6302.0606101130825, 6315.330023242414, 6305.379664067397, 6298.748626374389, 6305.379664067397, 6288.798842962786, 6312.010854741538, 6321.9614418279125, 6321.9614418279125, 6338.537128678271, 6341.856597392375, 6348.4886128632, 6325.273691406309, 6325.273691406309, 6315.330023242414, 6312.010854741538, 6315.330023242414, 6315.330023242414, 6315.330023242414, 6312.010854741538, 6328.5930109461815, 6348.4886128632, 6378.338004366872, 6371.705334898602, 6355.120775378626, 6371.705334898602, 6375.018134935405, 6381.650875835114, 6368.385537280034, 6375.018134935405, 6388.28375917745, 6371.705334898602, 6348.4886128632, 6381.650875835114, 6371.705334898602, 6375.018134935405, 6384.970816734478, 6371.705334898602, 6371.69830139097, 6375.011101351784, 6375.011101351784, 6375.011101351784, 6371.69830139097, 6371.69830139097, 6378.330970707341, 6365.06577577857, 6365.06577577857, 6368.378503848802, 6371.69830139097, 6361.746050509677, 6358.433394789606, 6355.113742255101, 6355.113742255101, 6358.433394789606, 6365.06577577857, 6361.746050509677, 6361.746050509677, 6361.746050509677, 6361.746050509677, 6338.530095944978, 6368.378503848802, 6351.801159232139, 6375.011101351784, 6375.011101351784, 6381.643842100077, 6394.902715748813, 6408.197322346969, 6414.809662610006, 6424.798776474582, 6418.1158842481545, 6434.717850404521, 6414.809662610006, 6418.1158842481545, 6408.197322346969, 6388.276725291967, 6375.011101351784, 6361.746050509677, 6348.481579895001, 6371.69830139097, 6365.06577577857, 6348.481579895001, 6368.378503848802, 6361.746050509677, 6378.330970707341, 6384.963782924013, 6394.902715748813, 6401.514778042433, 6384.963782924013, 6404.8912038318595, 6401.514778042433, 6384.963782924013, 6365.06577577857, 6351.801159232139, 6331.898302842532, 6321.954409490826, 6312.00382264528, 6278.849409179472, 6262.270149198765, 6252.328694167934, 6262.270149198765, 6258.958634576223, 6249.0102689017895, 6282.161160439718, 6288.791811437028, 6295.422617653609, 6295.422617653609, 6305.3656001985155, 6321.94737715391, 6295.422617653609, 6292.103679383947, 6265.581703514497, 6268.900328432153, 6232.43281021331, 6232.43281021331, 6212.54542735311, 6195.970235905805, 6182.7136528553065, 6189.341859494047, 6192.659541123869, 6182.7136528553065, 6179.396099126551, 6199.288001981222, 6195.970235905805, 6186.0242204809865, 6199.288001981222, 6189.341859494047, 6195.970235905805, 6205.916631046107, 6225.8035179527205, 6255.640129075457, 6242.373539503496, 6242.373539503496, 6242.373539503496, 6262.270149198765, 6245.691883973814, 6282.161160439718, 6255.640129075457, 6292.103679383947, 6298.73456283096, 6302.053578259879, 6295.422617653609, 6318.635165203868, 6335.21066446849, 6325.266658989553, 6315.3159588889075, 6335.21066446849, 6345.162037368516, 6335.21066446849, 6348.474546926966, 6348.474546926966, 6348.474546926966, 6348.474546926966, 6335.21066446849, 6341.842531768748, 6318.635165203868, 6331.898302842532, 6351.7941261862425, 6345.162037368516, 6341.842531768748, 6355.106709131741, 6368.371470417733, 6371.691267883504, 6375.0040677683255, 6365.058742423982, 6381.643842100077, 6368.371470417733, 6355.106709131741, 6371.691267883504, 6398.208729501125, 6414.809662610006, 6408.197322346969, 6421.422139883562, 6408.197322346969, 6414.809662610006, 6408.197322346969, 6401.514778042433, 6418.1158842481545, 6421.422139883562, 6414.809662610006, 6408.197322346969, 6421.422139883562, 6424.728429518048, 6434.717850404521, 6414.809662610006, 6434.717850404521, 6431.411458729798, 6447.9437514777455, 6438.024275628183, 6444.637226276342, 6441.330734289336, 6441.330734289336, 6454.627254559588, 6444.637226276342, 6441.330734289336, 6451.320662561364, 6444.637226276342, 6441.330734289336, 6461.2405370802135, 6464.5472273806945, 6457.933879436212, 6441.330734289336, 6454.627254559588, 6454.627254559588, 6438.024275628183, 6481.151523755383, 6464.5472273806945, 6464.5472273806945, 6461.2405370802135, 6457.933879436212, 6451.320662561364, 6418.1158842481545, 6414.809662610006, 6414.809662610006, 6414.809662610006, 6414.809662610006, 6391.589702938191, 6391.589702938191, 6401.514778042433, 6391.589702938191, 6401.514778042433, 6418.1158842481545, 6411.503475310509, 6408.197322346969, 6401.514778042433, 6401.514778042433, 6384.9567491137095, 6394.902715748813, 6381.636808365197, 6375.0040677683255, 6388.269691406639, 6401.514778042433, 6398.208729501125, 6398.208729501125, 6408.197322346969, 6414.809662610006, 6418.1158842481545, 6421.422139883562, 6418.1158842481545, 6411.503475310509, 6411.503475310509, 6401.514778042433, 6401.514778042433, 6384.9497153035645, 6381.636808365197, 6378.316903388761, 6388.269691406639, 6388.269691406639, 6388.269691406639, 6394.902715748813, 6391.582668978087, 6391.582668978087, 6388.269691406639, 6398.208729501125, 6404.820861259823, 6424.728429518048, 6447.9437514777455, 6447.9437514777455, 6457.933879436212, 6467.853950226867, 6484.458408467813, 6481.151523755383, 6481.151523755383, 6474.537850646918, 6447.9437514777455, 6467.853950226867, 6454.627254559588, 6444.637226276342, 6464.5472273806945, 6461.2405370802135, 6491.0722731936585, 6477.844671150561, 6494.449614720478, 6491.0722731936585, 6514.2921570067065, 6501.0636704191675, 6494.449614720478, 6504.370745317016, 6514.2921570067065, 6481.151523755383, 6497.756626850425, 6494.449614720478, 6501.0636704191675, 6494.449614720478, 6507.6778514343505, 6514.2921570067065, 6514.2921570067065, 6514.2921570067065, 6504.370745317016, 6534.206180809898, 6510.984988661928, 6510.984988661928, 6504.370745317016, 6501.0636704191675, 6497.756626850425, 6491.0722731936585, 6467.853950226867, 6464.5472273806945, 6454.627254559588, 6454.627254559588, 6444.637226276342, 6451.320662561364, 6441.330734289336, 6444.637226276342, 6438.024275628183, 6451.320662561364, 6461.2405370802135, 6457.933879436212, 6461.2405370802135, 6451.320662561364, 6457.933879436212, 6457.933879436212, 6461.2405370802135, 6457.933879436212, 6461.2405370802135, 6464.5472273806945, 6464.5472273806945, 6447.9437514777455, 6467.853950226867, 6477.844671150561, 6474.537850646918, 6474.537850646918, 6474.537850646918, 6487.765324945395, 6491.0722731936585, 6497.756626850425, 6510.984988661928, 6497.756626850425, 6491.0722731936585, 6481.151523755383, 6461.2405370802135, 6451.320662561364, 6474.537850646918, 6467.853950226867, 6457.933879436212, 6461.2405370802135, 6451.320662561364, 6451.320662561364, 6438.024275628183, 6434.717850404521, 6428.034753039538, 6424.728429518048, 6408.197322346969, 6398.208729501125, 6365.051709069555, 6371.684234376197, 6378.316903388761, 6374.997034185025, 6404.820861259823, 6404.820861259823, 6388.2626575214745, 6398.208729501125, 6404.820861259823, 6394.902715748813, 6374.997034185025, 6368.364436986827, 6345.14797158884, 6338.5160304788915, 6321.940344817163, 6338.5160304788915, 6338.5160304788915, 6365.051709069555, 6351.780060094938, 6341.835498957182, 6345.14797158884, 6338.5160304788915, 6325.252594156556, 6315.308926712412, 6318.6211006903795, 6318.6211006903795, 6338.5160304788915, 6355.099676008548, 6371.684234376197, 6394.902715748813, 6388.2626575214745, 6401.514778042433, 6428.034753039538, 6431.411458729798, 6431.411458729798, 6424.728429518048, 6431.411458729798, 6421.422139883562, 6408.126979040764, 6391.575635018137, 6401.514778042433, 6414.809662610006, 6408.126979040764, 6418.1158842481545, 6438.024275628183, 6424.728429518048, 6431.411458729798, 6431.411458729798, 6454.627254559588, 6447.9437514777455, 6444.637226276342, 6444.637226276342, 6447.9437514777455, 6457.933879436212, 6444.637226276342, 6444.637226276342, 6447.9437514777455, 6451.25030989815, 6424.728429518048, 6388.2626575214745, 6365.04467571529, 6321.933312480584, 6282.1470977191675, 6252.307602354795, 6212.531368223882, 6199.273943561405, 6169.443695648403, 6129.6801697022465, 6126.363316031831, 6086.606760595995, 6046.849837884171, 6007.106815956171, 5990.5528161598095, 5934.263196041097, 5868.0565584133055, 5815.1125864927035, 5725.792447709261, 5620.001492908669, 5497.753741292365, 5382.209343656677, 5303.027738250596, 5250.270080098342, 5260.157057486469, 5322.817164956042, 5382.209343656677, 5454.824597553893, 5530.781609273316, 5583.647529168205, 5600.1659705109105, 5620.001492908669, 5610.083436227055, 5580.339835958403, 5557.215896951508, 5524.175477662277, 5487.84325003432, 5471.3365268763155, 5474.634927205863, 5504.358754436777, 5553.908743950114, 5613.391726026851, 5656.3563357131825, 5682.810627671378, 5692.7258864985715, 5676.191418030225, 5669.579471316345, 5679.500991477794, 5676.191418030225, 5672.88891907945, 5689.4160631838795, 5682.803615664063, 5656.3563357131825, 5636.523543390692, 5603.474062712777, 5570.424166637455, 5550.601659210982, 5567.1237496805925, 5580.339835958403, 5596.864952972257, 5616.6930721508, 5616.6930721508, 5606.77521209291, 5580.339835958403, 5547.301649200598, 5484.5445640645585, 5438.314484580621, 5418.508974079665, 5398.706138938416, 5402.009924042587, 5405.306784615485, 5415.2118150033175, 5438.314484580621, 5474.634927205863, 5514.2632991060555, 5543.994701285888, 5553.908743950114, 5567.1237496805925, 5583.647529168205, 5583.647529168205, 5603.474062712777, 5613.384716868872, 5633.214797839468, 5646.436146155734, 5679.500991477794, 5719.1786458722645, 5775.407124293818, 5828.3402174744015, 5861.437783900778, 5904.467214767758, 5924.328388033774, 5947.505654987913, 5973.993041128783, 6000.483662767551, 6000.483662767551, 6026.977453838134, 6026.977453838134, 6030.292909585243, 6040.22551759432, 6020.353712513767, 6036.91694163874, 6030.292909585243, 6046.849837884171, 6063.414984620592, 6073.34901864774, 6093.232396747552, 6096.541770643482, 6089.916042501645, 6103.1676821028495, 6099.8582167158975, 6096.541770643482, 6116.420051317517, 6119.7367702060255, 6119.7367702060255, 6139.616943359631, 6139.616943359631, 6162.80897597432, 6179.38204178662, 6199.26691435178, 6215.842313789624, 6215.842313789624, 6225.789458122248, 6235.729942239141, 6235.729942239141, 6248.989177344656, 6258.937542253869, 6258.937542253869, 6272.197899642445, 6265.567641628983, 6278.828315347599, 6278.828315347599, 6262.249056623206, 6268.8792353519175, 6258.937542253869, 6268.8792353519175, 6258.937542253869, 6255.619037007596, 6252.307602354795, 6242.359478808092, 6239.0482053487485, 6235.729942239141, 6212.524338659549, 6222.4713588264185, 6215.842313789624, 6189.32780161186, 6195.95617766481, 6192.638454031094, 6192.638454031094, 6209.213434663948, 6172.754091913112, 6179.38204178662, 6169.443695648403, 6186.010162779164, 6205.895542883071, 6205.895542883071, 6202.584722300852, 6212.524338659549, 6222.4713588264185, 6225.789458122248, 6209.213434663948, 6209.213434663948, 6229.100568592835, 6222.4713588264185, 6248.989177344656, 6248.989177344656, 6255.619037007596, 6262.249056623206, 6258.937542253869, 6252.307602354795, 6242.359478808092, 6229.100568592835, 6199.26691435178, 6172.754091913112, 6156.181458143208, 6172.754091913112, 6176.071559688681, 6195.95617766481, 6199.26691435178, 6202.584722300852, 6199.26691435178, 6202.584722300852, 6202.584722300852, 6212.524338659549, 6212.524338659549, 6215.842313789624, 6219.153300717397, 6229.100568592835, 6222.4713588264185, 6235.729942239141, 6248.989177344656, 6258.937542253869, 6265.567641628983, 6288.7707168607985, 6302.032482701308, 6305.351536330321, 6315.301894536084, 6335.196599160104, 6321.933312480584, 6348.460480991392, 6371.677200869057, 6378.309869729713, 6404.820861259823, 6418.1158842481545, 6421.422139883562, 6441.330734289336, 6444.637226276342, 6434.717850404521, 6424.728429518048, 6451.25030989815, 6434.717850404521, 6421.422139883562, 6441.330734289336, 6424.728429518048, 6414.809662610006, 6414.809662610006, 6384.942681493581, 6391.575635018137, 6381.622740895924, 6381.622740895924, 6365.037642361188, 6361.724950677056, 6348.460480991392, 6331.877205116991]]"
                }
                [
                    position = 7808, 8136
                    size = 48, 48
                ]

                port Pm {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7776, 8064
                    rotation = down
                    scale = -1, 1
                ]

                port Pref_ed {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8496, 8000
                ]

                port Pref_reg {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8504, 8072
                ]

                junction Junction1 sp
                [
                    position = 7824, 8064
                ]

                connect "ModBus Device1 (config1).coil_in" C_u11.out as Connection139
                connect C_u12.out "ModBus Device1 (config1).discrete_in" as Connection121
                [
                    breakpoints = 8000, 7968; 8080, 7968
                ]
                connect Termination1.in "ModBus Device1 (config1).coil_out" as Connection127
                connect C_u13.out "ModBus Device1 (config1).holding_in" as Connection120
                [
                    breakpoints = 7952, 8016; 8080, 8016
                ]
                connect Pm Junction1 as Connection182
                connect Junction1 "Rate Transition1.in" as Connection183
                connect P_probe.in Junction1 as Connection184
                connect "Bus Split1.out" Pref_ed as Connection218
                connect "Bus Split1.in" "ModBus Device1 (config1).holding_out" as Connection220
                connect "Rate Transition1.out" "Bus Join1.in" as Connection223
                connect "Bus Join1.out" "ModBus Device1 (config1).reg_in" as Connection224
                connect Pref_reg "Bus Split1.out1" as Connection226
                connect "Dynamic Table.P1max" "Bus Join1.in1" as Connection227
            }
            [
                position = 8256, 8456
                rotation = down
                scale = 1, -1
                size = 120, 112
            ]

            component gen_probe Pref_ed {
            }
            [
                position = 8096, 8424
                scale = -1, 1
            ]

            component gen_probe Pref_reg {
            }
            [
                position = 8096, 8488
                scale = -1, 1
            ]

            component gen_sum Sum1 {
            }
            [
                position = 7960, 8256
                rotation = left
                hide_name = True
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_inv"
            }
            [
                position = 8136, 8040
                hide_name = True
                size = 32, 32
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8680, 8160
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8712, 8128
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8512, 8128
            ]

            junction Junction2 pe
            [
                position = 8536, 8160
            ]

            junction Junction3 sp
            [
                position = 8152, 8424
            ]

            junction Junction4 sp
            [
                position = 8152, 8488
            ]

            connect Inverter.+ Vs1.p_node as Connection4972
            [
                breakpoints = 8288, 8096; 8224, 8096
            ]
            connect Vs1.n_node Inverter.- as Connection4973
            connect "Core coupling.b" b as Connection4983
            connect "Core coupling.a" a as Connection4985
            connect Junction1 "Core coupling.A" as Connection4989
            connect Inverter.A Junction1 as Connection4990
            [
                breakpoints = 8384, 8128; 8520, 8128
            ]
            connect "Core coupling.B" Junction2 as Connection4991
            connect Inverter.B Junction2 as Connection4993
            connect Junction2 Measurement.b as Connection4994
            connect Measurement.B Load.B as Connection4995
            connect Load.A Measurement.A as Connection4996
            connect Measurement.a Junction1 as Connection4997
            connect Measurement.Pm Modbus.Pm as Connection5001
            connect Pref_ed.in Junction3 as Connection5003
            connect Junction3 Modbus.Pref_ed as Connection5004
            connect Sum1.in1 Junction3 as Connection5005
            connect Pref_reg.in Junction4 as Connection5006
            connect Junction4 Modbus.Pref_reg as Connection5007
            connect Sum1.in Junction4 as Connection5008
            [
                breakpoints = 7952, 8320; 7952, 8512
            ]
            connect Sum1.out "Rate Transition1.in" as Connection5009
            connect "Rate Transition1.out" Inverter.Pref as Connection5010

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6312, 7936
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem Grid {
            layout = dynamic
            component "core/Signal Controlled Sinusoidal Voltage Source" Vs {
            }
            [
                position = 8248, 8192
                size = 64, 80
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "240"
            }
            [
                position = 8136, 8152
                hide_name = True
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "60"
            }
            [
                position = 8136, 8192
                hide_name = True
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "0"
            }
            [
                position = 8136, 8232
                hide_name = True
            ]

            port Gnd {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8280
                rotation = left
            ]

            port A {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8104
                rotation = right
            ]

            connect Vs.p A as Connection5043
            connect Vs.n Gnd as Connection5042
            connect Constant1.out Vs.Rms as Connection5039
            connect Constant2.out Vs.f as Connection5040
            connect Constant3.out Vs.Ph as Connection5041
        }
        [
            position = 5752, 7792
            size = 48, 104
        ]

        component Subsystem SolarHouse2 {
            layout = dynamic
            component Subsystem Load {
                layout = dynamic
                component pas_inductor L {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8208, 8144
                    rotation = right
                ]

                component pas_resistor R {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8144, 8144
                    rotation = right
                ]

                port A {
                    label = "A"
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8048
                ]

                port B {
                    label = "B"
                    position = left:2
                    kind = pe
                }
                [
                    position = 8080, 8224
                ]

                junction Junction1 pe
                [
                    position = 8144, 8048
                ]

                junction Junction2 pe
                [
                    position = 8144, 8224
                ]

                connect R.p_node Junction1 as Connection3
                connect Junction1 A as Connection4
                connect L.p_node Junction1 as Connection5
                connect R.n_node Junction2 as Connection6
                connect Junction2 B as Connection7
                connect L.n_node Junction2 as Connection8

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Constant Impedance Load</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxingle-phase RL load.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxand L values are calculated using the input parameters:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated voltage</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated power</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    - f: Rated frequency</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxpf: Rated power factor</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxone of the parameters can be set to 0.</p></body></html>"

                    V {
                        label = "Voltage"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "General"
                    }

                    S {
                        label = "Power"
                        widget = edit
                        type = generic
                        default_value = "1e3"
                        unit = "VA"
                        group = "General"
                    }

                    f {
                        label = "Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General"
                    }

                    pf {
                        label = "Power Factor"
                        widget = edit
                        type = generic
                        default_value = "0.9"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8320, 8320
                scale = -1, 1
                size = 48, 72
            ]

            component Subsystem Modbus {
                layout = dynamic
                component gen_terminator Termination1 {
                }
                [
                    position = 8400, 7920
                ]

                component src_constant C_u12 {
                    execution_rate = "Ts"
                }
                [
                    position = 7968, 7800
                ]

                component src_constant C_u13 {
                    execution_rate = "Ts"
                    value = "50"
                }
                [
                    position = 7920, 7872
                ]

                component src_constant C_u11 {
                    execution_rate = "Ts"
                }
                [
                    position = 8008, 7720
                ]

                component "core/ModBus Device" "ModBus Device2 (config2)" {
                    configuration = "config2"
                    execution_rate = "Ts"
                }
                [
                    position = 8192, 7992
                    size = 184, 184
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts"
                }
                [
                    position = 7864, 8064
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe P_probe {
                }
                [
                    position = 7888, 8000
                ]

                component gen_bus_join "Bus Join1" {
                }
                [
                    position = 7960, 8112
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8376, 8064
                ]

                component "core/Dynamic Table" "Dynamic Table" {
                    execution_rate = "Ts"
                    import_dynamic_table_file = "C:/Users/zholbar1/Documents/microgrid_testbed/APRA-E MST project/Q4/Test 2/Solar Village Test2/P2max.csv"
                    signal_names = "[\'P2max\']"
                    x_vec = "[0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788, 792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844, 848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 960, 964, 968, 972, 976, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1092, 1096, 1100, 1104, 1108, 1112, 1116, 1120, 1124, 1128, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1180, 1184, 1188, 1192, 1196, 1200, 1204, 1208, 1212, 1216, 1220, 1224, 1228, 1232, 1236, 1240, 1244, 1248, 1252, 1256, 1260, 1264, 1268, 1272, 1276, 1280, 1284, 1288, 1292, 1296, 1300, 1304, 1308, 1312, 1316, 1320, 1324, 1328, 1332, 1336, 1340, 1344, 1348, 1352, 1356, 1360, 1364, 1368, 1372, 1376, 1380, 1384, 1388, 1392, 1396, 1400, 1404, 1408, 1412, 1416, 1420, 1424, 1428, 1432, 1436, 1440, 1444, 1448, 1452, 1456, 1460, 1464, 1468, 1472, 1476, 1480, 1484, 1488, 1492, 1496, 1500, 1504, 1508, 1512, 1516, 1520, 1524, 1528, 1532, 1536, 1540, 1544, 1548, 1552, 1556, 1560, 1564, 1568, 1572, 1576, 1580, 1584, 1588, 1592, 1596, 1600, 1604, 1608, 1612, 1616, 1620, 1624, 1628, 1632, 1636, 1640, 1644, 1648, 1652, 1656, 1660, 1664, 1668, 1672, 1676, 1680, 1684, 1688, 1692, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1724, 1728, 1732, 1736, 1740, 1744, 1748, 1752, 1756, 1760, 1764, 1768, 1772, 1776, 1780, 1784, 1788, 1792, 1796, 1800, 1804, 1808, 1812, 1816, 1820, 1824, 1828, 1832, 1836, 1840, 1844, 1848, 1852, 1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1900, 1904, 1908, 1912, 1916, 1920, 1924, 1928, 1932, 1936, 1940, 1944, 1948, 1952, 1956, 1960, 1964, 1968, 1972, 1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020, 2024, 2028, 2032, 2036, 2040, 2044, 2048, 2052, 2056, 2060, 2064, 2068, 2072, 2076, 2080, 2084, 2088, 2092, 2096, 2100, 2104, 2108, 2112, 2116, 2120, 2124, 2128, 2132, 2136, 2140, 2144, 2148, 2152, 2156, 2160, 2164, 2168, 2172, 2176, 2180, 2184, 2188, 2192, 2196, 2200, 2204, 2208, 2212, 2216, 2220, 2224, 2228, 2232, 2236, 2240, 2244, 2248, 2252, 2256, 2260, 2264, 2268, 2272, 2276, 2280, 2284, 2288, 2292, 2296, 2300, 2304, 2308, 2312, 2316, 2320, 2324, 2328, 2332, 2336, 2340, 2344, 2348, 2352, 2356, 2360, 2364, 2368, 2372, 2376, 2380, 2384, 2388, 2392, 2396, 2400, 2404, 2408, 2412, 2416, 2420, 2424, 2428, 2432, 2436, 2440, 2444, 2448, 2452, 2456, 2460, 2464, 2468, 2472, 2476, 2480, 2484, 2488, 2492, 2496, 2500, 2504, 2508, 2512, 2516, 2520, 2524, 2528, 2532, 2536, 2540, 2544, 2548, 2552, 2556, 2560, 2564, 2568, 2572, 2576, 2580, 2584, 2588, 2592, 2596, 2600, 2604, 2608, 2612, 2616, 2620, 2624, 2628, 2632, 2636, 2640, 2644, 2648, 2652, 2656, 2660, 2664, 2668, 2672, 2676, 2680, 2684, 2688, 2692, 2696, 2700, 2704, 2708, 2712, 2716, 2720, 2724, 2728, 2732, 2736, 2740, 2744, 2748, 2752, 2756, 2760, 2764, 2768, 2772, 2776, 2780, 2784, 2788, 2792, 2796, 2800, 2804, 2808, 2812, 2816, 2820, 2824, 2828, 2832, 2836, 2840, 2844, 2848, 2852, 2856, 2860, 2864, 2868, 2872, 2876, 2880, 2884, 2888, 2892, 2896, 2900, 2904, 2908, 2912, 2916, 2920, 2924, 2928, 2932, 2936, 2940, 2944, 2948, 2952, 2956, 2960, 2964, 2968, 2972, 2976, 2980, 2984, 2988, 2992, 2996, 3000, 3004, 3008, 3012, 3016, 3020, 3024, 3028, 3032, 3036, 3040, 3044, 3048, 3052, 3056, 3060, 3064, 3068, 3072, 3076, 3080, 3084, 3088, 3092, 3096, 3100, 3104, 3108, 3112, 3116, 3120, 3124, 3128, 3132, 3136, 3140, 3144, 3148, 3152, 3156, 3160, 3164, 3168, 3172, 3176, 3180, 3184, 3188, 3192, 3196, 3200, 3204, 3208, 3212, 3216, 3220, 3224, 3228, 3232, 3236, 3240, 3244, 3248, 3252, 3256, 3260, 3264, 3268, 3272, 3276, 3280, 3284, 3288, 3292, 3296, 3300, 3304, 3308, 3312, 3316, 3320, 3324, 3328, 3332, 3336, 3340, 3344, 3348, 3352, 3356, 3360, 3364, 3368, 3372, 3376, 3380, 3384, 3388, 3392, 3396, 3400, 3404, 3408, 3412, 3416, 3420, 3424, 3428, 3432, 3436, 3440, 3444, 3448, 3452, 3456, 3460, 3464, 3468, 3472, 3476, 3480, 3484, 3488, 3492, 3496, 3500, 3504, 3508, 3512, 3516, 3520, 3524, 3528, 3532, 3536, 3540, 3544, 3548, 3552, 3556, 3560, 3564, 3568, 3572, 3576, 3580, 3584, 3588, 3592, 3596, 3600, 3604, 3608, 3612, 3616, 3620, 3624, 3628, 3632, 3636, 3640, 3644, 3648, 3652, 3656, 3660, 3664, 3668, 3672, 3676, 3680, 3684, 3688, 3692, 3696, 3700, 3704, 3708, 3712, 3716, 3720, 3724, 3728, 3732, 3736, 3740, 3744, 3748, 3752, 3756, 3760, 3764, 3768, 3772, 3776, 3780, 3784, 3788, 3792, 3796, 3800, 3804, 3808, 3812, 3816, 3820, 3824, 3828, 3832, 3836, 3840, 3844, 3848, 3852, 3856, 3860, 3864, 3868, 3872, 3876, 3880, 3884, 3888, 3892, 3896, 3900, 3904, 3908, 3912, 3916, 3920, 3924, 3928, 3932, 3936, 3940, 3944, 3948, 3952, 3956, 3960, 3964, 3968, 3972, 3976, 3980, 3984, 3988, 3992, 3996, 4000, 4004, 4008, 4012, 4016, 4020, 4024, 4028, 4032, 4036, 4040, 4044, 4048, 4052, 4056, 4060, 4064, 4068, 4072, 4076, 4080, 4084, 4088, 4092, 4096, 4100, 4104, 4108, 4112, 4116, 4120, 4124, 4128, 4132, 4136, 4140, 4144, 4148, 4152, 4156, 4160, 4164, 4168, 4172, 4176, 4180, 4184, 4188, 4192, 4196, 4200, 4204, 4208, 4212, 4216, 4220, 4224, 4228, 4232, 4236, 4240, 4244, 4248, 4252, 4256, 4260, 4264, 4268, 4272, 4276, 4280, 4284, 4288, 4292, 4296, 4300, 4304, 4308, 4312, 4316, 4320, 4324, 4328, 4332, 4336, 4340, 4344, 4348, 4352, 4356, 4360, 4364, 4368, 4372, 4376, 4380, 4384, 4388, 4392, 4396, 4400, 4404, 4408, 4412, 4416, 4420, 4424, 4428, 4432, 4436, 4440, 4444, 4448, 4452, 4456, 4460, 4464, 4468, 4472, 4476, 4480, 4484, 4488, 4492, 4496, 4500, 4504, 4508, 4512, 4516, 4520, 4524, 4528, 4532, 4536, 4540, 4544, 4548, 4552, 4556, 4560, 4564, 4568, 4572, 4576, 4580, 4584, 4588, 4592, 4596, 4600, 4604, 4608, 4612, 4616, 4620, 4624, 4628, 4632, 4636, 4640, 4644, 4648, 4652, 4656, 4660, 4664, 4668, 4672, 4676, 4680, 4684, 4688, 4692, 4696, 4700, 4704, 4708, 4712, 4716, 4720, 4724, 4728, 4732, 4736, 4740, 4744, 4748, 4752, 4756, 4760, 4764, 4768, 4772, 4776, 4780, 4784, 4788, 4792, 4796, 4800, 4804, 4808, 4812, 4816, 4820, 4824, 4828, 4832, 4836, 4840]"
                    y_vec = "[[4769.045981605385, 4766.909018531038, 4764.772082399541, 4773.314508806396, 4769.045981605385, 4769.045981605385, 4773.314508806396, 4773.314508806396, 4773.314508806396, 4783.994513272023, 4773.314508806396, 4779.725719498625, 4777.588622571555, 4777.588622571555, 4773.314508806396, 4775.4515523232285, 4792.537898062444, 4779.725719498625, 4786.1316899012845, 4771.182971569649, 4781.857363213701, 4792.537898062444, 4779.725719498625, 4781.857363213701, 4786.1316899012845, 4783.994513272023, 4786.1316899012845, 4783.994513272023, 4792.537898062444, 4783.994513272023, 4781.857363213701, 4788.263412907485, 4783.994513272023, 4786.1316899012845, 4794.6751801325045, 4786.1316899012845, 4781.857363213701, 4790.400642303346, 4794.6751801325045, 4781.857363213701, 4792.537898062444, 4790.400642303346, 4790.400642303346, 4788.263412907485, 4792.537898062444, 4783.994513272023, 4794.6751801325045, 4794.6751801325045, 4792.537898062444, 4794.6751801325045, 4792.537898062444, 4790.400642303346, 4788.263412907485, 4792.537898062444, 4792.537898062444, 4790.400642303346, 4792.537898062444, 4783.994513272023, 4794.6751801325045, 4786.1316899012845, 4794.6751801325045, 4788.263412907485, 4790.400642303346, 4792.537898062444, 4788.263412907485, 4790.400642303346, 4790.400642303346, 4790.400642303346, 4786.1316899012845, 4781.857363213701, 4783.994513272023, 4792.537898062444, 4790.400642303346, 4783.994513272023, 4796.807008149721, 4790.400642303346, 4790.400642303346, 4790.400642303346, 4783.994513272023, 4783.994513272023, 4788.263412907485, 4790.400642303346, 4790.400642303346, 4798.9443426171865, 4790.400642303346, 4788.263412907485, 4786.1316899012845, 4792.537898062444, 4792.537898062444, 4792.537898062444, 4781.857363213701, 4783.994513272023, 4790.400642303346, 4792.537898062444, 4790.400642303346, 4790.400642303346, 4781.857363213701, 4779.725719498625, 4792.537898062444, 4792.537898062444, 4788.263412907485, 4790.400642303346, 4801.081703238537, 4798.9443426171865, 4790.400642303346, 4786.1316899012845, 4798.9443426171865, 4788.263412907485, 4790.400642303346, 4792.537898062444, 4792.537898062444, 4771.182971569649, 4769.045981605385, 4779.725719498625, 4786.1316899012845, 4786.1316899012845, 4779.725719498625, 4777.588622571555, 4796.807008149721, 4781.857363213701, 4794.6751801325045, 4794.6751801325045, 4783.994513272023, 4794.6751801325045, 4788.263412907485, 4781.857363213701, 4783.994513272023, 4775.4515523232285, 4779.725719498625, 4773.314508806396, 4777.588622571555, 4764.772082399541, 4775.4515523232285, 4766.909018531038, 4773.314508806396, 4771.182971569649, 4771.182971569649, 4764.772082399541, 4764.772082399541, 4760.503770327372, 4760.503770327372, 4775.4515523232285, 4771.182971569649, 4764.772082399541, 4758.36691527295, 4754.0987655742965, 4749.825245889275, 4751.961992074599, 4758.36691527295, 4769.045981605385, 4754.0987655742965, 4760.503770327372, 4764.772082399541, 4760.503770327372, 4758.36691527295, 4754.0987655742965, 4743.420650343088, 4751.961992074599, 4754.0987655742965, 4764.772082399541, 4756.2355663351345, 4758.36691527295, 4760.503770327372, 4754.0987655742965, 4749.825245889275, 4751.961992074599, 4771.182971569649, 4749.825245889275, 4751.961992074599, 4758.36691527295, 4762.640652483595, 4751.961992074599, 4758.36691527295, 4760.503770327372, 4758.36691527295, 4773.314508806396, 4764.772082399541, 4766.909018531038, 4766.909018531038, 4773.314508806396, 4766.909018531038, 4773.314508806396, 4766.909018531038, 4766.909018531038, 4760.503770327372, 4775.4515523232285, 4781.857363213701, 4777.588622571555, 4783.994513272023, 4786.1316899012845, 4781.857363213701, 4773.314508806396, 4766.909018531038, 4749.825245889275, 4743.420650343088, 4734.879748491107, 4717.799278068897, 4715.668453564936, 4726.339289889522, 4722.071966862066, 4726.339289889522, 4734.879748491107, 4749.825245889275, 4754.0987655742965, 4754.0987655742965, 4760.503770327372, 4749.825245889275, 4751.961992074599, 4758.36691527295, 4762.640652483595, 4775.4515523232285, 4758.36691527295, 4754.0987655742965, 4777.588622571555, 4775.4515523232285, 4786.1316899012845, 4788.263412907485, 4805.351022154951, 4790.400642303346, 4792.537898062444, 4801.081703238537, 4790.400642303346, 4828.847822426128, 4792.537898062444, 4805.351022154951, 4805.351022154951, 4788.263412907485, 4786.1316899012845, 4801.081703238537, 4805.351022154951, 4801.081703238537, 4792.537898062444, 4786.1316899012845, 4786.1316899012845, 4790.400642303346, 4790.400642303346, 4773.314508806396, 4773.314508806396, 4769.045981605385, 4783.994513272023, 4777.588622571555, 4783.994513272023, 4786.1316899012845, 4788.263412907485, 4790.400642303346, 4783.994513272023, 4777.588622571555, 4783.994513272023, 4790.400642303346, 4801.081703238537, 4805.351022154951, 4796.807008149721, 4779.725719498625, 4786.1316899012845, 4813.8954516348995, 4809.625925505826, 4792.537898062444, 4796.807008149721, 4803.213609449375, 4794.6751801325045, 4788.263412907485, 4801.081703238537, 4788.263412907485, 4781.857363213701, 4788.263412907485, 4807.488460857832, 4792.537898062444, 4790.400642303346, 4786.1316899012845, 4796.807008149721, 4796.807008149721, 4788.263412907485, 4786.1316899012845, 4777.588622571555, 4771.182971569649, 4777.588622571555, 4786.1316899012845, 4786.1316899012845, 4777.588622571555, 4786.1316899012845, 4792.537898062444, 4783.994513272023, 4792.537898062444, 4792.537898062444, 4783.994513272023, 4788.263412907485, 4788.263412907485, 4783.994513272023, 4777.588622571555, 4777.588622571555, 4775.4515523232285, 4781.857363213701, 4775.4515523232285, 4783.994513272023, 4777.588622571555, 4777.588622571555, 4786.1316899012845, 4773.314508806396, 4775.4515523232285, 4771.182971569649, 4769.045981605385, 4771.182971569649, 4775.4515523232285, 4773.314508806396, 4771.182971569649, 4771.182971569649, 4773.314508806396, 4788.263412907485, 4783.994513272023, 4786.1316899012845, 4796.807008149721, 4794.6751801325045, 4781.857363213701, 4786.1316899012845, 4786.1316899012845, 4781.857363213701, 4779.725719498625, 4781.857363213701, 4777.588622571555, 4779.725719498625, 4775.4515523232285, 4771.182971569649, 4769.045981605385, 4766.909018531038, 4751.961992074599, 4749.825245889275, 4739.1528834431765, 4737.016302123048, 4734.879748491107, 4734.879748491107, 4734.879748491107, 4728.475732303839, 4722.071966862066, 4707.129004782431, 4702.8567119961435, 4662.308542784821, 4621.765564440146, 4628.165210081328, 4640.965321365521, 4702.8567119961435, 4743.420650343088, 4758.36691527295, 4764.772082399541, 4775.4515523232285, 4779.725719498625, 4781.857363213701, 4796.807008149721, 4803.213609449375, 4781.857363213701, 4773.314508806396, 4594.029670063626, 4376.627847669913, 4278.709318325436, 4434.142433488523, 4613.2313074350595, 4572.701753182525, 4538.579368094299, 4474.630937508838, 4463.9731141462, 4532.183717015092, 4583.368052876646, 4687.915542817033, 4707.129004782431, 4527.921938078604, 4444.79779606964, 4555.639524922355, 4728.475732303839, 4704.992844141118, 4417.097901027782, 4123.490970884436, 4212.76428408601, 4319.145970742805, 4342.562562696084, 4638.835543908499, 4833.123289890995, 4850.215204701766, 4848.077257268188, 4845.939334797592, 4835.255580135387, 4843.801437341164, 4843.801437341164, 4839.5311992540555, 4837.39337708475, 4830.98554347125, 4833.123289890995, 4835.255580135387, 4835.255580135387, 4835.255580135387, 4833.123289890995, 4826.710126807315, 4828.847822426128, 4833.123289890995, 4830.98554347125, 4828.847822426128, 4835.255580135387, 4833.123289890995, 4830.98554347125, 4835.255580135387, 4830.98554347125, 4833.123289890995, 4822.440293162924, 4826.710126807315, 4824.577937839409, 4824.577937839409, 4818.1705615824485, 4828.847822426128, 4837.39337708475, 4833.123289890995, 4839.5311992540555, 4837.39337708475, 4833.123289890995, 4839.5311992540555, 4837.39337708475, 4837.39337708475, 4843.801437341164, 4835.255580135387, 4841.669046642371, 4845.939334797592, 4841.669046642371, 4830.98554347125, 4843.801437341164, 4839.5311992540555, 4839.5311992540555, 4843.801437341164, 4837.39337708475, 4830.98554347125, 4826.710126807315, 4816.032993740141, 4818.1705615824485, 4820.3026740679325, 4820.3026740679325, 4824.577937839409, 4824.577937839409, 4833.123289890995, 4843.801437341164, 4830.98554347125, 4835.255580135387, 4824.577937839409, 4841.669046642371, 4839.5311992540555, 4843.801437341164, 4839.5311992540555, 4839.5311992540555, 4845.939334797592, 4841.669046642371, 4837.39337708475, 4837.39337708475, 4848.077257268188, 4833.123289890995, 4841.669046642371, 4841.669046642371, 4833.123289890995, 4850.215204701766, 4848.077257268188, 4833.123289890995, 4845.939334797592, 4839.5311992540555, 4833.123289890995, 4830.98554347125, 4828.847822426128, 4835.255580135387, 4820.3026740679325, 4807.488460857832, 4807.488460857832, 4786.1316899012845, 4794.6751801325045, 4792.537898062444, 4794.6751801325045, 4788.263412907485, 4777.588622571555, 4786.1316899012845, 4805.351022154951, 4792.537898062444, 4824.577937839409, 4826.710126807315, 4828.847822426128, 4813.8954516348995, 4820.3026740679325, 4813.8954516348995, 4809.625925505826, 4813.8954516348995, 4811.757935268792, 4818.1705615824485, 4820.3026740679325, 4820.3026740679325, 4809.625925505826, 4809.625925505826, 4794.6751801325045, 4790.400642303346, 4786.1316899012845, 4786.1316899012845, 4792.537898062444, 4798.9443426171865, 4803.213609449375, 4809.625925505826, 4790.400642303346, 4788.263412907485, 4790.400642303346, 4783.994513272023, 4775.4515523232285, 4773.314508806396, 4758.36691527295, 4758.36691527295, 4764.772082399541, 4769.045981605385, 4751.961992074599, 4751.961992074599, 4741.289492397842, 4724.208353381613, 4722.071966862066, 4707.129004782431, 4717.799278068897, 4734.879748491107, 4739.1528834431765, 4760.503770327372, 4754.0987655742965, 4766.909018531038, 4762.640652483595, 4758.36691527295, 4743.420650343088, 4743.420650343088, 4741.289492397842, 4747.694005802803, 4745.557314335814, 4751.961992074599, 4779.725719498625, 4773.314508806396, 4792.537898062444, 4781.857363213701, 4781.857363213701, 4773.314508806396, 4769.045981605385, 4764.772082399541, 4769.045981605385, 4758.36691527295, 4758.36691527295, 4739.1528834431765, 4743.420650343088, 4728.475732303839, 4747.694005802803, 4734.879748491107, 4766.909018531038, 4779.725719498625, 4801.081703238537, 4818.1705615824485, 4828.847822426128, 4820.3026740679325, 4816.032993740141, 4811.757935268792, 4818.1705615824485, 4816.032993740141, 4816.032993740141, 4820.3026740679325, 4824.577937839409, 4826.710126807315, 4820.3026740679325, 4822.440293162924, 4807.488460857832, 4811.757935268792, 4805.351022154951, 4803.213609449375, 4813.8954516348995, 4805.351022154951, 4811.757935268792, 4826.710126807315, 4824.577937839409, 4803.213609449375, 4820.3026740679325, 4801.081703238537, 4805.351022154951, 4824.577937839409, 4826.710126807315, 4820.3026740679325, 4809.625925505826, 4801.081703238537, 4794.6751801325045, 4796.807008149721, 4792.537898062444, 4794.6751801325045, 4788.263412907485, 4818.1705615824485, 4798.9443426171865, 4807.488460857832, 4809.625925505826, 4813.8954516348995, 4801.081703238537, 4809.625925505826, 4803.213609449375, 4801.081703238537, 4805.351022154951, 4813.8954516348995, 4813.8954516348995, 4816.032993740141, 4818.1705615824485, 4816.032993740141, 4807.488460857832, 4820.3026740679325, 4824.577937839409, 4837.39337708475, 4833.123289890995, 4848.077257268188, 4845.939334797592, 4854.485692176614, 4854.485692176614, 4730.612202670461, 4453.316163090619, 4400.055685993651, 4602.562811954215, 4626.03013953342, 4628.165210081328, 4751.961992074599, 4805.351022154951, 4790.400642303346, 4783.994513272023, 4781.857363213701, 4798.9443426171865, 4796.807008149721, 4792.537898062444, 4792.537898062444, 4788.263412907485, 4783.994513272023, 4777.588622571555, 4790.400642303346, 4792.537898062444, 4801.081703238537, 4807.488460857832, 4813.8954516348995, 4820.3026740679325, 4828.847822426128, 4833.123289890995, 4837.39337708475, 4837.39337708475, 4828.847822426128, 4830.98554347125, 4826.710126807315, 4820.3026740679325, 4824.577937839409, 4828.847822426128, 4835.255580135387, 4826.710126807315, 4826.710126807315, 4826.710126807315, 4826.710126807315, 4826.710126807315, 4822.440293162924, 4828.847822426128, 4837.39337708475, 4833.123289890995, 4835.255580135387, 4828.847822426128, 4835.255580135387, 4837.39337708475, 4837.39337708475, 4833.123289890995, 4839.5311992540555, 4835.255580135387, 4845.939334797592, 4841.669046642371, 4852.34769503477, 4856.623714127694, 4852.34769503477, 4860.894349986934, 4858.756278634166, 4867.303229321881, 4865.170566609265, 4871.579593040457, 4869.441398929496, 4852.34769503477, 4865.170566609265, 4852.34769503477, 4852.34769503477, 4852.34769503477, 4845.939334797592, 4835.255580135387, 4830.98554347125, 4837.39337708475, 4828.847822426128, 4822.440293162924, 4822.440293162924, 4822.440293162924, 4822.440293162924, 4830.98554347125, 4833.123289890995, 4830.98554347125, 4833.123289890995, 4841.669046642371, 4833.123289890995, 4845.939334797592, 4843.801437341164, 4856.623714127694, 4854.485692176614, 4858.756278634166, 4869.441398929496, 4863.032445995661, 4858.756278634166, 4850.215204701766, 4858.756278634166, 4848.077257268188, 4837.39337708475, 4845.939334797592, 4845.939334797592, 4848.077257268188, 4848.077257268188, 4850.215204701766, 4852.34769503477, 4869.441398929496, 4871.579593040457, 4873.717811501812, 4884.398302142163, 4884.398302142163, 4884.398302142163, 4877.988838657489, 4871.579593040457, 4858.756278634166, 4852.34769503477, 4830.98554347125, 4837.39337708475, 4830.98554347125, 4824.577937839409, 4826.710126807315, 4811.757935268792, 4805.351022154951, 4790.400642303346, 4783.994513272023, 4769.045981605385, 4762.640652483595, 4760.503770327372, 4758.36691527295, 4749.825245889275, 4762.640652483595, 4760.503770327372, 4781.857363213701, 4773.314508806396, 4788.263412907485, 4796.807008149721, 4807.488460857832, 4796.807008149721, 4803.213609449375, 4818.1705615824485, 4809.625925505826, 4803.213609449375, 4798.9443426171865, 4796.807008149721, 4801.081703238537, 4807.488460857832, 4816.032993740141, 4816.032993740141, 4828.847822426128, 4826.710126807315, 4839.5311992540555, 4837.39337708475, 4839.5311992540555, 4850.215204701766, 4858.756278634166, 4852.34769503477, 4852.34769503477, 4848.077257268188, 4854.485692176614, 4856.623714127694, 4843.801437341164, 4856.623714127694, 4869.441398929496, 4860.894349986934, 4867.303229321881, 4860.894349986934, 4873.717811501812, 4892.946417734397, 4886.536665820926, 4895.0848772343015, 4892.946417734397, 4901.494915208666, 4910.043791244874, 4916.454323840298, 4922.865066161907, 4920.731784824221, 4922.865066161907, 4929.276016916613, 4929.276016916613, 4927.142666386155, 4935.687174659371, 4935.687174659371, 4925.003854676579, 4920.731784824221, 4927.142666386155, 4920.731784824221, 4912.1824399721745, 4907.905166010416, 4914.315628337495, 4903.633469724086, 4903.633469724086, 4890.8079821294505, 4895.0848772343015, 4895.0848772343015, 4895.0848772343015, 4899.3563843867405, 4905.766564318966, 4905.766564318966, 4910.043791244874, 4910.043791244874, 4914.315628337495, 4918.593042685865, 4907.905166010416, 4907.905166010416, 4907.905166010416, 4912.1824399721745, 4912.1824399721745, 4922.865066161907, 4925.003854676579, 4920.731784824221, 4912.1824399721745, 4922.865066161907, 4914.315628337495, 4916.454323840298, 4914.315628337495, 4925.003854676579, 4903.633469724086, 4925.003854676579, 4916.454323840298, 4916.454323840298, 4925.003854676579, 4916.454323840298, 4903.633469724086, 4897.21787725765, 4892.946417734397, 4882.259962560387, 4875.850571608468, 4867.303229321881, 4852.34769503477, 4841.669046642371, 4843.801437341164, 4845.939334797592, 4839.5311992540555, 4848.077257268188, 4854.485692176614, 4848.077257268188, 4850.215204701766, 4850.215204701766, 4841.669046642371, 4850.215204701766, 4856.623714127694, 4865.170566609265, 4869.441398929496, 4880.127129955425, 4882.259962560387, 4880.127129955425, 4884.398302142163, 4877.988838657489, 4865.170566609265, 4867.303229321881, 4865.170566609265, 4856.623714127694, 4867.303229321881, 4873.717811501812, 4873.717811501812, 4865.170566609265, 4877.988838657489, 4875.850571608468, 4865.170566609265, 4867.303229321881, 4875.850571608468, 4877.988838657489, 4892.946417734397, 4895.0848772343015, 4897.21787725765, 4901.494915208666, 4901.494915208666, 4899.3563843867405, 4882.259962560387, 4901.494915208666, 4905.766564318966, 4897.21787725765, 4910.043791244874, 4897.21787725765, 4897.21787725765, 4895.0848772343015, 4892.946417734397, 4882.259962560387, 4903.633469724086, 4914.315628337495, 4912.1824399721745, 4922.865066161907, 4933.55375538276, 4925.003854676579, 4929.276016916613, 4942.104022675567, 4944.2375329408615, 4942.104022675567, 4952.788253902193, 4978.4425614103575, 4986.994701684726, 4978.4425614103575, 4972.030057181063, 4986.994701684726, 4991.290102697326, 4993.429607000103, 4995.569132871827, 4982.7213308326645, 4984.855262547896, 4989.134162536895, 4997.7086802639315, 4986.994701684726, 4982.7213308326645, 4982.7213308326645, 4982.7213308326645, 4986.994701684726, 4984.855262547896, 4984.855262547896, 4993.429607000103, 4989.134162536895, 4997.7086802639315, 4980.5819351646915, 4976.303209566277, 4974.169365114438, 4965.617751124768, 4961.339334440319, 4954.927361723254, 4961.339334440319, 4961.339334440319, 4965.617751124768, 4963.478531656056, 4972.030057181063, 4965.617751124768, 4974.169365114438, 4963.478531656056, 4954.927361723254, 4946.376550475766, 4933.55375538276, 4907.905166010416, 4892.946417734397, 4884.398302142163, 4871.579593040457, 4856.623714127694, 4858.756278634166, 4850.215204701766, 4848.077257268188, 4845.939334797592, 4839.5311992540555, 4858.756278634166, 4858.756278634166, 4865.170566609265, 4867.303229321881, 4867.303229321881, 4890.8079821294505, 4888.675053546077, 4899.3563843867405, 4903.633469724086, 4907.905166010416, 4895.0848772343015, 4895.0848772343015, 4880.127129955425, 4875.850571608468, 4854.485692176614, 4882.259962560387, 4880.127129955425, 4869.441398929496, 4854.485692176614, 4852.34769503477, 4867.303229321881, 4852.34769503477, 4869.441398929496, 4863.032445995661, 4856.623714127694, 4843.801437341164, 4809.625925505826, 4798.9443426171865, 4790.400642303346, 4790.400642303346, 4794.6751801325045, 4796.807008149721, 4801.081703238537, 4813.8954516348995, 4830.98554347125, 4826.710126807315, 4835.255580135387, 4850.215204701766, 4848.077257268188, 4845.939334797592, 4843.801437341164, 4828.847822426128, 4809.625925505826, 4794.6751801325045, 4775.4515523232285, 4760.503770327372, 4754.0987655742965, 4747.694005802803, 4745.557314335814, 4749.825245889275, 4754.0987655742965, 4758.36691527295, 4775.4515523232285, 4779.725719498625, 4794.6751801325045, 4803.213609449375, 4805.351022154951, 4805.351022154951, 4790.400642303346, 4749.825245889275, 4707.129004782431, 4653.771991530493, 4594.029670063626, 4542.846947167271, 4491.68306305226, 4449.05690908914, 4423.487964232506, 4421.361551294682, 4425.619879553933, 4440.533357466222, 4429.878351491873, 4410.708163609452, 4393.666825451876, 4383.02128417456, 4385.147039517725, 4380.890101353771, 4365.983797141252, 4331.916090410815, 4282.9625447125045, 4219.148540665502, 4182.997976703442, 4153.240143754564, 4136.23798611378, 4078.8838613387798, 4032.173104582435, 3989.7265196785493, 3987.6087896972795, 4006.702803994632, 4027.92484610633, 4036.416109126549, 4036.416109126549, 4030.048951208646, 4049.157167042575, 4070.3888011258678, 4114.992045350099, 4163.869294167823, 4231.907275631269, 4295.734105236201, 4368.109253815758, 4400.055685993651, 4434.142433488523, 4459.713509400434, 4468.238326556239, 4474.630937508838, 4468.238326556239, 4468.238326556239, 4457.581025503039, 4432.010374575134, 4417.097901027782, 4397.929672571839, 4374.5022411667715, 4365.983797141252, 4353.204531207659, 4342.562562696084, 4336.176748651537, 4325.530855711292, 4310.631517336897, 4308.501636784925, 4297.863748385242, 4295.734105236201, 4285.091948096332, 4278.709318325436, 4261.687109433612, 4244.6675116171145, 4227.6560155779935, 4212.76428408601, 4202.135616445967, 4193.630175553303, 4185.1254212406575, 4172.372313602437, 4163.869294167823, 4159.6153204596885, 4148.992064410022, 4136.23798611378, 4108.619690639164, 4074.633513199044, 4061.894491261998, 4051.2763040453638, 4044.908140683887, 4053.400936236565, 4068.2637909670034, 4091.6251237371443, 4110.745580357298, 4125.617178285968, 4129.864276336482, 4125.617178285968, 4129.864276336482, 4123.490970884436, 4121.364808691763, 4121.364808691763, 4106.493846615156, 4108.619690639164, 4119.2441433011, 4142.6175511970205, 4182.997976703442, 4231.907275631269, 4282.9625447125045, 4321.270585578037, 4365.983797141252, 4383.02128417456, 4410.708163609452, 4436.2745281714815, 4470.36551660445, 4493.810630836059, 4515.131926667221, 4542.846947167271, 4559.907624934908, 4596.1642770176395, 4615.3661940946995, 4636.700321605735, 4647.371259328293, 4651.636559153129, 4660.1729915719425, 4660.1729915719425, 4672.975789219192, 4685.78511708833, 4692.187434285977, 4702.8567119961435, 4702.8567119961435, 4711.395933820125, 4719.935608406526, 4728.475732303839, 4730.612202670461, 4734.879748491107, 4732.748700836773, 4739.1528834431765, 4741.289492397842, 4741.289492397842, 4737.016302123048, 4749.825245889275, 4762.640652483595, 4766.909018531038, 4762.640652483595, 4754.0987655742965, 4739.1528834431765, 4726.339289889522, 4713.532179552629, 4719.935608406526, 4719.935608406526, 4724.208353381613, 4734.879748491107, 4743.420650343088, 4756.2355663351345, 4758.36691527295, 4760.503770327372, 4779.725719498625, 4781.857363213701, 4783.994513272023, 4775.4515523232285, 4764.772082399541, 4762.640652483595, 4764.772082399541, 4758.36691527295, 4762.640652483595, 4758.36691527295, 4754.0987655742965, 4762.640652483595, 4766.909018531038, 4760.503770327372, 4762.640652483595, 4758.36691527295, 4758.36691527295, 4760.503770327372, 4760.503770327372, 4760.503770327372, 4775.4515523232285, 4786.1316899012845, 4777.588622571555, 4783.994513272023, 4796.807008149721, 4779.725719498625, 4805.351022154951, 4805.351022154951, 4824.577937839409, 4843.801437341164, 4848.077257268188, 4860.894349986934, 4867.303229321881, 4871.579593040457, 4873.717811501812, 4860.894349986934, 4852.34769503477, 4843.801437341164, 4830.98554347125, 4822.440293162924, 4813.8954516348995, 4813.8954516348995, 4801.081703238537, 4790.400642303346, 4788.263412907485, 4771.182971569649, 4775.4515523232285, 4781.857363213701, 4777.588622571555, 4779.725719498625, 4771.182971569649, 4762.640652483595, 4754.0987655742965, 4741.289492397842, 4728.475732303839, 4730.612202670461, 4734.879748491107, 4741.289492397842, 4749.825245889275, 4771.182971569649, 4796.807008149721, 4824.577937839409, 4845.939334797592, 4865.170566609265, 4882.259962560387, 4890.8079821294505, 4907.905166010416, 4916.454323840298, 4916.454323840298]]"
                }
                [
                    position = 7808, 8120
                    size = 48, 48
                ]

                port Pm {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7776, 8064
                    rotation = down
                    scale = -1, 1
                ]

                port Pref_ed {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8504, 8000
                ]

                port Pref_reg {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8512, 8072
                ]

                junction Junction1 sp
                [
                    position = 7824, 8064
                ]

                connect "ModBus Device2 (config2).coil_in" C_u11.out as Connection139
                connect C_u12.out "ModBus Device2 (config2).discrete_in" as Connection121
                [
                    breakpoints = 8000, 7968; 8080, 7968
                ]
                connect Termination1.in "ModBus Device2 (config2).coil_out" as Connection127
                connect C_u13.out "ModBus Device2 (config2).holding_in" as Connection120
                [
                    breakpoints = 7952, 8016; 8080, 8016
                ]
                connect Pm Junction1 as Connection182
                connect Junction1 "Rate Transition1.in" as Connection183
                connect P_probe.in Junction1 as Connection184
                connect "Rate Transition1.out" "Bus Join1.in" as Connection226
                connect "Bus Join1.out" "ModBus Device2 (config2).reg_in" as Connection227
                connect "Bus Split1.out" Pref_ed as Connection218
                connect "ModBus Device2 (config2).holding_out" "Bus Split1.in" as Connection231
                connect Pref_reg "Bus Split1.out1" as Connection232
                connect "Dynamic Table.P2max" "Bus Join1.in1" as Connection233
            }
            [
                position = 8256, 8456
                rotation = down
                scale = 1, -1
                size = 120, 112
            ]

            component gen_probe Pref_ed {
            }
            [
                position = 8096, 8424
                scale = -1, 1
            ]

            component gen_probe Pref_reg {
            }
            [
                position = 8096, 8488
                scale = -1, 1
            ]

            component Subsystem "Core coupling" {
                layout = dynamic
                component "core/Single Phase Core Coupling" "Core Coupling 1" {
                }
                [
                    position = 8184, 8168
                    size = 12, 256
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8264
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8264
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8088, 8072
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8072
                    rotation = down
                ]

                connect A "Core Coupling 1.a_in" as Connection1
                connect B "Core Coupling 1.b_in" as Connection2
                connect "Core Coupling 1.a_out" a as Connection3
                connect b "Core Coupling 1.b_out" as Connection4
            }
            [
                position = 8584, 8144
                size = 48, 80
            ]

            component src_voltage Vs1 {
                init_const_value = "500"
            }
            [
                position = 8232, 8144
                rotation = right
            ]

            component gen_sum Sum1 {
            }
            [
                position = 8016, 8280
                rotation = left
                hide_name = True
            ]

            component Subsystem Inverter {
                layout = dynamic
                component gen_probe V {
                }
                [
                    position = 7920, 8064
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                    }
                    [
                        position = 7064, 8360
                        scale = -1, 1
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8040
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[1]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7960
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 7920, 8600
                                scale = -1, 1
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "10"
                            }
                            [
                                position = 7840, 8600
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc1 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8128, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc2 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8136, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Iq_meas {
                                label = "Iq_meas"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Iq_ref {
                                label = "Iq_ref"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Id_ref {
                                label = "Id_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8032
                                rotation = down
                            ]

                            port Id_meas {
                                label = "Id_meas"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8128
                                rotation = down
                            ]

                            tag From23 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Vd"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Vq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8016, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8128
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8040
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Iq_meas Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Id_ref as Connection297
                            connect Sum9.in Iq_ref as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Id_meas Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8040; 8240, 8040
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                            connect From27 LPF_dc.in as Connection356
                            connect LPF_dc.out Limit3.in as Connection357
                            connect Limit3.out Gain5.in as Connection358
                            connect LPF_dc1.in From26 as Connection359
                            connect LPF_dc1.out Sum6.in as Connection360
                            connect LPF_dc2.in From24 as Connection361
                            connect Sum5.in LPF_dc2.out as Connection362
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Id_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Iq_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7976, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component gen_d_q2alpha_beta "dq to alpha beta" {
                        }
                        [
                            position = 7912, 8584
                            scale = -1, 1
                        ]

                        component gen_probe ud {
                        }
                        [
                            position = 8152, 8448
                        ]

                        component gen_probe uq {
                        }
                        [
                            position = 8144, 8744
                        ]

                        component Subsystem "outer power loop1" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8144
                                rotation = down
                            ]

                            port Id_r {
                                label = "Id_r"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8168
                                rotation = down
                            ]

                            port Iq_r {
                                label = "Iq_r"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8080
                                rotation = down
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect Ed Junction142 as Connection390
                            [
                                breakpoints = 8720, 8072
                            ]
                            connect P_ref Junction139 as Connection391
                            [
                                breakpoints = 8752, 8144; 8600, 8144
                            ]
                            connect Id_r Product2.out as Connection392
                            connect Iq_r Product1.out as Connection393
                        }
                        [
                            position = 8496, 8568
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8656, 8632
                            size = 48, 56
                        ]

                        component gen_probe Edq_sq {
                        }
                        [
                            position = 8656, 8712
                        ]

                        port ma {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port mb {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From29 {
                            value = "Id"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8736
                            hide_name = True
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Iq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8616
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From20 {
                            value = "Vd"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8568
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Vq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8600
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8512
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8544
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        junction Junction23 sp
                        [
                            position = 8352, 8664
                        ]

                        junction Junction17 sp
                        [
                            position = 8032, 8560
                        ]

                        junction Junction18 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction19 sp
                        [
                            position = 8112, 8520
                        ]

                        junction Junction20 sp
                        [
                            position = 8112, 8656
                        ]

                        junction Junction13 sp
                        [
                            position = 8728, 8568
                        ]

                        junction Junction14 sp
                        [
                            position = 8752, 8600
                        ]

                        junction Junction21 sp
                        [
                            position = 8608, 8632
                        ]

                        junction Junction22 sp
                        [
                            position = 8296, 8520
                        ]

                        connect From29 "inner current control loop.Id_meas" as Connection253
                        connect From30 "inner current control loop.Iq_meas" as Connection257
                        connect "inner current control loop.Iq_ref" Junction23 as Connection505
                        [
                            breakpoints = 8240, 8664
                        ]
                        connect Junction23 Iq_ref.in as Connection506
                        [
                            breakpoints = 8352, 8664; 8352, 8664; 8352, 8664
                        ]
                        connect "outer power loop1.Iq_r" Junction23 as Connection507
                        connect Ud.in Junction17 as Connection449
                        connect Junction17 Gain5.out as Connection450
                        connect "dq to alpha beta.d" Junction17 as Connection451
                        connect Uq.in Junction18 as Connection452
                        connect Junction18 Gain6.out as Connection453
                        [
                            breakpoints = 8032, 8624
                        ]
                        connect "dq to alpha beta.q" Junction18 as Connection454
                        connect From1 "dq to alpha beta.wt" as Connection455
                        connect ma "dq to alpha beta.alpha" as Connection456
                        connect mb "dq to alpha beta.beta" as Connection457
                        connect Gain5.in Junction19 as Connection458
                        connect Junction19 "inner current control loop.Ud1" as Connection459
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect ud.in Junction19 as Connection460
                        connect Gain6.in Junction20 as Connection461
                        connect Junction20 "inner current control loop.Uq1" as Connection462
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect uq.in Junction20 as Connection463
                        connect From42 "outer power loop1.P_ref" as Connection431
                        connect From43 "outer power loop1.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop1.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop1.Eq" as Connection437
                        [
                            breakpoints = 8752, 8600; 8696, 8600
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                        connect squared_Vt2.Et_p2 Junction21 as Connection464
                        connect Junction21 "outer power loop1.Et_p2" as Connection465
                        connect Edq_sq.in Junction21 as Connection466
                        connect Id_ref.in Junction22 as Connection499
                        [
                            breakpoints = 8296, 8416; 8296, 8504
                        ]
                        connect Junction22 "inner current control loop.Id_ref" as Connection500
                        [
                            breakpoints = 8296, 8520; 8296, 8520; 8288, 8520; 8296, 8520
                        ]
                        connect "outer power loop1.Id_r" Junction22 as Connection501
                    }
                    [
                        position = 7224, 8360
                        size = 128, 152
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 6880, 8512
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_split "Bus Split1" {
                    }
                    [
                        position = 6944, 8360
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain20 {
                        gain = "-1"
                    }
                    [
                        position = 6832, 8408
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_z_domain_transfer "Hilbert Transform" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7000, 8896
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts"
                        input_terminals = "real in;inherit pi;inherit Ts;"
                        input_terminals_dimensions = "inherit;inherit;inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7384, 8688
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 7608, 8736
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 7488, 8720
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe Vd {
                    }
                    [
                        position = 7656, 8856
                    ]

                    component gen_probe Vq {
                    }
                    [
                        position = 7648, 9040
                    ]

                    component gen_z_domain_transfer "Hilbert Transform1" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 6992, 9016
                    ]

                    component gen_probe Id {
                    }
                    [
                        position = 8168, 8856
                    ]

                    component gen_probe Iq {
                    }
                    [
                        position = 8168, 9056
                    ]

                    component gen_gain Gain28 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7528, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain29 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7520, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain30 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain31 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq1" {
                    }
                    [
                        position = 7408, 8944
                        hide_name = True
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq2" {
                    }
                    [
                        position = 7912, 8936
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8056, 8640
                        hide_name = True
                    ]

                    component gen_gain Gain22 {
                        gain = "1000/S"
                    }
                    [
                        position = 7968, 8432
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        input_terminals = "real ref;int charge;"
                        input_terminals_dimensions = "1;1"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'ref\', True), (\'charge\', True)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = -1;
else out = ref;
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7880, 8432
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8464
                        hide_name = True
                        size = 32, 32
                    ]

                    component src_scada_input charge {
                        execution_rate = "Ts"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 7720, 8464
                    ]

                    component "core/Rate Transition" "Rate Transition9" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8400
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_probe Pref {
                    }
                    [
                        position = 7864, 8296
                    ]

                    component gen_gain Gain23 {
                        gain = "1000"
                    }
                    [
                        position = 7768, 8296
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        execution_rate = "1"
                        global_variables = "int k;real t;"
                        init_fnc = "/*Begin code section*/
k = 0; t = 1;
/*End code section*/"
                        input_terminals = ""
                        input_terminals_dimensions = ""
                        input_terminals_feedthrough = ""
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
Pref = 0.2;

if (k>12) k = 0;
if (t>3) t = 0;
if (k==0) {Pref = 0.7;}
else if (k==1) {Pref = 0.8;}
else if (k==2) {Pref = 0.6;}
else if (k==3) {Pref = 0.5;}
else if (k==4) {Pref = 0.2;}
else if (k==5) {Pref = 0.8;}
else if (k==6) {Pref = 0.7;}
else if(k==7) {Pref = 0.5;}
else if(k==8) {Pref = 0.66;}
else if(k==9) {Pref =0.75;}
else if(k==10) {Pref =0.54;}
else if(k==11) {Pref =0.30;}
else if(k==12) {Pref =0.45;}

if (t>=3) k+=1;
t+=1;
/*End code section*/"
                        output_terminals = "real Pref;"
                        output_terminals_dimensions = "1"
                        output_terminals_feedthrough = "False"
                        output_terminals_show_labels = "True"
                    }
                    [
                        position = 7608, 8400
                        size = 72, 88
                    ]

                    component gen_gain Gain32 {
                        gain = "1/S"
                    }
                    [
                        position = 7760, 8560
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "2*np.pi*60"
                    }
                    [
                        position = 7016, 8680
                        hide_name = True
                    ]

                    port En {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6768, 8512
                        scale = -1, 1
                    ]

                    port ma {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6800, 8336
                        scale = -1, 1
                    ]

                    port mb {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6760, 8408
                        scale = -1, 1
                    ]

                    port PREF {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7688, 8560
                    ]

                    tag Goto60 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8848
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From54 {
                        value = "V"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6832, 8848
                        hide_name = True
                    ]

                    tag Goto61 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8896
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From55 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8920
                        hide_name = True
                    ]

                    tag From56 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8952
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7264, 8688
                        scale = -1, 1
                    ]

                    tag From57 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8992
                        hide_name = True
                    ]

                    tag Goto64 {
                        value = "Vd"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7632, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto65 {
                        value = "Vq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7624, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto66 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 8968
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From60 {
                        value = "I"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6824, 8968
                        hide_name = True
                    ]

                    tag Goto67 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 9016
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From61 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8904
                        hide_name = True
                    ]

                    tag From62 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8936
                        hide_name = True
                    ]

                    tag Goto68 {
                        value = "Id"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto69 {
                        value = "Iq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto57 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7136, 8680
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From65 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8672
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag From66 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8968
                        hide_name = True
                    ]

                    tag Goto55 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7848, 8560
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto56 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8192, 8640
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction276 sp
                    [
                        position = 6904, 8352
                    ]

                    junction Junction386 sp
                    [
                        position = 6912, 8848
                    ]

                    junction Junction392 sp
                    [
                        position = 6904, 8968
                    ]

                    junction Junction398 sp
                    [
                        position = 7568, 8920
                    ]

                    junction Junction399 sp
                    [
                        position = 7560, 8984
                    ]

                    junction Junction400 sp
                    [
                        position = 8064, 8920
                    ]

                    junction Junction401 sp
                    [
                        position = 8072, 8984
                    ]

                    junction Junction403 sp
                    [
                        position = 7696, 8400
                    ]

                    connect En Constant2.out as Connection1061
                    connect ma Junction276 as Connection1064
                    connect Junction276 "Bus Split1.out" as Connection1065
                    connect Gain20.in Junction276 as Connection1066
                    connect Gain20.out mb as Connection1067
                    connect "Bus Split1.in" "Bus Join1.out" as Connection4453
                    connect From54 Junction386 as Connection4478
                    connect Junction386 Goto60 as Connection4479
                    connect "Hilbert Transform.in" Junction386 as Connection4480
                    connect "Hilbert Transform.out" Goto61 as Connection4481
                    connect "C function4.out" Goto21 as Connection1023
                    connect Constant3.out "C function4.pi" as Connection1024
                    [
                        breakpoints = 7520, 8736; 7520, 8688
                    ]
                    connect Constant4.out "C function4.Ts" as Connection1025
                    connect From60 Junction392 as Connection4503
                    connect Junction392 Goto66 as Connection4504
                    connect "Hilbert Transform1.in" Junction392 as Connection4505
                    connect "Hilbert Transform1.out" Goto67 as Connection4506
                    connect Gain28.out Junction398 as Connection4539
                    connect Junction398 Goto64 as Connection4540
                    connect Vd.in Junction398 as Connection4541
                    connect Gain29.out Junction399 as Connection4543
                    connect Junction399 Goto65 as Connection4544
                    connect Vq.in Junction399 as Connection4545
                    connect Gain30.out Junction400 as Connection4548
                    connect Junction400 Goto68 as Connection4549
                    connect Id.in Junction400 as Connection4550
                    connect Gain31.out Junction401 as Connection4551
                    connect Junction401 Goto69 as Connection4552
                    connect Iq.in Junction401 as Connection4553
                    connect "Bus Join1.in" "Outer Voltage Loop + Inner Current Loop.ma" as Connection4554
                    [
                        breakpoints = 7104, 8304
                    ]
                    connect "Outer Voltage Loop + Inner Current Loop.mb" "Bus Join1.in1" as Connection4555
                    [
                        breakpoints = 7120, 8368
                    ]
                    connect From55 "alpha beta to dq1.alpha" as Connection4561
                    connect From56 "alpha beta to dq1.beta" as Connection4562
                    connect From57 "alpha beta to dq1.wt" as Connection4563
                    connect "alpha beta to dq1.d" Gain28.in as Connection4564
                    connect "alpha beta to dq1.q" Gain29.in as Connection4565
                    connect "alpha beta to dq2.d" Gain30.in as Connection4566
                    connect "alpha beta to dq2.q" Gain31.in as Connection4567
                    connect From61 "alpha beta to dq2.alpha" as Connection4568
                    connect From62 "alpha beta to dq2.beta" as Connection4569
                    connect From66 "alpha beta to dq2.wt" as Connection4570
                    connect From65 "C function4.in" as Connection4575
                    connect Constant5.out Goto56 as Connection4577
                    connect charge.out "Rate Transition8.in" as Connection4421
                    connect "Rate Transition9.out" "C function1.ref" as Connection4425
                    connect Pref.in Gain23.out as Connection4436
                    connect "Rate Transition8.out" "C function1.charge" as Connection4580
                    [
                        breakpoints = 7840, 8464
                    ]
                    connect PREF Gain32.in as Connection4585
                    connect "Rate Transition9.in" Junction403 as Connection4581
                    connect Gain32.out Goto55 as Connection4586
                    connect Junction403 Gain23.in as Connection4582
                    [
                        breakpoints = 7696, 8400
                    ]
                    connect "C function3.Pref" Junction403 as Connection4583
                    connect Constant6.out Goto57 as Connection4587
                    connect Gain22.in "C function1.out" as Connection4584
                    [
                        breakpoints = 7928, 8432
                    ]
                }
                [
                    position = 7408, 7760
                    size = 88, 96
                ]

                component pas_inductor La {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7848
                    rotation = down
                ]

                component pas_inductor Loa {
                    inductance = "L_o"
                }
                [
                    position = 8392, 7848
                    rotation = down
                ]

                component "core/Voltage Measurement" E {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8024, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" I {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7848
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Cs {
                    capacitance = "C_s"
                }
                [
                    position = 8104, 8096
                    rotation = right
                ]

                component gen_probe S {
                }
                [
                    position = 8144, 7656
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Q {
                }
                [
                    position = 8144, 7592
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 8144, 7720
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe P {
                }
                [
                    position = 8144, 7528
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem Power_Meas {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8232
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "S"
                    }
                    [
                        position = 7952, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component Subsystem Power_Meas_DQpu {
                        layout = dynamic
                        component gen_c_function S_and_pf {
                            init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                            input_terminals = "real P;inherit Q;"
                            input_terminals_dimensions = "inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = "False;False;"
                            output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                            output_terminals = "inherit S;inherit pf;"
                            output_terminals_dimensions = "inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = "False;False;"
                        }
                        [
                            position = 8392, 8192
                            size = 48, 48
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 8024, 8232
                            hide_name = True
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 8024, 8320
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_Q {
                            a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8272
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8024, 8064
                            hide_name = True
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8128, 8112
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_P {
                            a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8024, 8152
                            hide_name = True
                        ]

                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8128, 8272
                            hide_name = True
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8056
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8144
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8240
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8328
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8112
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8272
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8144
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8240
                        ]

                        junction Junction1 sp
                        [
                            position = 7920, 8240
                        ]

                        junction Junction2 sp
                        [
                            position = 7928, 8328
                        ]

                        junction Junction3 sp
                        [
                            position = 7944, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 7960, 8056
                        ]

                        junction Junction5 sp
                        [
                            position = 8264, 8112
                        ]

                        junction Junction6 sp
                        [
                            position = 8264, 8272
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                        [
                            position = 8000, 7976
                        ]

                        connect Junction1 Id as Connection49
                        connect Junction1 Product4.in1 as Connection24
                        connect Junction2 Iq as Connection52
                        connect Junction2 Product3.in1 as Connection27
                        connect Junction3 Product2.in as Connection32
                        connect Junction3 Vq as Connection53
                        connect Junction4 Product1.in as Connection35
                        connect Junction4 Vd as Connection50
                        connect Junction5 LPF_P.out as Connection44
                        connect Junction5 P as Connection55
                        connect Junction6 LPF_Q.out as Connection47
                        connect Junction6 Q as Connection56
                        connect LPF_P.in Sum1.out as Connection39
                        connect LPF_Q.in Sum2.out as Connection40
                        connect Product1.in1 Junction1 as Connection25
                        connect Product2.in1 Junction2 as Connection28
                        connect Product3.in Junction4 as Connection36
                        connect Product4.in Junction3 as Connection33
                        connect S_and_pf.P Junction5 as Connection45
                        connect S_and_pf.Q Junction6 as Connection48
                        connect S_and_pf.S S as Connection51
                        connect S_and_pf.pf pf as Connection54
                        connect Sum1.in Product1.out as Connection29
                        connect Sum1.in1 Product2.out as Connection30
                        connect Sum2.in1 Product3.out as Connection38
                        connect Sum2.in Product4.out as Connection37

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                            fc_P {
                                label = "Active power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            fc_Q {
                                label = "Reactive power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                            
                            ENDCODE
                        }
                    }
                    [
                        position = 7864, 8160
                        size = 72, 128
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8048
                        rotation = right
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8048
                        rotation = right
                    ]

                    port Id {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8248
                        rotation = left
                    ]

                    port Iq {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8248
                        rotation = left
                    ]

                    port P {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8000
                        rotation = left
                    ]

                    port Q {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8000
                        rotation = left
                    ]

                    port S {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                        rotation = right
                    ]

                    port pf {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7992, 8288
                        rotation = right
                    ]

                    connect Gain4.out P as Connection10
                    connect Gain5.in Power_Meas_DQpu.Q as Connection21
                    connect Gain5.out Q as Connection11
                    connect Gain6.in Power_Meas_DQpu.S as Connection16
                    connect Gain6.out S as Connection13
                    connect Id Power_Meas_DQpu.Id as Connection14
                    connect Iq Power_Meas_DQpu.Iq as Connection17
                    connect Vd Power_Meas_DQpu.Vd as Connection15
                    connect Vq Power_Meas_DQpu.Vq as Connection18
                    connect pf Power_Meas_DQpu.pf as Connection19
                    connect Gain4.in Power_Meas_DQpu.P as Connection25
                    [
                        breakpoints = 7920, 8128
                    ]
                }
                [
                    position = 7952, 7624
                    size = 96, 232
                ]

                component "core/Single Phase Inverter" "Single Phase Inverter1" {
                    ctrl_src = "Internal modulator"
                    fvd_def_method = "LUT"
                    ref_sig_min_max = "[-1, 1]"
                }
                [
                    position = 7544, 8000
                    size = 127, 256
                ]

                component pas_resistor Ra {
                    resistance = "R_i"
                }
                [
                    position = 7728, 7848
                    rotation = down
                ]

                component pas_resistor Rs {
                    resistance = "R_s"
                }
                [
                    position = 8104, 8000
                    rotation = right
                    scale = -1, 1
                ]

                component pas_resistor Roa {
                    resistance = "R_o"
                }
                [
                    position = 8280, 7848
                    rotation = down
                ]

                component "core/Voltage RMS" Vrms {
                    frequency = "60"
                    op_mode = "Fixed frequency"
                }
                [
                    position = 8192, 8008
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VDC {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7344, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_z_domain_transfer LPF_dc {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 7248, 8000
                    scale = -1, 1
                ]

                component pas_inductor Lb {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8136
                    rotation = down
                ]

                component pas_resistor Rb {
                    resistance = "R_i"
                }
                [
                    position = 7728, 8136
                    rotation = down
                ]

                component pas_inductor Lob {
                    inductance = "L_o"
                }
                [
                    position = 8400, 8136
                    rotation = down
                ]

                component pas_resistor Rob {
                    resistance = "R_o"
                }
                [
                    position = 8288, 8136
                    rotation = down
                ]

                component pas_capacitor C {
                    capacitance = "2000e-6"
                }
                [
                    position = 7416, 8000
                    rotation = right
                ]

                component gen_probe Pref_probe {
                }
                [
                    position = 7384, 7632
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7928, 8000
                    scale = -1, 1
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7896, 7936
                    scale = -1, 1
                    size = 88, 48
                ]

                port B {
                    label = "B"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8624, 8136
                    scale = -1, 1
                ]

                port A {
                    label = "A"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8624, 7848
                    scale = -1, 1
                ]

                port + {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7904
                ]

                port - {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8096
                ]

                port Pref {
                    position = top:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7264, 7760
                ]

                tag Goto35 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7776, 7936
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto41 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7776, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto49 {
                    value = "Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7568
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto50 {
                    value = "P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7504
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto51 {
                    value = "pf"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7696
                    hide_name = True
                    size = 0, 0
                ]

                tag From31 {
                    value = "Vq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto52 {
                    value = "S"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7632
                    hide_name = True
                    size = 0, 0
                ]

                tag From34 {
                    value = "Id"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Vd"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7528
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Iq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7720
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto53 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7144, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                junction Junction397 pe
                [
                    position = 7344, 8096
                ]

                junction Junction188 sp
                [
                    position = 8032, 7528
                ]

                junction Junction189 sp
                [
                    position = 8032, 7592
                ]

                junction Junction190 sp
                [
                    position = 8032, 7656
                ]

                junction Junction191 sp
                [
                    position = 8032, 7720
                ]

                junction Junction385 pe
                [
                    position = 8104, 7920
                ]

                junction Junction387 pe
                [
                    position = 8104, 7848
                ]

                junction Junction388 pe
                [
                    position = 8104, 7920
                ]

                junction Junction393 pe
                [
                    position = 7344, 7904
                ]

                junction Junction395 pe
                [
                    position = 8024, 8136
                ]

                junction Junction396 pe
                [
                    position = 8192, 8136
                ]

                junction Junction398 pe
                [
                    position = 7416, 7904
                ]

                junction Junction399 pe
                [
                    position = 7416, 8096
                ]

                junction Junction401 sp
                [
                    position = 7848, 8000
                ]

                junction Junction403 sp
                [
                    position = 7312, 7760
                ]

                connect - Junction397 as Connection4543
                connect Junction397 VDC.n_node as Connection4544
                [
                    breakpoints = 7344, 8096; 7344, 8096
                ]
                connect La.p_node I.p_node as Connection378
                connect From31 Power_Meas.Vq as Connection403
                connect From32 Power_Meas.Vd as Connection402
                connect From34 Power_Meas.Id as Connection404
                connect Goto49 Junction189 as Connection544
                connect Goto52 Junction190 as Connection547
                connect Goto51 Junction191 as Connection550
                connect Junction188 Power_Meas.P as Connection540
                connect Junction189 Power_Meas.Q as Connection543
                connect Junction190 Power_Meas.S as Connection546
                connect Junction191 Power_Meas.pf as Connection549
                connect P.in Junction188 as Connection539
                connect Power_Meas.Iq From35 as Connection405
                connect Q.in Junction189 as Connection542
                connect S.in Junction190 as Connection545
                connect pf.in Junction191 as Connection548
                connect Ra.p_node La.n_node as Connection4453
                connect Ra.n_node "Single Phase Inverter1.a_in" as Connection4454
                connect Rs.p_node Junction385 as Connection4472
                connect E.p_node Junction385 as Connection4474
                connect Rs.n_node Cs.p_node as Connection4475
                connect I.n_node Junction387 as Connection4486
                connect Roa.n_node Junction387 as Connection4488
                connect Roa.p_node Loa.n_node as Connection4489
                connect Junction387 Junction388 as Connection4498
                [
                    breakpoints = 8104, 7848; 8104, 7848
                ]
                connect Junction388 Junction385 as Connection4499
                [
                    breakpoints = 8104, 7920
                ]
                connect Vrms.p_node Junction388 as Connection4500
                connect Junction393 + as Connection4521
                [
                    breakpoints = 7344, 7904
                ]
                connect VDC.p_node Junction393 as Connection4522
                connect VDC.out LPF_dc.in as Connection4526
                connect "Single Phase Inverter1.b_in" Rb.n_node as Connection4529
                [
                    breakpoints = 7624, 8136; 7680, 8136
                ]
                connect Rb.p_node Lb.n_node as Connection4530
                connect E.n_node Junction395 as Connection4531
                connect Junction395 Cs.n_node as Connection4532
                [
                    breakpoints = 8024, 8136
                ]
                connect Lb.p_node Junction395 as Connection4533
                connect Rob.p_node Lob.n_node as Connection4534
                connect Vrms.n_node Junction396 as Connection4536
                connect Junction396 Cs.n_node as Connection4537
                [
                    breakpoints = 8192, 8136
                ]
                connect Rob.n_node Junction396 as Connection4538
                connect Lob.p_node B as Connection4539
                connect "Single Phase Inverter1.pos_out" Junction398 as Connection4546
                connect Junction398 Junction393 as Connection4547
                [
                    breakpoints = 7376, 7904; 7376, 7904; 7376, 7904
                ]
                connect C.p_node Junction398 as Connection4548
                connect "Single Phase Inverter1.neg_out" Junction399 as Connection4549
                connect Junction399 Junction397 as Connection4550
                connect C.n_node Junction399 as Connection4551
                connect Junction401 V.in as Connection4596
                [
                    breakpoints = 7848, 8000
                ]
                connect Goto41 Junction401 as Connection4597
                connect Controller.mb "Single Phase Inverter1.InB" as Connection4599
                connect Controller.ma "Single Phase Inverter1.InA" as Connection4600
                connect Controller.En "Single Phase Inverter1.En" as Connection4601
                connect Goto53 LPF_dc.out as Connection4602
                connect Pref Junction403 as Connection4607
                connect Junction403 Controller.PREF as Connection4608
                connect Pref_probe.in Junction403 as Connection4609
                connect E.out BPF.in as Connection4610
                connect BPF.out Junction401 as Connection4611
                connect Goto35 BPF1.out as Connection4612
                connect BPF1.in I.out as Connection4613
                connect Loa.p_node A as Connection4614
                connect Junction188 Goto50 as Connection4615
                [
                    breakpoints = 8032, 7528; 8032, 7504
                ]

                C_s = "40e-6"
                Imax = "1"
                Imin = "-1"
                Ki_I = "4*20"
                Kp_I = "0.076*20"
                L_i = "0.0133/2"
                L_o = "38e-6/2"
                R_i = "1e-3/2"
                R_o = "2e-3/2"
                R_s = "0.3244"
                S = "50e3"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A lead acid battery interfaced with a three-phase inverter and LCL filter</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "10e3"
                        unit = "VA"
                        group = "1. Single-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "1. Single-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Single-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_inv"
                        unit = "s"
                        group = "1. Single-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "0.0165"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "2.5872"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "5e-6"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "1e-4"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    Kp_I {
                        label = "Current Regulator Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.6079*30"
                        group = "3. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Current Regulator Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "4*30"
                        group = "3. Cascaded Controller"
                    }

                    Imax {
                        label = "Current Regulator Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1.5"
                        group = "3. Cascaded Controller"
                    }

                    Imin {
                        label = "Current Regulator Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1.5"
                        group = "3. Cascaded Controller"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE

                    CODE define_icon
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE
                }
            }
            [
                position = 8384, 8144
                size = 64, 80
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_inv"
            }
            [
                position = 8160, 8056
                hide_name = True
                size = 32, 32
            ]

            component Subsystem Measurement {
                layout = dynamic
                component "core/Voltage Measurement" Va {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8240, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8192, 8088
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe P {
                }
                [
                    position = 8888, 7856
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8296, 7992
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8352, 8152
                    size = 88, 48
                ]

                component gen_z_domain_transfer "Hilbert Transform" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8112, 7832
                ]

                component gen_z_domain_transfer "Hilbert Transform1" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8104, 7952
                ]

                component gen_product Product1 {
                }
                [
                    position = 8512, 7808
                    hide_name = True
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8616, 7856
                    hide_name = True
                ]

                component gen_z_domain_transfer LPF_P {
                    a_coeff = "[1.0/(2*np.pi),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8768, 7856
                ]

                component gen_product Product2 {
                }
                [
                    position = 8512, 7896
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "0.5"
                }
                [
                    position = 8696, 7856
                    hide_name = True
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8216
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8216
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8096, 8088
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8088
                    rotation = down
                ]

                port Pm {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8856, 7784
                ]

                tag From31 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7888
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7840
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7928
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto60 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7784
                    hide_name = True
                    size = 60, 20
                ]

                tag From54 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7944, 7784
                    hide_name = True
                ]

                tag Goto61 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7832
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto66 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7904
                    hide_name = True
                    size = 60, 20
                ]

                tag From60 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7936, 7904
                    hide_name = True
                ]

                tag Goto67 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7952
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto68 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8472, 8152
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto69 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8424, 7992
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7800
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction647 pe
                [
                    position = 8240, 8216
                ]

                junction Junction651 pe
                [
                    position = 8240, 8088
                ]

                junction Junction386 sp
                [
                    position = 8024, 7784
                ]

                junction Junction392 sp
                [
                    position = 8016, 7904
                ]

                junction Junction652 sp
                [
                    position = 8824, 7856
                ]

                connect b Junction647 as Connection4978
                connect Junction647 Va.n_node as Connection4979
                [
                    breakpoints = 8240, 8216
                ]
                connect a Junction651 as Connection4996
                connect Junction651 Va.p_node as Connection4997
                [
                    breakpoints = 8240, 8088
                ]
                connect Ia.p_node Junction651 as Connection4998
                connect Ia.n_node A as Connection5000
                [
                    breakpoints = 8144, 8088
                ]
                connect B Junction647 as Connection5001
                [
                    breakpoints = 8144, 8216
                ]
                connect Goto69 BPF.out as Connection5041
                connect BPF.in Ia.out as Connection5042
                connect Goto68 BPF1.out as Connection5043
                connect BPF1.in Va.out as Connection5044
                connect From54 Junction386 as Connection4478
                connect Junction386 Goto60 as Connection4479
                connect "Hilbert Transform.in" Junction386 as Connection4480
                connect "Hilbert Transform.out" Goto61 as Connection4481
                connect From60 Junction392 as Connection4503
                connect Junction392 Goto66 as Connection4504
                connect "Hilbert Transform1.in" Junction392 as Connection4505
                connect "Hilbert Transform1.out" Goto67 as Connection4506
                connect Sum1.in Product1.out as Connection29
                connect Sum1.in1 Product2.out as Connection30
                connect From31 Product2.in as Connection5032
                connect From32 Product1.in as Connection5033
                connect From34 Product1.in1 as Connection5034
                connect From35 Product2.in1 as Connection5035
                connect P.in Junction652 as Connection5036
                connect Junction652 Pm as Connection5037
                [
                    breakpoints = 8816, 7856; 8816, 7856; 8816, 7856; 8816, 7832
                ]
                connect LPF_P.out Junction652 as Connection5038
                connect LPF_P.in Gain1.out as Connection5039
                connect Gain1.in Sum1.out as Connection5040
            }
            [
                position = 8448, 8320
                size = 48, 88
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8720, 8176
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8712, 8128
                rotation = down
            ]

            junction Junction3 sp
            [
                position = 8152, 8488
            ]

            junction Junction4 sp
            [
                position = 8152, 8424
            ]

            junction Junction5 pe
            [
                position = 8488, 8128
            ]

            junction Junction6 pe
            [
                position = 8512, 8160
            ]

            connect "Core coupling.a" a as Connection18
            connect "Core coupling.b" b as Connection19
            connect Inverter.+ Vs1.p_node as Connection4996
            connect Inverter.- Vs1.n_node as Connection4997
            connect Pref_reg.in Junction3 as Connection4999
            connect Junction3 Modbus.Pref_reg as Connection5000
            connect Sum1.in Junction3 as Connection5001
            connect Pref_ed.in Junction4 as Connection5002
            connect Junction4 Modbus.Pref_ed as Connection5003
            connect Sum1.in1 Junction4 as Connection5004
            connect Sum1.out "Rate Transition1.in" as Connection5006
            connect "Rate Transition1.out" Inverter.Pref as Connection5007
            connect Measurement.A Load.A as Connection5010
            connect Measurement.B Load.B as Connection5011
            connect "Core coupling.A" Junction5 as Connection5012
            connect Junction5 Inverter.A as Connection5013
            [
                breakpoints = 8480, 8128
            ]
            connect Measurement.a Junction5 as Connection5014
            connect "Core coupling.B" Junction6 as Connection5015
            connect Junction6 Inverter.B as Connection5016
            [
                breakpoints = 8512, 8160; 8512, 8160; 8512, 8160
            ]
            connect Measurement.b Junction6 as Connection5017
            connect Measurement.Pm Modbus.Pm as Connection5018

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6312, 7808
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem SolarHouse3 {
            layout = dynamic
            component Subsystem Load {
                layout = dynamic
                component pas_inductor L {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8208, 8144
                    rotation = right
                ]

                component pas_resistor R {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8144, 8144
                    rotation = right
                ]

                port A {
                    label = "A"
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8048
                ]

                port B {
                    label = "B"
                    position = left:2
                    kind = pe
                }
                [
                    position = 8080, 8224
                ]

                junction Junction1 pe
                [
                    position = 8144, 8048
                ]

                junction Junction2 pe
                [
                    position = 8144, 8224
                ]

                connect R.p_node Junction1 as Connection3
                connect Junction1 A as Connection4
                connect L.p_node Junction1 as Connection5
                connect R.n_node Junction2 as Connection6
                connect Junction2 B as Connection7
                connect L.n_node Junction2 as Connection8

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Constant Impedance Load</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxingle-phase RL load.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxand L values are calculated using the input parameters:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated voltage</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated power</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxf: Rated frequency</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxpf: Rated power factor</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                None of the parameters can be set to 0.</p></body></html>"

                    V {
                        label = "Voltage"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "General"
                    }

                    S {
                        label = "Power"
                        widget = edit
                        type = generic
                        default_value = "1e3"
                        unit = "VA"
                        group = "General"
                    }

                    f {
                        label = "Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General"
                    }

                    pf {
                        label = "Power Factor"
                        widget = edit
                        type = generic
                        default_value = "0.9"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8288, 8320
                scale = -1, 1
                size = 48, 72
            ]

            component Subsystem Modbus {
                layout = dynamic
                component gen_terminator Termination1 {
                }
                [
                    position = 8400, 7920
                ]

                component src_constant C_u12 {
                    execution_rate = "Ts"
                }
                [
                    position = 7968, 7800
                ]

                component src_constant C_u13 {
                    execution_rate = "Ts"
                    value = "50"
                }
                [
                    position = 7920, 7872
                ]

                component src_constant C_u11 {
                    execution_rate = "Ts"
                }
                [
                    position = 8008, 7720
                ]

                component "core/ModBus Device" "ModBus Device3 (config3)" {
                    configuration = "config3"
                    execution_rate = "Ts"
                }
                [
                    position = 8192, 7992
                    size = 184, 184
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts"
                }
                [
                    position = 7880, 8064
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe P_probe {
                }
                [
                    position = 7904, 8000
                ]

                component gen_bus_join "Bus Join1" {
                }
                [
                    position = 7960, 8080
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8376, 8064
                ]

                component "core/Dynamic Table" "Dynamic Table" {
                    execution_rate = "Ts"
                    import_dynamic_table_file = "C:/Users/zholbar1/Documents/microgrid_testbed/APRA-E MST project/Q4/Test 2/Solar Village Test2/P3max.csv"
                    signal_names = "[\'P3max\']"
                    x_vec = "[0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788, 792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844, 848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 960, 964, 968, 972, 976, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1092, 1096, 1100, 1104, 1108, 1112, 1116, 1120, 1124, 1128, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1180, 1184, 1188, 1192, 1196, 1200, 1204, 1208, 1212, 1216, 1220, 1224, 1228, 1232, 1236, 1240, 1244, 1248, 1252, 1256, 1260, 1264, 1268, 1272, 1276, 1280, 1284, 1288, 1292, 1296, 1300, 1304, 1308, 1312, 1316, 1320, 1324, 1328, 1332, 1336, 1340, 1344, 1348, 1352, 1356, 1360, 1364, 1368, 1372, 1376, 1380, 1384, 1388, 1392, 1396, 1400, 1404, 1408, 1412, 1416, 1420, 1424, 1428, 1432, 1436, 1440, 1444, 1448, 1452, 1456, 1460, 1464, 1468, 1472, 1476, 1480, 1484, 1488, 1492, 1496, 1500, 1504, 1508, 1512, 1516, 1520, 1524, 1528, 1532, 1536, 1540, 1544, 1548, 1552, 1556, 1560, 1564, 1568, 1572, 1576, 1580, 1584, 1588, 1592, 1596, 1600, 1604, 1608, 1612, 1616, 1620, 1624, 1628, 1632, 1636, 1640, 1644, 1648, 1652, 1656, 1660, 1664, 1668, 1672, 1676, 1680, 1684, 1688, 1692, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1724, 1728, 1732, 1736, 1740, 1744, 1748, 1752, 1756, 1760, 1764, 1768, 1772, 1776, 1780, 1784, 1788, 1792, 1796, 1800, 1804, 1808, 1812, 1816, 1820, 1824, 1828, 1832, 1836, 1840, 1844, 1848, 1852, 1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1900, 1904, 1908, 1912, 1916, 1920, 1924, 1928, 1932, 1936, 1940, 1944, 1948, 1952, 1956, 1960, 1964, 1968, 1972, 1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020, 2024, 2028, 2032, 2036, 2040, 2044, 2048, 2052, 2056, 2060, 2064, 2068, 2072, 2076, 2080, 2084, 2088, 2092, 2096, 2100, 2104, 2108, 2112, 2116, 2120, 2124, 2128, 2132, 2136, 2140, 2144, 2148, 2152, 2156, 2160, 2164, 2168, 2172, 2176, 2180, 2184, 2188, 2192, 2196, 2200, 2204, 2208, 2212, 2216, 2220, 2224, 2228, 2232, 2236, 2240, 2244, 2248, 2252, 2256, 2260, 2264, 2268, 2272, 2276, 2280, 2284, 2288, 2292, 2296, 2300, 2304, 2308, 2312, 2316, 2320, 2324, 2328, 2332, 2336, 2340, 2344, 2348, 2352, 2356, 2360, 2364, 2368, 2372, 2376, 2380, 2384, 2388, 2392, 2396, 2400, 2404, 2408, 2412, 2416, 2420, 2424, 2428, 2432, 2436, 2440, 2444, 2448, 2452, 2456, 2460, 2464, 2468, 2472, 2476, 2480, 2484, 2488, 2492, 2496, 2500, 2504, 2508, 2512, 2516, 2520, 2524, 2528, 2532, 2536, 2540, 2544, 2548, 2552, 2556, 2560, 2564, 2568, 2572, 2576, 2580, 2584, 2588, 2592, 2596, 2600, 2604, 2608, 2612, 2616, 2620, 2624, 2628, 2632, 2636, 2640, 2644, 2648, 2652, 2656, 2660, 2664, 2668, 2672, 2676, 2680, 2684, 2688, 2692, 2696, 2700, 2704, 2708, 2712, 2716, 2720, 2724, 2728, 2732, 2736, 2740, 2744, 2748, 2752, 2756, 2760, 2764, 2768, 2772, 2776, 2780, 2784, 2788, 2792, 2796, 2800, 2804, 2808, 2812, 2816, 2820, 2824, 2828, 2832, 2836, 2840, 2844, 2848, 2852, 2856, 2860, 2864, 2868, 2872, 2876, 2880, 2884, 2888, 2892, 2896, 2900, 2904, 2908, 2912, 2916, 2920, 2924, 2928, 2932, 2936, 2940, 2944, 2948, 2952, 2956, 2960, 2964, 2968, 2972, 2976, 2980, 2984, 2988, 2992, 2996, 3000, 3004, 3008, 3012, 3016, 3020, 3024, 3028, 3032, 3036, 3040, 3044, 3048, 3052, 3056, 3060, 3064, 3068, 3072, 3076, 3080, 3084, 3088, 3092, 3096, 3100, 3104, 3108, 3112, 3116, 3120, 3124, 3128, 3132, 3136, 3140, 3144, 3148, 3152, 3156, 3160, 3164, 3168, 3172, 3176, 3180, 3184, 3188, 3192, 3196, 3200, 3204, 3208, 3212, 3216, 3220, 3224, 3228, 3232, 3236, 3240, 3244, 3248, 3252, 3256, 3260, 3264, 3268, 3272, 3276, 3280, 3284, 3288, 3292, 3296, 3300, 3304, 3308, 3312, 3316, 3320, 3324, 3328, 3332, 3336, 3340, 3344, 3348, 3352, 3356, 3360, 3364, 3368, 3372, 3376, 3380, 3384, 3388, 3392, 3396, 3400, 3404, 3408, 3412, 3416, 3420, 3424, 3428, 3432, 3436, 3440, 3444, 3448, 3452, 3456, 3460, 3464, 3468, 3472, 3476, 3480, 3484, 3488, 3492, 3496, 3500, 3504, 3508, 3512, 3516, 3520, 3524, 3528, 3532, 3536, 3540, 3544, 3548, 3552, 3556, 3560, 3564, 3568, 3572, 3576, 3580, 3584, 3588, 3592, 3596, 3600, 3604, 3608, 3612, 3616, 3620, 3624, 3628, 3632, 3636, 3640, 3644, 3648, 3652, 3656, 3660, 3664, 3668, 3672, 3676, 3680, 3684, 3688, 3692, 3696, 3700, 3704, 3708, 3712, 3716, 3720, 3724, 3728, 3732, 3736, 3740, 3744, 3748, 3752, 3756, 3760, 3764, 3768, 3772, 3776, 3780, 3784, 3788, 3792, 3796, 3800, 3804, 3808, 3812, 3816, 3820, 3824, 3828, 3832, 3836, 3840, 3844, 3848, 3852, 3856, 3860, 3864, 3868, 3872, 3876, 3880, 3884, 3888, 3892, 3896, 3900, 3904, 3908, 3912, 3916, 3920, 3924, 3928, 3932, 3936, 3940, 3944, 3948, 3952, 3956, 3960, 3964, 3968, 3972, 3976, 3980, 3984, 3988, 3992, 3996, 4000, 4004, 4008, 4012, 4016, 4020, 4024, 4028, 4032, 4036, 4040, 4044, 4048, 4052, 4056, 4060, 4064, 4068, 4072, 4076, 4080, 4084, 4088, 4092, 4096, 4100, 4104, 4108, 4112, 4116, 4120, 4124, 4128, 4132, 4136, 4140, 4144, 4148, 4152, 4156, 4160, 4164, 4168, 4172, 4176, 4180, 4184, 4188, 4192, 4196, 4200, 4204, 4208, 4212, 4216, 4220, 4224, 4228, 4232, 4236, 4240, 4244, 4248, 4252, 4256, 4260, 4264, 4268, 4272, 4276, 4280, 4284, 4288, 4292, 4296, 4300, 4304, 4308, 4312, 4316, 4320, 4324, 4328, 4332, 4336, 4340, 4344, 4348, 4352, 4356, 4360, 4364, 4368, 4372, 4376, 4380, 4384, 4388, 4392, 4396, 4400, 4404, 4408, 4412, 4416, 4420, 4424, 4428, 4432, 4436, 4440, 4444, 4448, 4452, 4456, 4460, 4464, 4468, 4472, 4476, 4480, 4484, 4488, 4492, 4496, 4500, 4504, 4508, 4512, 4516, 4520, 4524, 4528, 4532, 4536, 4540, 4544, 4548, 4552, 4556, 4560, 4564, 4568, 4572, 4576, 4580, 4584, 4588, 4592, 4596, 4600, 4604, 4608, 4612, 4616, 4620, 4624, 4628, 4632, 4636, 4640, 4644, 4648, 4652, 4656, 4660, 4664, 4668, 4672, 4676, 4680, 4684, 4688, 4692, 4696, 4700, 4704, 4708, 4712, 4716, 4720, 4724, 4728, 4732, 4736, 4740, 4744, 4748, 4752, 4756, 4760, 4764, 4768, 4772, 4776, 4780, 4784, 4788, 4792, 4796, 4800, 4804, 4808, 4812, 4816, 4820, 4824, 4828, 4832, 4836, 4840]"
                    y_vec = "[[2338.010223550337, 2332.5149157114183, 2332.5149157114183, 2328.85187903676, 2330.6833470987617, 2330.6833470987617, 2327.020511667485, 2327.020511667485, 2332.5149157114183, 2334.346584750945, 2330.6833470987617, 2334.346584750945, 2334.346584750945, 2332.5149157114183, 2336.1783540757324, 2338.010223550337, 2334.346584750945, 2336.1783540757324, 2334.346584750945, 2334.346584750945, 2338.010223550337, 2336.1783540757324, 2339.842193039502, 2339.842193039502, 2339.842193039502, 2339.842193039502, 2338.010223550337, 2338.010223550337, 2343.5064315214427, 2339.842193039502, 2339.842193039502, 2343.5064315214427, 2343.5064315214427, 2345.3431802412365, 2339.842193039502, 2347.1710684432333, 2343.5064315214427, 2347.1710684432333, 2345.3431802412365, 2345.3431802412365, 2345.3431802412365, 2345.3431802412365, 2343.5064315214427, 2345.3431802412365, 2345.3431802412365, 2354.5060145170028, 2345.3431802412365, 2343.5064315214427, 2343.5064315214427, 2350.8405834544337, 2349.00801646533, 2347.1710684432333, 2352.673249516242, 2343.5064315214427, 2341.674262408164, 2341.674262408164, 2341.674262408164, 2345.3431802412365, 2345.3431802412365, 2343.5064315214427, 2343.5064315214427, 2345.3431802412365, 2347.1710684432333, 2354.5060145170028, 2345.3431802412365, 2345.3431802412365, 2345.3431802412365, 2338.010223550337, 2338.010223550337, 2350.8405834544337, 2349.00801646533, 2345.3431802412365, 2343.5064315214427, 2339.842193039502, 2345.3431802412365, 2336.1783540757324, 2345.3431802412365, 2350.8405834544337, 2347.1710684432333, 2352.673249516242, 2350.8405834544337, 2347.1710684432333, 2350.8405834544337, 2350.8405834544337, 2350.8405834544337, 2350.8405834544337, 2349.00801646533, 2347.1710684432333, 2345.3431802412365, 2338.010223550337, 2341.674262408164, 2343.5064315214427, 2347.1710684432333, 2350.8405834544337, 2343.5064315214427, 2347.1710684432333, 2349.00801646533, 2345.3431802412365, 2339.842193039502, 2354.5060145170028, 2352.673249516242, 2356.338878323132, 2356.338878323132, 2356.338878323132, 2361.8380612345604, 2356.338878323132, 2360.004901811987, 2356.338878323132, 2358.171840795176, 2356.338878323132, 2356.338878323132, 2358.171840795176, 2354.5060145170028, 2352.673249516242, 2349.00801646533, 2345.3431802412365, 2347.1710684432333, 2347.1710684432333, 2350.8405834544337, 2349.00801646533, 2352.673249516242, 2349.00801646533, 2350.8405834544337, 2345.3431802412365, 2347.1710684432333, 2345.3431802412365, 2345.3431802412365, 2349.00801646533, 2347.1710684432333, 2349.00801646533, 2347.1710684432333, 2349.00801646533, 2347.1710684432333, 2356.338878323132, 2352.673249516242, 2356.338878323132, 2356.338878323132, 2361.8380612345604, 2363.6713189300617, 2371.0053297910536, 2371.0053297910536, 2367.3381286094227, 2365.5046747658384, 2360.004901811987, 2356.338878323132, 2356.338878323132, 2354.5060145170028, 2350.8405834544337, 2358.171840795176, 2358.171840795176, 2360.004901811987, 2361.8380612345604, 2360.004901811987, 2361.8380612345604, 2365.5046747658384, 2360.004901811987, 2358.171840795176, 2363.6713189300617, 2363.6713189300617, 2358.171840795176, 2360.004901811987, 2365.5046747658384, 2363.6713189300617, 2356.338878323132, 2358.171840795176, 2356.338878323132, 2356.338878323132, 2360.004901811987, 2356.338878323132, 2358.171840795176, 2356.338878323132, 2356.338878323132, 2358.171840795176, 2352.673249516242, 2358.171840795176, 2354.5060145170028, 2352.673249516242, 2358.171840795176, 2361.8380612345604, 2367.3381286094227, 2376.506863320778, 2374.6729214188063, 2371.0053297910536, 2371.0053297910536, 2363.6713189300617, 2365.5046747658384, 2369.171680328529, 2358.171840795176, 2361.8380612345604, 2358.171840795176, 2350.8405834544337, 2352.673249516242, 2354.5060145170028, 2352.673249516242, 2363.6713189300617, 2363.6713189300617, 2365.5046747658384, 2371.0053297910536, 2369.171680328529, 2374.6729214188063, 2376.506863320778, 2372.83907686503, 2376.506863320778, 2380.179523203446, 2376.506863320778, 2378.340902439568, 2376.506863320778, 2380.179523203446, 2378.340902439568, 2376.506863320778, 2378.340902439568, 2378.340902439568, 2374.6729214188063, 2372.83907686503, 2376.506863320778, 2369.171680328529, 2371.0053297910536, 2374.6729214188063, 2380.179523203446, 2385.682513724684, 2382.0137565993577, 2385.682513724684, 2389.3516571054074, 2385.682513724684, 2389.3516571054074, 2387.5170371990434, 2385.682513724684, 2387.5170371990434, 2385.682513724684, 2391.186373313655, 2391.186373313655, 2389.3516571054074, 2385.682513724684, 2385.682513724684, 2383.848086812632, 2387.5170371990434, 2391.186373313655, 2393.021185693841, 2394.8560941161995, 2398.5261985692027, 2396.6910984511387, 2402.1966856381523, 2402.1966856381523, 2398.5261985692027, 2404.0320723310488, 2393.021185693841, 2394.8560941161995, 2387.5170371990434, 2378.340902439568, 2378.340902439568, 2376.506863320778, 2371.0053297910536, 2378.340902439568, 2378.340902439568, 2371.0053297910536, 2378.340902439568, 2369.171680328529, 2365.5046747658384, 2369.171680328529, 2365.5046747658384, 2367.3381286094227, 2371.0053297910536, 2374.6729214188063, 2382.0137565993577, 2387.5170371990434, 2387.5170371990434, 2385.682513724684, 2391.186373313655, 2389.3516571054074, 2391.186373313655, 2387.5170371990434, 2389.3516571054074, 2387.5170371990434, 2387.5170371990434, 2383.848086812632, 2385.682513724684, 2389.3516571054074, 2380.179523203446, 2378.340902439568, 2385.682513724684, 2387.5170371990434, 2391.186373313655, 2385.682513724684, 2396.6910984511387, 2389.3516571054074, 2398.5261985692027, 2393.021185693841, 2402.1966856381523, 2411.379059028782, 2416.8869287105367, 2415.050877609028, 2418.72307418292, 2420.559313898862, 2424.232075552959, 2420.559313898862, 2427.9052126578, 2424.232075552959, 2424.232075552959, 2418.72307418292, 2422.395647731215, 2415.050877609028, 2416.8869287105367, 2416.8869287105367, 2420.559313898862, 2431.578724200965, 2431.578724200965, 2435.2526091667155, 2437.0896913735355, 2433.4156200652924, 2431.578724200965, 2427.9052126578, 2424.232075552959, 2418.72307418292, 2420.559313898862, 2429.7419216877593, 2431.578724200965, 2440.764134601063, 2449.956356583326, 2455.470100702317, 2457.308199039109, 2455.470100702317, 2455.470100702317, 2459.146388978693, 2455.470100702317, 2460.984670409398, 2460.984670409398, 2457.308199039109, 2460.984670409398, 2459.146388978693, 2459.146388978693, 2462.823043201852, 2459.146388978693, 2468.3387085177287, 2460.984670409398, 2459.146388978693, 2462.823043201852, 2468.3387085177287, 2466.500062379053, 2466.500062379053, 2470.177445526017, 2468.3387085177287, 2466.500062379053, 2466.500062379053, 2464.661507232779, 2462.823043201852, 2470.177445526017, 2466.500062379053, 2475.6942005430647, 2477.537796491045, 2486.7346453329324, 2492.253831417292, 2492.253831417292, 2495.933735447252, 2494.093738848641, 2492.253831417292, 2492.253831417292, 2499.613995664872, 2497.7738210927496, 2499.613995664872, 2501.45425904365, 2497.7738210927496, 2501.45425904365, 2499.613995664872, 2495.933735447252, 2503.294611109141, 2499.613995664872, 2503.294611109141, 2494.093738848641, 2503.294611109141, 2503.294611109141, 2495.933735447252, 2497.7738210927496, 2495.933735447252, 2473.85968790496, 2483.055635999627, 2483.055635999627, 2451.794179350402, 2394.8560941161995, 2367.3381286094227, 2396.6910984511387, 2437.0896913735355, 2440.764134601063, 2464.661507232779, 2483.055635999627, 2483.055635999627, 2479.376986231792, 2483.055635999627, 2475.6942005430647, 2475.6942005430647, 2481.216266108537, 2470.177445526017, 2472.01627328129, 2470.177445526017, 2462.823043201852, 2464.661507232779, 2468.3387085177287, 2460.984670409398, 2464.661507232779, 2459.146388978693, 2464.661507232779, 2466.500062379053, 2470.177445526017, 2468.3387085177287, 2472.01627328129, 2475.6942005430647, 2479.376986231792, 2483.055635999627, 2468.3387085177287, 2468.3387085177287, 2460.984670409398, 2460.984670409398, 2459.146388978693, 2455.470100702317, 2451.794179350402, 2457.308199039109, 2460.984670409398, 2459.146388978693, 2455.470100702317, 2457.308199039109, 2457.308199039109, 2453.6320940981004, 2453.6320940981004, 2446.2809874883333, 2444.443441409419, 2440.764134601063, 2442.6014953710555, 2446.2809874883333, 2453.6320940981004, 2466.500062379053, 2470.177445526017, 2473.85968790496, 2475.6942005430647, 2481.216266108537, 2481.216266108537, 2483.055635999627, 2483.055635999627, 2486.7346453329324, 2483.055635999627, 2486.7346453329324, 2497.7738210927496, 2497.7738210927496, 2488.5742845386626, 2494.093738848641, 2492.253831417292, 2488.5742845386626, 2488.5742845386626, 2488.5742845386626, 2481.216266108537, 2479.376986231792, 2483.055635999627, 2481.216266108537, 2475.6942005430647, 2481.216266108537, 2475.6942005430647, 2479.376986231792, 2479.376986231792, 2484.8950957775514, 2483.055635999627, 2484.8950957775514, 2473.85968790496, 2473.85968790496, 2472.01627328129, 2473.85968790496, 2460.984670409398, 2453.6320940981004, 2448.1186259211872, 2448.1186259211872, 2451.794179350402, 2449.956356583326, 2453.6320940981004, 2459.146388978693, 2457.308199039109, 2455.470100702317, 2460.984670409398, 2460.984670409398, 2451.794179350402, 2444.443441409419, 2444.443441409419, 2438.9268665601307, 2438.9268665601307, 2446.2809874883333, 2448.1186259211872, 2453.6320940981004, 2457.308199039109, 2462.823043201852, 2464.661507232779, 2462.823043201852, 2462.823043201852, 2466.500062379053, 2466.500062379053, 2460.984670409398, 2466.500062379053, 2460.984670409398, 2453.6320940981004, 2448.1186259211872, 2444.443441409419, 2440.764134601063, 2446.2809874883333, 2440.764134601063, 2448.1186259211872, 2446.2809874883333, 2451.794179350402, 2449.956356583326, 2442.6014953710555, 2446.2809874883333, 2438.9268665601307, 2440.764134601063, 2438.9268665601307, 2433.4156200652924, 2440.764134601063, 2437.0896913735355, 2444.443441409419, 2438.9268665601307, 2442.6014953710555, 2446.2809874883333, 2442.6014953710555, 2442.6014953710555, 2433.4156200652924, 2427.9052126578, 2427.9052126578, 2409.538803493353, 2420.559313898862, 2418.72307418292, 2426.06859723738, 2431.578724200965, 2437.0896913735355, 2442.6014953710555, 2449.956356583326, 2453.6320940981004, 2460.984670409398, 2457.308199039109, 2460.984670409398, 2451.794179350402, 2453.6320940981004, 2449.956356583326, 2455.470100702317, 2455.470100702317, 2455.470100702317, 2459.146388978693, 2462.823043201852, 2470.177445526017, 2473.85968790496, 2475.6942005430647, 2481.216266108537, 2483.055635999627, 2484.8950957775514, 2486.7346453329324, 2484.8950957775514, 2483.055635999627, 2484.8950957775514, 2488.5742845386626, 2484.8950957775514, 2484.8950957775514, 2483.055635999627, 2483.055635999627, 2484.8950957775514, 2495.933735447252, 2503.294611109141, 2508.820698618512, 2521.7074851586044, 2518.0251074820594, 2521.7074851586044, 2516.184050006173, 2518.0251074820594, 2518.0251074820594, 2523.548805122733, 2521.7074851586044, 2525.3902123466305, 2519.86625257232, 2516.184050006173, 2523.548805122733, 2518.0251074820594, 2523.548805122733, 2534.5985532372947, 2532.7567114853146, 2532.7567114853146, 2540.129101392556, 2540.129101392556, 2538.282496300591, 2536.440481549997, 2532.7567114853146, 2530.914956399347, 2525.3902123466305, 2527.231706712511, 2529.073288102606, 2532.7567114853146, 2536.440481549997, 2541.971288879282, 2541.971288879282, 2540.129101392556, 2540.129101392556, 2536.440481549997, 2540.129101392556, 2529.073288102606, 2536.440481549997, 2536.440481549997, 2534.5985532372947, 2536.440481549997, 2540.129101392556, 2538.282496300591, 2541.971288879282, 2541.971288879282, 2543.8135624536435, 2549.3408985397523, 2549.3408985397523, 2545.655921999285, 2547.49836740001, 2543.8135624536435, 2538.282496300591, 2541.971288879282, 2540.129101392556, 2545.655921999285, 2541.971288879282, 2540.129101392556, 2541.971288879282, 2543.8135624536435, 2549.3408985397523, 2553.0262175727985, 2558.554836272387, 2562.241007487469, 2564.084220379335, 2569.614366804361, 2578.837471539058, 2580.6814428348985, 2584.3696363388003, 2588.058163631998, 2582.5254978058965, 2584.3696363388003, 2586.213858314539, 2591.747023823289, 2576.9935840317708, 2586.213858314539, 2597.280936313185, 2597.280936313185, 2597.280936313185, 2600.970624798855, 2597.280936313185, 2600.970624798855, 2600.970624798855, 2599.125739281486, 2610.200798536105, 2602.81559275357, 2602.81559275357, 2597.280936313185, 2600.970624798855, 2606.5102869553807, 2608.3555017531016, 2608.3555017531016, 2610.200798536105, 2610.200798536105, 2612.0461772049853, 2610.200798536105, 2604.660643033905, 2606.5102869553807, 2602.81559275357, 2615.7371797391893, 2612.0461772049853, 2615.7371797391893, 2613.891637642956, 2608.3555017531016, 2599.125739281486, 2599.125739281486, 2600.970624798855, 2593.591578471913, 2595.4362160059604, 2595.4362160059604, 2593.591578471913, 2586.213858314539, 2575.1497804265773, 2578.837471539058, 2599.125739281486, 2599.125739281486, 2606.5102869553807, 2606.5102869553807, 2606.5102869553807, 2602.81559275357, 2604.660643033905, 2591.747023823289, 2584.3696363388003, 2584.3696363388003, 2571.462425377415, 2565.9275179724586, 2562.241007487469, 2562.241007487469, 2554.8690052347897, 2556.7118781730883, 2554.8690052347897, 2560.397879411573, 2553.0262175727985, 2553.0262175727985, 2553.0262175727985, 2554.8690052347897, 2551.18351530257, 2543.8135624536435, 2532.7567114853146, 2540.129101392556, 2529.073288102606, 2530.914956399347, 2529.073288102606, 2521.7074851586044, 2518.0251074820594, 2518.0251074820594, 2525.3902123466305, 2527.231706712511, 2534.5985532372947, 2541.971288879282, 2547.49836740001, 2554.8690052347897, 2556.7118781730883, 2567.770900152274, 2576.9935840317708, 2584.3696363388003, 2588.058163631998, 2595.4362160059604, 2597.280936313185, 2600.970624798855, 2600.970624798855, 2599.125739281486, 2599.125739281486, 2599.125739281486, 2591.747023823289, 2595.4362160059604, 2593.591578471913, 2593.591578471913, 2595.4362160059604, 2597.280936313185, 2602.81559275357, 2600.970624798855, 2604.660643033905, 2606.5102869553807, 2602.81559275357, 2600.970624798855, 2599.125739281486, 2597.280936313185, 2602.81559275357, 2602.81559275357, 2602.81559275357, 2610.200798536105, 2613.891637642956, 2610.200798536105, 2610.200798536105, 2610.200798536105, 2613.891637642956, 2610.200798536105, 2608.3555017531016, 2608.3555017531016, 2610.200798536105, 2612.0461772049853, 2613.891637642956, 2608.3555017531016, 2613.891637642956, 2613.891637642956, 2617.5828033829957, 2617.5828033829957, 2617.5828033829957, 2626.8121409512273, 2636.0480152843993, 2639.7411227095363, 2643.434550618705, 2643.434550618705, 2643.434550618705, 2650.822364413317, 2648.975291488583, 2645.2813844829984, 2643.434550618705, 2645.2813844829984, 2639.7411227095363, 2634.1970676232754, 2650.822364413317, 2647.128298142407, 2648.975291488583, 2647.128298142407, 2648.975291488583, 2647.128298142407, 2647.128298142407, 2647.128298142407, 2650.822364413317, 2661.906467062567, 2669.2974467646445, 2667.449583976479, 2665.601799692142, 2672.997925906521, 2671.1499062394946, 2672.997925906521, 2669.2974467646445, 2665.601799692142, 2663.754094018503, 2661.906467062567, 2661.906467062567, 2656.3640595787074, 2656.3640595787074, 2661.906467062567, 2654.516748566229, 2648.975291488583, 2650.822364413317, 2652.66951680848, 2665.601799692142, 2669.2974467646445, 2667.449583976479, 2676.6941996854284, 2676.6941996854284, 2682.239194872962, 2684.0876820499802, 2682.239194872962, 2674.846023757297, 2680.3907853492983, 2674.846023757297, 2680.3907853492983, 2674.846023757297, 2685.9362467746687, 2684.0876820499802, 2684.0876820499802, 2682.239194872962, 2676.6941996854284, 2669.2974467646445, 2669.2974467646445, 2665.601799692142, 2660.058918937304, 2669.2974467646445, 2676.6941996854284, 2676.6941996854284, 2680.3907853492983, 2674.846023757297, 2682.239194872962, 2680.3907853492983, 2671.1499062394946, 2676.6941996854284, 2685.9362467746687, 2687.7848889355546, 2684.0876820499802, 2689.633608438964, 2685.9362467746687, 2689.633608438964, 2685.9362467746687, 2689.633608438964, 2684.0876820499802, 2687.7848889355546, 2687.7848889355546, 2685.9362467746687, 2693.3312790347914, 2693.3312790347914, 2698.878362325518, 2698.878362325518, 2704.430657672401, 2704.430657672401, 2704.430657672401, 2706.2800686698924, 2709.979119428753, 2708.1295559566784, 2709.979119428753, 2708.1295559566784, 2711.828758976392, 2708.1295559566784, 2702.5813230683384, 2700.732064962017, 2702.5813230683384, 2709.979119428753, 2706.2800686698924, 2704.430657672401, 2711.828758976392, 2708.1295559566784, 2706.2800686698924, 2717.378133088164, 2713.678474507456, 2708.1295559566784, 2706.2800686698924, 2708.1295559566784, 2695.180229917009, 2697.02925771551, 2706.2800686698924, 2702.5813230683384, 2708.1295559566784, 2704.430657672401, 2708.1295559566784, 2704.430657672401, 2700.732064962017, 2702.5813230683384, 2700.732064962017, 2700.732064962017, 2695.180229917009, 2695.180229917009, 2697.02925771551, 2698.878362325518, 2704.430657672401, 2708.1295559566784, 2704.430657672401, 2708.1295559566784, 2717.378133088164, 2708.1295559566784, 2709.979119428753, 2711.828758976392, 2702.5813230683384, 2700.732064962017, 2700.732064962017, 2695.180229917009, 2697.02925771551, 2708.1295559566784, 2708.1295559566784, 2708.1295559566784, 2719.22807593094, 2719.22807593094, 2722.9281882051027, 2726.628601910229, 2724.778357430373, 2717.378133088164, 2709.979119428753, 2711.828758976392, 2706.2800686698924, 2708.1295559566784, 2708.1295559566784, 2708.1295559566784, 2717.378133088164, 2719.22807593094, 2728.478921542905, 2726.628601910229, 2726.628601910229, 2728.478921542905, 2713.678474507456, 2704.430657672401, 2689.633608438964, 2678.542453584805, 2667.449583976479, 2669.2974467646445, 2667.449583976479, 2672.997925906521, 2682.239194872962, 2687.7848889355546, 2687.7848889355546, 2689.633608438964, 2691.482405173764, 2691.482405173764, 2697.02925771551, 2700.732064962017, 2698.878362325518, 2695.180229917009, 2689.633608438964, 2687.7848889355546, 2684.0876820499802, 2685.9362467746687, 2687.7848889355546, 2685.9362467746687, 2691.482405173764, 2697.02925771551, 2697.02925771551, 2698.878362325518, 2698.878362325518, 2697.02925771551, 2700.732064962017, 2704.430657672401, 2711.828758976392, 2721.078094337626, 2722.9281882051027, 2728.478921542905, 2724.778357430373, 2728.478921542905, 2730.3338405091176, 2724.778357430373, 2724.778357430373, 2728.478921542905, 2724.778357430373, 2724.778357430373, 2724.778357430373, 2728.478921542905, 2728.478921542905, 2724.778357430373, 2715.528265912546, 2728.478921542905, 2724.778357430373, 2721.078094337626, 2717.378133088164, 2711.828758976392, 2706.2800686698924, 2702.5813230683384, 2693.3312790347914, 2684.0876820499802, 2669.2974467646445, 2654.516748566229, 2645.2813844829984, 2647.128298142407, 2643.434550618705, 2639.7411227095363, 2634.1970676232754, 2628.658251563808, 2613.891637642956, 2593.591578471913, 2580.6814428348985, 2565.9275179724586, 2547.49836740001, 2536.440481549997, 2543.8135624536435, 2540.129101392556, 2538.282496300591, 2532.7567114853146, 2514.343080263149, 2466.500062379053, 2411.379059028782, 2347.1710684432333, 2288.580827561033, 2231.918210271395, 2202.713551443185, 2179.004750223407, 2177.1821228303615, 2175.3596081248675, 2177.1821228303615, 2184.4733069898684, 2199.0655046850056, 2200.88947270805, 2228.2666584254102, 2253.841035432302, 2273.946337099339, 2286.7517104863564, 2301.387543799691, 2303.217486831093, 2301.387543799691, 2314.1992951307325, 2323.3580795521248, 2332.5149157114183, 2334.346584750945, 2341.674262408164, 2338.010223550337, 2338.010223550337, 2327.020511667485, 2332.5149157114183, 2319.696051844649, 2306.877680601392, 2305.0475324799177, 2294.0688006294918, 2295.898331800135, 2292.239372772796, 2295.898331800135, 2295.898331800135, 2301.387543799691, 2303.217486831093, 2305.0475324799177, 2314.1992951307325, 2328.85187903676, 2338.010223550337, 2347.1710684432333, 2371.0053297910536, 2391.186373313655, 2420.559313898862, 2444.443441409419, 2462.823043201852, 2470.177445526017, 2481.216266108537, 2481.216266108537, 2472.01627328129, 2459.146388978693, 2440.764134601063, 2435.2526091667155, 2444.443441409419, 2431.578724200965, 2422.395647731215, 2416.8869287105367, 2415.050877609028, 2433.4156200652924, 2442.6014953710555, 2455.470100702317, 2470.177445526017, 2479.376986231792, 2490.414013273732, 2505.1350517416017, 2516.184050006173, 2521.7074851586044, 2529.073288102606, 2534.5985532372947, 2543.8135624536435, 2545.655921999285, 2560.397879411573, 2571.462425377415, 2569.614366804361, 2578.837471539058, 2573.3060608372093, 2571.462425377415, 2578.837471539058, 2588.058163631998, 2591.747023823289, 2595.4362160059604, 2599.125739281486, 2602.81559275357, 2608.3555017531016, 2615.7371797391893, 2626.8121409512273, 2632.350715009345, 2641.587796658012, 2643.434550618705, 2643.434550618705, 2647.128298142407, 2656.3640595787074, 2654.516748566229, 2661.906467062567, 2661.906467062567, 2671.1499062394946, 2671.1499062394946, 2674.846023757297, 2669.2974467646445, 2669.2974467646445, 2661.906467062567, 2665.601799692142, 2663.754094018503, 2658.211449738248, 2665.601799692142, 2663.754094018503, 2660.058918937304, 2658.211449738248, 2654.516748566229, 2656.3640595787074, 2656.3640595787074, 2661.906467062567, 2658.211449738248, 2660.058918937304, 2663.754094018503, 2669.2974467646445, 2667.449583976479, 2672.997925906521, 2672.997925906521, 2671.1499062394946, 2672.997925906521, 2671.1499062394946, 2665.601799692142, 2669.2974467646445, 2672.997925906521, 2671.1499062394946, 2671.1499062394946, 2672.997925906521, 2676.6941996854284, 2684.0876820499802, 2680.3907853492983, 2678.542453584805, 2676.6941996854284, 2674.846023757297, 2667.449583976479, 2667.449583976479, 2669.2974467646445, 2667.449583976479, 2667.449583976479, 2672.997925906521, 2671.1499062394946, 2671.1499062394946, 2674.846023757297, 2669.2974467646445, 2665.601799692142, 2665.601799692142, 2658.211449738248, 2656.3640595787074, 2656.3640595787074, 2647.128298142407, 2636.0480152843993, 2621.27429487127, 2610.200798536105, 2602.81559275357, 2591.747023823289, 2602.81559275357, 2608.3555017531016, 2623.1201624950572, 2628.658251563808, 2634.1970676232754, 2626.8121409512273, 2632.350715009345, 2630.5044429530444, 2634.1970676232754, 2634.1970676232754, 2637.8945288820346, 2647.128298142407, 2658.211449738248, 2658.211449738248, 2660.058918937304, 2656.3640595787074, 2661.906467062567, 2661.906467062567, 2660.058918937304, 2665.601799692142, 2665.601799692142, 2672.997925906521, 2685.9362467746687, 2682.239194872962, 2687.7848889355546, 2693.3312790347914, 2697.02925771551, 2702.5813230683384, 2702.5813230683384, 2700.732064962017, 2706.2800686698924, 2704.430657672401, 2700.732064962017, 2695.180229917009, 2700.732064962017, 2708.1295559566784, 2717.378133088164, 2711.828758976392, 2719.22807593094, 2728.478921542905, 2732.1797858538725, 2732.1797858538725, 2724.778357430373, 2709.979119428753, 2695.180229917009, 2680.3907853492983, 2663.754094018503, 2656.3640595787074, 2656.3640595787074, 2658.211449738248, 2656.3640595787074, 2660.058918937304, 2671.1499062394946, 2678.542453584805, 2687.7848889355546, 2700.732064962017, 2706.2800686698924, 2715.528265912546, 2728.478921542905]]"
                }
                [
                    position = 7824, 8128
                    size = 48, 48
                ]

                port Pm {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 8064
                    rotation = down
                    scale = -1, 1
                ]

                port Pref_ed {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8504, 8000
                ]

                port Pref_reg {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8520, 8072
                ]

                junction Junction1 sp
                [
                    position = 7840, 8064
                ]

                connect "ModBus Device3 (config3).coil_in" C_u11.out as Connection139
                connect C_u12.out "ModBus Device3 (config3).discrete_in" as Connection121
                [
                    breakpoints = 8000, 7968; 8080, 7968
                ]
                connect Termination1.in "ModBus Device3 (config3).coil_out" as Connection127
                connect C_u13.out "ModBus Device3 (config3).holding_in" as Connection120
                [
                    breakpoints = 7952, 8016; 8080, 8016
                ]
                connect Pm Junction1 as Connection182
                connect Junction1 "Rate Transition1.in" as Connection183
                connect P_probe.in Junction1 as Connection184
                connect "Rate Transition1.out" "Bus Join1.in" as Connection226
                connect "Bus Join1.out" "ModBus Device3 (config3).reg_in" as Connection227
                connect "Bus Split1.out" Pref_ed as Connection218
                connect "Bus Split1.in" "ModBus Device3 (config3).holding_out" as Connection231
                connect Pref_reg "Bus Split1.out1" as Connection232
                connect "Dynamic Table.P3max" "Bus Join1.in1" as Connection233
            }
            [
                position = 8256, 8456
                rotation = down
                scale = 1, -1
                size = 120, 112
            ]

            component gen_probe Pref_ed {
            }
            [
                position = 8096, 8424
                scale = -1, 1
            ]

            component gen_probe Pref_reg {
            }
            [
                position = 8096, 8488
                scale = -1, 1
            ]

            component Subsystem "Core coupling" {
                layout = dynamic
                component "core/Single Phase Core Coupling" "Core Coupling 1" {
                }
                [
                    position = 8184, 8168
                    size = 12, 256
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8264
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8264
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8088, 8072
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8072
                    rotation = down
                ]

                connect A "Core Coupling 1.a_in" as Connection1
                connect B "Core Coupling 1.b_in" as Connection2
                connect "Core Coupling 1.a_out" a as Connection3
                connect b "Core Coupling 1.b_out" as Connection4
            }
            [
                position = 8624, 8152
                size = 48, 80
            ]

            component src_voltage Vs1 {
                init_const_value = "500"
            }
            [
                position = 8272, 8152
                rotation = right
            ]

            component Subsystem Inverter {
                layout = dynamic
                component gen_probe V {
                }
                [
                    position = 7864, 8064
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                    }
                    [
                        position = 7064, 8360
                        scale = -1, 1
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8040
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[1]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7960
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 7920, 8600
                                scale = -1, 1
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "10"
                            }
                            [
                                position = 7840, 8600
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc1 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8128, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc2 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8136, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Iq_meas {
                                label = "Iq_meas"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Iq_ref {
                                label = "Iq_ref"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Id_ref {
                                label = "Id_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8032
                                rotation = down
                            ]

                            port Id_meas {
                                label = "Id_meas"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8128
                                rotation = down
                            ]

                            tag From23 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Vd"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Vq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8016, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8128
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8040
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Iq_meas Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Id_ref as Connection297
                            connect Sum9.in Iq_ref as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Id_meas Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8040; 8240, 8040
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                            connect From27 LPF_dc.in as Connection356
                            connect LPF_dc.out Limit3.in as Connection357
                            connect Limit3.out Gain5.in as Connection358
                            connect LPF_dc1.in From26 as Connection359
                            connect LPF_dc1.out Sum6.in as Connection360
                            connect LPF_dc2.in From24 as Connection361
                            connect Sum5.in LPF_dc2.out as Connection362
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Id_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Iq_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7976, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component gen_d_q2alpha_beta "dq to alpha beta" {
                        }
                        [
                            position = 7912, 8584
                            scale = -1, 1
                        ]

                        component gen_probe ud {
                        }
                        [
                            position = 8152, 8448
                        ]

                        component gen_probe uq {
                        }
                        [
                            position = 8144, 8744
                        ]

                        component Subsystem "outer power loop1" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8144
                                rotation = down
                            ]

                            port Id_r {
                                label = "Id_r"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8168
                                rotation = down
                            ]

                            port Iq_r {
                                label = "Iq_r"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8080
                                rotation = down
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect Ed Junction142 as Connection390
                            [
                                breakpoints = 8720, 8072
                            ]
                            connect P_ref Junction139 as Connection391
                            [
                                breakpoints = 8752, 8144; 8600, 8144
                            ]
                            connect Id_r Product2.out as Connection392
                            connect Iq_r Product1.out as Connection393
                        }
                        [
                            position = 8496, 8568
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8656, 8632
                            size = 48, 56
                        ]

                        component gen_probe Edq_sq {
                        }
                        [
                            position = 8656, 8712
                        ]

                        port ma {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port mb {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From29 {
                            value = "Id"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8736
                            hide_name = True
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Iq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8616
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From20 {
                            value = "Vd"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8568
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Vq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8600
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8512
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8544
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        junction Junction23 sp
                        [
                            position = 8352, 8664
                        ]

                        junction Junction17 sp
                        [
                            position = 8032, 8560
                        ]

                        junction Junction18 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction19 sp
                        [
                            position = 8112, 8520
                        ]

                        junction Junction20 sp
                        [
                            position = 8112, 8656
                        ]

                        junction Junction13 sp
                        [
                            position = 8728, 8568
                        ]

                        junction Junction14 sp
                        [
                            position = 8752, 8600
                        ]

                        junction Junction21 sp
                        [
                            position = 8608, 8632
                        ]

                        junction Junction22 sp
                        [
                            position = 8296, 8520
                        ]

                        connect From29 "inner current control loop.Id_meas" as Connection253
                        connect From30 "inner current control loop.Iq_meas" as Connection257
                        connect "inner current control loop.Iq_ref" Junction23 as Connection505
                        [
                            breakpoints = 8240, 8664
                        ]
                        connect Junction23 Iq_ref.in as Connection506
                        [
                            breakpoints = 8352, 8664; 8352, 8664; 8352, 8664
                        ]
                        connect "outer power loop1.Iq_r" Junction23 as Connection507
                        connect Ud.in Junction17 as Connection449
                        connect Junction17 Gain5.out as Connection450
                        connect "dq to alpha beta.d" Junction17 as Connection451
                        connect Uq.in Junction18 as Connection452
                        connect Junction18 Gain6.out as Connection453
                        [
                            breakpoints = 8032, 8624
                        ]
                        connect "dq to alpha beta.q" Junction18 as Connection454
                        connect From1 "dq to alpha beta.wt" as Connection455
                        connect ma "dq to alpha beta.alpha" as Connection456
                        connect mb "dq to alpha beta.beta" as Connection457
                        connect Gain5.in Junction19 as Connection458
                        connect Junction19 "inner current control loop.Ud1" as Connection459
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect ud.in Junction19 as Connection460
                        connect Gain6.in Junction20 as Connection461
                        connect Junction20 "inner current control loop.Uq1" as Connection462
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect uq.in Junction20 as Connection463
                        connect From42 "outer power loop1.P_ref" as Connection431
                        connect From43 "outer power loop1.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop1.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop1.Eq" as Connection437
                        [
                            breakpoints = 8752, 8600; 8696, 8600
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                        connect squared_Vt2.Et_p2 Junction21 as Connection464
                        connect Junction21 "outer power loop1.Et_p2" as Connection465
                        connect Edq_sq.in Junction21 as Connection466
                        connect Id_ref.in Junction22 as Connection499
                        [
                            breakpoints = 8296, 8416; 8296, 8504
                        ]
                        connect Junction22 "inner current control loop.Id_ref" as Connection500
                        [
                            breakpoints = 8296, 8520; 8296, 8520; 8288, 8520; 8296, 8520
                        ]
                        connect "outer power loop1.Id_r" Junction22 as Connection501
                    }
                    [
                        position = 7224, 8360
                        size = 128, 152
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 6880, 8512
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_split "Bus Split1" {
                    }
                    [
                        position = 6944, 8360
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain20 {
                        gain = "-1"
                    }
                    [
                        position = 6832, 8408
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_z_domain_transfer "Hilbert Transform" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7000, 8896
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts"
                        input_terminals = "real in;inherit pi;inherit Ts;"
                        input_terminals_dimensions = "inherit;inherit;inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7384, 8688
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 7608, 8736
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 7488, 8720
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe Vd {
                    }
                    [
                        position = 7656, 8856
                    ]

                    component gen_probe Vq {
                    }
                    [
                        position = 7648, 9040
                    ]

                    component gen_z_domain_transfer "Hilbert Transform1" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 6992, 9016
                    ]

                    component gen_probe Id {
                    }
                    [
                        position = 8168, 8856
                    ]

                    component gen_probe Iq {
                    }
                    [
                        position = 8168, 9056
                    ]

                    component gen_gain Gain28 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7528, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain29 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7520, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain30 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain31 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq1" {
                    }
                    [
                        position = 7408, 8944
                        hide_name = True
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq2" {
                    }
                    [
                        position = 7912, 8936
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8056, 8640
                        hide_name = True
                    ]

                    component gen_gain Gain22 {
                        gain = "1000/S"
                    }
                    [
                        position = 7968, 8432
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        input_terminals = "real ref;int charge;"
                        input_terminals_dimensions = "1;1"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'ref\', True), (\'charge\', True)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = -1;
else out = ref;
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7880, 8432
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8464
                        hide_name = True
                        size = 32, 32
                    ]

                    component src_scada_input charge {
                        execution_rate = "Ts"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 7720, 8464
                    ]

                    component "core/Rate Transition" "Rate Transition9" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8400
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_probe Pref {
                    }
                    [
                        position = 7864, 8296
                    ]

                    component gen_gain Gain23 {
                        gain = "1000"
                    }
                    [
                        position = 7768, 8296
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        execution_rate = "1"
                        global_variables = "int k;real t;"
                        init_fnc = "/*Begin code section*/
k = 0; t = 1;
/*End code section*/"
                        input_terminals = ""
                        input_terminals_dimensions = ""
                        input_terminals_feedthrough = ""
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
Pref = 0.2;

if (k>12) k = 0;
if (t>3) t = 0;
if (k==0) {Pref = 0.7;}
else if (k==1) {Pref = 0.8;}
else if (k==2) {Pref = 0.6;}
else if (k==3) {Pref = 0.5;}
else if (k==4) {Pref = 0.2;}
else if (k==5) {Pref = 0.8;}
else if (k==6) {Pref = 0.7;}
else if(k==7) {Pref = 0.5;}
else if(k==8) {Pref = 0.66;}
else if(k==9) {Pref =0.75;}
else if(k==10) {Pref =0.54;}
else if(k==11) {Pref =0.30;}
else if(k==12) {Pref =0.45;}

if (t>=3) k+=1;
t+=1;
/*End code section*/"
                        output_terminals = "real Pref;"
                        output_terminals_dimensions = "1"
                        output_terminals_feedthrough = "False"
                        output_terminals_show_labels = "True"
                    }
                    [
                        position = 7608, 8400
                        size = 72, 88
                    ]

                    component gen_gain Gain32 {
                        gain = "1/S"
                    }
                    [
                        position = 7760, 8560
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "2*np.pi*60"
                    }
                    [
                        position = 6984, 8680
                        hide_name = True
                    ]

                    port En {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6768, 8512
                        scale = -1, 1
                    ]

                    port ma {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6800, 8336
                        scale = -1, 1
                    ]

                    port mb {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6760, 8408
                        scale = -1, 1
                    ]

                    port PREF {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7688, 8560
                    ]

                    tag Goto60 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8848
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From54 {
                        value = "V"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6832, 8848
                        hide_name = True
                    ]

                    tag Goto61 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8896
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From55 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8920
                        hide_name = True
                    ]

                    tag From56 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8952
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7264, 8688
                        scale = -1, 1
                    ]

                    tag From57 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8992
                        hide_name = True
                    ]

                    tag Goto64 {
                        value = "Vd"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7632, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto65 {
                        value = "Vq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7624, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto66 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 8968
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From60 {
                        value = "I"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6824, 8968
                        hide_name = True
                    ]

                    tag Goto67 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 9016
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From61 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8904
                        hide_name = True
                    ]

                    tag From62 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8936
                        hide_name = True
                    ]

                    tag Goto68 {
                        value = "Id"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto69 {
                        value = "Iq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto57 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7136, 8680
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From65 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8672
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag From66 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8968
                        hide_name = True
                    ]

                    tag Goto55 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7848, 8560
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto56 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8192, 8640
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction276 sp
                    [
                        position = 6904, 8352
                    ]

                    junction Junction386 sp
                    [
                        position = 6912, 8848
                    ]

                    junction Junction392 sp
                    [
                        position = 6904, 8968
                    ]

                    junction Junction398 sp
                    [
                        position = 7568, 8920
                    ]

                    junction Junction399 sp
                    [
                        position = 7560, 8984
                    ]

                    junction Junction400 sp
                    [
                        position = 8064, 8920
                    ]

                    junction Junction401 sp
                    [
                        position = 8072, 8984
                    ]

                    junction Junction403 sp
                    [
                        position = 7696, 8400
                    ]

                    connect En Constant2.out as Connection1061
                    connect ma Junction276 as Connection1064
                    connect Junction276 "Bus Split1.out" as Connection1065
                    connect Gain20.in Junction276 as Connection1066
                    connect Gain20.out mb as Connection1067
                    connect "Bus Split1.in" "Bus Join1.out" as Connection4453
                    connect From54 Junction386 as Connection4478
                    connect Junction386 Goto60 as Connection4479
                    connect "Hilbert Transform.in" Junction386 as Connection4480
                    connect "Hilbert Transform.out" Goto61 as Connection4481
                    connect "C function4.out" Goto21 as Connection1023
                    connect Constant3.out "C function4.pi" as Connection1024
                    [
                        breakpoints = 7520, 8736; 7520, 8688
                    ]
                    connect Constant4.out "C function4.Ts" as Connection1025
                    connect From60 Junction392 as Connection4503
                    connect Junction392 Goto66 as Connection4504
                    connect "Hilbert Transform1.in" Junction392 as Connection4505
                    connect "Hilbert Transform1.out" Goto67 as Connection4506
                    connect Gain28.out Junction398 as Connection4539
                    connect Junction398 Goto64 as Connection4540
                    connect Vd.in Junction398 as Connection4541
                    connect Gain29.out Junction399 as Connection4543
                    connect Junction399 Goto65 as Connection4544
                    connect Vq.in Junction399 as Connection4545
                    connect Gain30.out Junction400 as Connection4548
                    connect Junction400 Goto68 as Connection4549
                    connect Id.in Junction400 as Connection4550
                    connect Gain31.out Junction401 as Connection4551
                    connect Junction401 Goto69 as Connection4552
                    connect Iq.in Junction401 as Connection4553
                    connect "Bus Join1.in" "Outer Voltage Loop + Inner Current Loop.ma" as Connection4554
                    [
                        breakpoints = 7104, 8304
                    ]
                    connect "Outer Voltage Loop + Inner Current Loop.mb" "Bus Join1.in1" as Connection4555
                    [
                        breakpoints = 7120, 8368
                    ]
                    connect From55 "alpha beta to dq1.alpha" as Connection4561
                    connect From56 "alpha beta to dq1.beta" as Connection4562
                    connect From57 "alpha beta to dq1.wt" as Connection4563
                    connect "alpha beta to dq1.d" Gain28.in as Connection4564
                    connect "alpha beta to dq1.q" Gain29.in as Connection4565
                    connect "alpha beta to dq2.d" Gain30.in as Connection4566
                    connect "alpha beta to dq2.q" Gain31.in as Connection4567
                    connect From61 "alpha beta to dq2.alpha" as Connection4568
                    connect From62 "alpha beta to dq2.beta" as Connection4569
                    connect From66 "alpha beta to dq2.wt" as Connection4570
                    connect From65 "C function4.in" as Connection4575
                    connect Constant5.out Goto56 as Connection4577
                    connect charge.out "Rate Transition8.in" as Connection4421
                    connect "Rate Transition9.out" "C function1.ref" as Connection4425
                    connect Pref.in Gain23.out as Connection4436
                    connect "Rate Transition8.out" "C function1.charge" as Connection4580
                    [
                        breakpoints = 7840, 8464
                    ]
                    connect PREF Gain32.in as Connection4585
                    connect "Rate Transition9.in" Junction403 as Connection4581
                    connect Gain32.out Goto55 as Connection4586
                    connect Junction403 Gain23.in as Connection4582
                    [
                        breakpoints = 7696, 8400
                    ]
                    connect "C function3.Pref" Junction403 as Connection4583
                    connect Constant6.out Goto57 as Connection4587
                    connect Gain22.in "C function1.out" as Connection4584
                    [
                        breakpoints = 7928, 8432
                    ]
                }
                [
                    position = 7408, 7760
                    size = 88, 96
                ]

                component pas_inductor La {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7848
                    rotation = down
                ]

                component pas_inductor Loa {
                    inductance = "L_o"
                }
                [
                    position = 8392, 7848
                    rotation = down
                ]

                component "core/Voltage Measurement" E {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8024, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" I {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7848
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Cs {
                    capacitance = "C_s"
                }
                [
                    position = 8104, 8096
                    rotation = right
                ]

                component gen_probe S {
                }
                [
                    position = 8144, 7656
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Q {
                }
                [
                    position = 8144, 7592
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 8144, 7720
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe P {
                }
                [
                    position = 8144, 7528
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem Power_Meas {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8232
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "S"
                    }
                    [
                        position = 7952, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component Subsystem Power_Meas_DQpu {
                        layout = dynamic
                        component gen_c_function S_and_pf {
                            init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                            input_terminals = "real P;inherit Q;"
                            input_terminals_dimensions = "inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = "False;False;"
                            output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                            output_terminals = "inherit S;inherit pf;"
                            output_terminals_dimensions = "inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = "False;False;"
                        }
                        [
                            position = 8392, 8192
                            size = 48, 48
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 8024, 8232
                            hide_name = True
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 8024, 8320
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_Q {
                            a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8272
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8024, 8064
                            hide_name = True
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8128, 8112
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_P {
                            a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8024, 8152
                            hide_name = True
                        ]

                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8128, 8272
                            hide_name = True
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8056
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8144
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8240
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8328
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8112
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8272
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8144
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8240
                        ]

                        junction Junction1 sp
                        [
                            position = 7920, 8240
                        ]

                        junction Junction2 sp
                        [
                            position = 7928, 8328
                        ]

                        junction Junction3 sp
                        [
                            position = 7944, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 7960, 8056
                        ]

                        junction Junction5 sp
                        [
                            position = 8264, 8112
                        ]

                        junction Junction6 sp
                        [
                            position = 8264, 8272
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                        [
                            position = 8000, 7976
                        ]

                        connect Junction1 Id as Connection49
                        connect Junction1 Product4.in1 as Connection24
                        connect Junction2 Iq as Connection52
                        connect Junction2 Product3.in1 as Connection27
                        connect Junction3 Product2.in as Connection32
                        connect Junction3 Vq as Connection53
                        connect Junction4 Product1.in as Connection35
                        connect Junction4 Vd as Connection50
                        connect Junction5 LPF_P.out as Connection44
                        connect Junction5 P as Connection55
                        connect Junction6 LPF_Q.out as Connection47
                        connect Junction6 Q as Connection56
                        connect LPF_P.in Sum1.out as Connection39
                        connect LPF_Q.in Sum2.out as Connection40
                        connect Product1.in1 Junction1 as Connection25
                        connect Product2.in1 Junction2 as Connection28
                        connect Product3.in Junction4 as Connection36
                        connect Product4.in Junction3 as Connection33
                        connect S_and_pf.P Junction5 as Connection45
                        connect S_and_pf.Q Junction6 as Connection48
                        connect S_and_pf.S S as Connection51
                        connect S_and_pf.pf pf as Connection54
                        connect Sum1.in Product1.out as Connection29
                        connect Sum1.in1 Product2.out as Connection30
                        connect Sum2.in1 Product3.out as Connection38
                        connect Sum2.in Product4.out as Connection37

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                            fc_P {
                                label = "Active power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            fc_Q {
                                label = "Reactive power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                            
                            ENDCODE
                        }
                    }
                    [
                        position = 7864, 8160
                        size = 72, 128
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8048
                        rotation = right
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8048
                        rotation = right
                    ]

                    port Id {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8248
                        rotation = left
                    ]

                    port Iq {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8248
                        rotation = left
                    ]

                    port P {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8000
                        rotation = left
                    ]

                    port Q {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8000
                        rotation = left
                    ]

                    port S {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                        rotation = right
                    ]

                    port pf {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7992, 8288
                        rotation = right
                    ]

                    connect Gain4.out P as Connection10
                    connect Gain5.in Power_Meas_DQpu.Q as Connection21
                    connect Gain5.out Q as Connection11
                    connect Gain6.in Power_Meas_DQpu.S as Connection16
                    connect Gain6.out S as Connection13
                    connect Id Power_Meas_DQpu.Id as Connection14
                    connect Iq Power_Meas_DQpu.Iq as Connection17
                    connect Vd Power_Meas_DQpu.Vd as Connection15
                    connect Vq Power_Meas_DQpu.Vq as Connection18
                    connect pf Power_Meas_DQpu.pf as Connection19
                    connect Gain4.in Power_Meas_DQpu.P as Connection25
                    [
                        breakpoints = 7920, 8128
                    ]
                }
                [
                    position = 7952, 7624
                    size = 96, 232
                ]

                component "core/Single Phase Inverter" "Single Phase Inverter1" {
                    ctrl_src = "Internal modulator"
                    fvd_def_method = "LUT"
                    ref_sig_min_max = "[-1, 1]"
                }
                [
                    position = 7544, 8000
                    size = 127, 256
                ]

                component pas_resistor Ra {
                    resistance = "R_i"
                }
                [
                    position = 7728, 7848
                    rotation = down
                ]

                component pas_resistor Rs {
                    resistance = "R_s"
                }
                [
                    position = 8104, 8000
                    rotation = right
                    scale = -1, 1
                ]

                component pas_resistor Roa {
                    resistance = "R_o"
                }
                [
                    position = 8280, 7848
                    rotation = down
                ]

                component "core/Voltage RMS" Vrms {
                    frequency = "60"
                    op_mode = "Fixed frequency"
                }
                [
                    position = 8192, 8008
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VDC {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7344, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_z_domain_transfer LPF_dc {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 7248, 8000
                    scale = -1, 1
                ]

                component pas_inductor Lb {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8136
                    rotation = down
                ]

                component pas_resistor Rb {
                    resistance = "R_i"
                }
                [
                    position = 7728, 8136
                    rotation = down
                ]

                component pas_inductor Lob {
                    inductance = "L_o"
                }
                [
                    position = 8400, 8136
                    rotation = down
                ]

                component pas_resistor Rob {
                    resistance = "R_o"
                }
                [
                    position = 8288, 8136
                    rotation = down
                ]

                component pas_capacitor C {
                    capacitance = "2000e-6"
                }
                [
                    position = 7416, 8000
                    rotation = right
                ]

                component gen_probe Pref_probe {
                }
                [
                    position = 7368, 7624
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7912, 8000
                    scale = -1, 1
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7904, 7936
                    scale = -1, 1
                    size = 88, 48
                ]

                port B {
                    label = "B"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8624, 8136
                    scale = -1, 1
                ]

                port A {
                    label = "A"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8624, 7848
                    scale = -1, 1
                ]

                port + {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7904
                ]

                port - {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8096
                ]

                port Pref {
                    position = top:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7264, 7760
                ]

                tag Goto35 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7936
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto41 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto49 {
                    value = "Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7568
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto50 {
                    value = "P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7504
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto51 {
                    value = "pf"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7696
                    hide_name = True
                    size = 0, 0
                ]

                tag From31 {
                    value = "Vq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto52 {
                    value = "S"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7632
                    hide_name = True
                    size = 0, 0
                ]

                tag From34 {
                    value = "Id"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Vd"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7528
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Iq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7720
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto53 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7144, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                junction Junction397 pe
                [
                    position = 7344, 8096
                ]

                junction Junction188 sp
                [
                    position = 8032, 7528
                ]

                junction Junction189 sp
                [
                    position = 8032, 7592
                ]

                junction Junction190 sp
                [
                    position = 8032, 7656
                ]

                junction Junction191 sp
                [
                    position = 8032, 7720
                ]

                junction Junction385 pe
                [
                    position = 8104, 7920
                ]

                junction Junction387 pe
                [
                    position = 8104, 7848
                ]

                junction Junction388 pe
                [
                    position = 8104, 7920
                ]

                junction Junction393 pe
                [
                    position = 7344, 7904
                ]

                junction Junction395 pe
                [
                    position = 8024, 8136
                ]

                junction Junction396 pe
                [
                    position = 8192, 8136
                ]

                junction Junction398 pe
                [
                    position = 7416, 7904
                ]

                junction Junction399 pe
                [
                    position = 7416, 8096
                ]

                junction Junction401 sp
                [
                    position = 7816, 8000
                ]

                junction Junction403 sp
                [
                    position = 7304, 7760
                ]

                connect - Junction397 as Connection4543
                connect Junction397 VDC.n_node as Connection4544
                [
                    breakpoints = 7344, 8096; 7344, 8096
                ]
                connect La.p_node I.p_node as Connection378
                connect From31 Power_Meas.Vq as Connection403
                connect From32 Power_Meas.Vd as Connection402
                connect From34 Power_Meas.Id as Connection404
                connect Goto49 Junction189 as Connection544
                connect Goto52 Junction190 as Connection547
                connect Goto51 Junction191 as Connection550
                connect Junction188 Power_Meas.P as Connection540
                connect Junction189 Power_Meas.Q as Connection543
                connect Junction190 Power_Meas.S as Connection546
                connect Junction191 Power_Meas.pf as Connection549
                connect P.in Junction188 as Connection539
                connect Power_Meas.Iq From35 as Connection405
                connect Q.in Junction189 as Connection542
                connect S.in Junction190 as Connection545
                connect pf.in Junction191 as Connection548
                connect Ra.p_node La.n_node as Connection4453
                connect Ra.n_node "Single Phase Inverter1.a_in" as Connection4454
                connect Rs.p_node Junction385 as Connection4472
                connect E.p_node Junction385 as Connection4474
                connect Rs.n_node Cs.p_node as Connection4475
                connect I.n_node Junction387 as Connection4486
                connect Roa.n_node Junction387 as Connection4488
                connect Roa.p_node Loa.n_node as Connection4489
                connect Junction387 Junction388 as Connection4498
                [
                    breakpoints = 8104, 7848; 8104, 7848
                ]
                connect Junction388 Junction385 as Connection4499
                [
                    breakpoints = 8104, 7920
                ]
                connect Vrms.p_node Junction388 as Connection4500
                connect Junction393 + as Connection4521
                [
                    breakpoints = 7344, 7904
                ]
                connect VDC.p_node Junction393 as Connection4522
                connect VDC.out LPF_dc.in as Connection4526
                connect "Single Phase Inverter1.b_in" Rb.n_node as Connection4529
                [
                    breakpoints = 7624, 8136; 7680, 8136
                ]
                connect Rb.p_node Lb.n_node as Connection4530
                connect E.n_node Junction395 as Connection4531
                connect Junction395 Cs.n_node as Connection4532
                [
                    breakpoints = 8024, 8136
                ]
                connect Lb.p_node Junction395 as Connection4533
                connect Rob.p_node Lob.n_node as Connection4534
                connect Vrms.n_node Junction396 as Connection4536
                connect Junction396 Cs.n_node as Connection4537
                [
                    breakpoints = 8192, 8136
                ]
                connect Rob.n_node Junction396 as Connection4538
                connect Lob.p_node B as Connection4539
                connect "Single Phase Inverter1.pos_out" Junction398 as Connection4546
                connect Junction398 Junction393 as Connection4547
                [
                    breakpoints = 7376, 7904; 7376, 7904; 7376, 7904
                ]
                connect C.p_node Junction398 as Connection4548
                connect "Single Phase Inverter1.neg_out" Junction399 as Connection4549
                connect Junction399 Junction397 as Connection4550
                connect C.n_node Junction399 as Connection4551
                connect Junction401 V.in as Connection4596
                [
                    breakpoints = 7816, 8000
                ]
                connect Goto41 Junction401 as Connection4597
                connect Controller.mb "Single Phase Inverter1.InB" as Connection4599
                connect Controller.ma "Single Phase Inverter1.InA" as Connection4600
                connect Controller.En "Single Phase Inverter1.En" as Connection4601
                connect Goto53 LPF_dc.out as Connection4602
                connect Pref Junction403 as Connection4607
                connect Junction403 Controller.PREF as Connection4608
                connect Pref_probe.in Junction403 as Connection4609
                connect Loa.p_node A as Connection4610
                connect E.out BPF.in as Connection4611
                connect BPF.out Junction401 as Connection4612
                connect Goto35 BPF1.out as Connection4613
                connect BPF1.in I.out as Connection4614
                connect Junction188 Goto50 as Connection4615
                [
                    breakpoints = 8032, 7528; 8032, 7504
                ]

                C_s = "40e-6"
                Imax = "1"
                Imin = "-1"
                Ki_I = "4*20"
                Kp_I = "0.076*20"
                L_i = "0.0133/2"
                L_o = "38e-6/2"
                R_i = "1e-3/2"
                R_o = "2e-3/2"
                R_s = "0.3244"
                S = "50e3"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A lead acid battery interfaced with a three-phase inverter and LCL filter</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "10e3"
                        unit = "VA"
                        group = "1. Single-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "1. Single-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Single-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_inv"
                        unit = "s"
                        group = "1. Single-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "0.0165"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "2.5872"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "5e-6"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "1e-4"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    Kp_I {
                        label = "Current Regulator Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.6079*30"
                        group = "3. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Current Regulator Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "4*30"
                        group = "3. Cascaded Controller"
                    }

                    Imax {
                        label = "Current Regulator Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1.5"
                        group = "3. Cascaded Controller"
                    }

                    Imin {
                        label = "Current Regulator Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1.5"
                        group = "3. Cascaded Controller"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE

                    CODE define_icon
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE
                }
            }
            [
                position = 8424, 8152
                size = 64, 80
            ]

            component gen_sum Sum1 {
            }
            [
                position = 8008, 8264
                rotation = left
                hide_name = True
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_inv"
            }
            [
                position = 8168, 8088
                hide_name = True
                size = 32, 32
            ]

            component Subsystem Measurement {
                layout = dynamic
                component "core/Voltage Measurement" Va {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8240, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8192, 8088
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe P {
                }
                [
                    position = 8888, 7856
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8272, 8000
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8352, 8152
                    size = 88, 48
                ]

                component gen_z_domain_transfer "Hilbert Transform" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8112, 7832
                ]

                component gen_z_domain_transfer "Hilbert Transform1" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8104, 7952
                ]

                component gen_product Product1 {
                }
                [
                    position = 8512, 7808
                    hide_name = True
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8616, 7856
                    hide_name = True
                ]

                component gen_z_domain_transfer LPF_P {
                    a_coeff = "[1.0/(2*np.pi),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8768, 7856
                ]

                component gen_product Product2 {
                }
                [
                    position = 8512, 7896
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "0.5"
                }
                [
                    position = 8696, 7856
                    hide_name = True
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8216
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8216
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8096, 8088
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8088
                    rotation = down
                ]

                port Pm {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8856, 7784
                ]

                tag From31 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7888
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7840
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7928
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto60 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7784
                    hide_name = True
                    size = 60, 20
                ]

                tag From54 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7944, 7784
                    hide_name = True
                ]

                tag Goto61 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7832
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto66 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7904
                    hide_name = True
                    size = 60, 20
                ]

                tag From60 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7936, 7904
                    hide_name = True
                ]

                tag Goto67 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7952
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto68 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8472, 8152
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto69 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8392, 8000
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7800
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction647 pe
                [
                    position = 8240, 8216
                ]

                junction Junction651 pe
                [
                    position = 8240, 8088
                ]

                junction Junction386 sp
                [
                    position = 8024, 7784
                ]

                junction Junction392 sp
                [
                    position = 8016, 7904
                ]

                junction Junction652 sp
                [
                    position = 8824, 7856
                ]

                connect b Junction647 as Connection4978
                connect Junction647 Va.n_node as Connection4979
                [
                    breakpoints = 8240, 8216
                ]
                connect a Junction651 as Connection4996
                connect Junction651 Va.p_node as Connection4997
                [
                    breakpoints = 8240, 8088
                ]
                connect Ia.p_node Junction651 as Connection4998
                connect Ia.n_node A as Connection5000
                [
                    breakpoints = 8144, 8088
                ]
                connect B Junction647 as Connection5001
                [
                    breakpoints = 8144, 8216
                ]
                connect Goto69 BPF.out as Connection5041
                connect BPF.in Ia.out as Connection5042
                connect Goto68 BPF1.out as Connection5043
                connect BPF1.in Va.out as Connection5044
                connect From54 Junction386 as Connection4478
                connect Junction386 Goto60 as Connection4479
                connect "Hilbert Transform.in" Junction386 as Connection4480
                connect "Hilbert Transform.out" Goto61 as Connection4481
                connect From60 Junction392 as Connection4503
                connect Junction392 Goto66 as Connection4504
                connect "Hilbert Transform1.in" Junction392 as Connection4505
                connect "Hilbert Transform1.out" Goto67 as Connection4506
                connect Sum1.in Product1.out as Connection29
                connect Sum1.in1 Product2.out as Connection30
                connect From31 Product2.in as Connection5032
                connect From32 Product1.in as Connection5033
                connect From34 Product1.in1 as Connection5034
                connect From35 Product2.in1 as Connection5035
                connect P.in Junction652 as Connection5036
                connect Junction652 Pm as Connection5037
                [
                    breakpoints = 8816, 7856; 8816, 7856; 8816, 7856; 8816, 7832
                ]
                connect LPF_P.out Junction652 as Connection5038
                connect LPF_P.in Gain1.out as Connection5039
                connect Gain1.in Sum1.out as Connection5040
            }
            [
                position = 8424, 8320
                size = 48, 72
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8712, 8176
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8712, 8128
                rotation = down
            ]

            junction Junction3 sp
            [
                position = 8136, 8488
            ]

            junction Junction4 sp
            [
                position = 8136, 8424
            ]

            junction Junction5 pe
            [
                position = 8512, 8136
            ]

            junction Junction6 pe
            [
                position = 8536, 8168
            ]

            connect "Core coupling.a" a as Connection18
            connect "Core coupling.b" b as Connection19
            connect Inverter.+ Vs1.p_node as Connection4992
            connect Inverter.- Vs1.n_node as Connection4993
            connect Pref_reg.in Junction3 as Connection4995
            connect Junction3 Modbus.Pref_reg as Connection4996
            connect Sum1.in Junction3 as Connection4997
            connect Pref_ed.in Junction4 as Connection4998
            connect Junction4 Modbus.Pref_ed as Connection4999
            connect Sum1.in1 Junction4 as Connection5000
            connect Sum1.out "Rate Transition1.in" as Connection5002
            connect "Rate Transition1.out" Inverter.Pref as Connection5003
            connect Measurement.A Load.A as Connection5006
            connect Measurement.B Load.B as Connection5007
            connect Inverter.A Junction5 as Connection5008
            connect Junction5 "Core coupling.A" as Connection5009
            [
                breakpoints = 8504, 8136
            ]
            connect Measurement.a Junction5 as Connection5010
            connect Inverter.B Junction6 as Connection5011
            connect Junction6 "Core coupling.B" as Connection5012
            [
                breakpoints = 8544, 8168
            ]
            connect Measurement.b Junction6 as Connection5013
            connect Measurement.Pm Modbus.Pm as Connection5014

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6304, 7688
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem SolarHouse4 {
            layout = dynamic
            component Subsystem Load {
                layout = dynamic
                component pas_inductor L {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8208, 8144
                    rotation = right
                ]

                component pas_resistor R {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8144, 8144
                    rotation = right
                ]

                port A {
                    label = "A"
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8048
                ]

                port B {
                    label = "B"
                    position = left:2
                    kind = pe
                }
                [
                    position = 8080, 8224
                ]

                junction Junction1 pe
                [
                    position = 8144, 8048
                ]

                junction Junction2 pe
                [
                    position = 8144, 8224
                ]

                connect R.p_node Junction1 as Connection3
                connect Junction1 A as Connection4
                connect L.p_node Junction1 as Connection5
                connect R.n_node Junction2 as Connection6
                connect Junction2 B as Connection7
                connect L.n_node Junction2 as Connection8

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Constant Impedance Load</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxingle-phase RL load.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxand L values are calculated using the input parameters:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated voltage</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated power</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    - f: Rated frequency</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxpf: Rated power factor</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxone of the parameters can be set to 0.</p></body></html>"

                    V {
                        label = "Voltage"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "General"
                    }

                    S {
                        label = "Power"
                        widget = edit
                        type = generic
                        default_value = "1e3"
                        unit = "VA"
                        group = "General"
                    }

                    f {
                        label = "Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General"
                    }

                    pf {
                        label = "Power Factor"
                        widget = edit
                        type = generic
                        default_value = "0.9"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8288, 8320
                scale = -1, 1
                size = 48, 72
            ]

            component Subsystem Modbus {
                layout = dynamic
                component gen_terminator Termination1 {
                }
                [
                    position = 8400, 7920
                ]

                component src_constant C_u12 {
                    execution_rate = "Ts"
                }
                [
                    position = 7968, 7800
                ]

                component src_constant C_u13 {
                    execution_rate = "Ts"
                    value = "50"
                }
                [
                    position = 7920, 7872
                ]

                component src_constant C_u11 {
                    execution_rate = "Ts"
                }
                [
                    position = 8008, 7720
                ]

                component "core/ModBus Device" "ModBus Device4 (config4)" {
                    configuration = "config4"
                    execution_rate = "Ts"
                }
                [
                    position = 8192, 7992
                    size = 184, 184
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts"
                }
                [
                    position = 7864, 8064
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe P_probe {
                }
                [
                    position = 7888, 8000
                ]

                component gen_bus_join "Bus Join1" {
                }
                [
                    position = 7968, 8088
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8368, 8064
                ]

                component "core/Dynamic Table" "Dynamic Table" {
                    execution_rate = "Ts"
                    import_dynamic_table_file = "C:/Users/zholbar1/Documents/microgrid_testbed/APRA-E MST project/Q4/Test 2/Solar Village Test2/P4max.csv"
                    signal_names = "[\'P4max\']"
                    x_vec = "[0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788, 792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844, 848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 960, 964, 968, 972, 976, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1092, 1096, 1100, 1104, 1108, 1112, 1116, 1120, 1124, 1128, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1180, 1184, 1188, 1192, 1196, 1200, 1204, 1208, 1212, 1216, 1220, 1224, 1228, 1232, 1236, 1240, 1244, 1248, 1252, 1256, 1260, 1264, 1268, 1272, 1276, 1280, 1284, 1288, 1292, 1296, 1300, 1304, 1308, 1312, 1316, 1320, 1324, 1328, 1332, 1336, 1340, 1344, 1348, 1352, 1356, 1360, 1364, 1368, 1372, 1376, 1380, 1384, 1388, 1392, 1396, 1400, 1404, 1408, 1412, 1416, 1420, 1424, 1428, 1432, 1436, 1440, 1444, 1448, 1452, 1456, 1460, 1464, 1468, 1472, 1476, 1480, 1484, 1488, 1492, 1496, 1500, 1504, 1508, 1512, 1516, 1520, 1524, 1528, 1532, 1536, 1540, 1544, 1548, 1552, 1556, 1560, 1564, 1568, 1572, 1576, 1580, 1584, 1588, 1592, 1596, 1600, 1604, 1608, 1612, 1616, 1620, 1624, 1628, 1632, 1636, 1640, 1644, 1648, 1652, 1656, 1660, 1664, 1668, 1672, 1676, 1680, 1684, 1688, 1692, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1724, 1728, 1732, 1736, 1740, 1744, 1748, 1752, 1756, 1760, 1764, 1768, 1772, 1776, 1780, 1784, 1788, 1792, 1796, 1800, 1804, 1808, 1812, 1816, 1820, 1824, 1828, 1832, 1836, 1840, 1844, 1848, 1852, 1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1900, 1904, 1908, 1912, 1916, 1920, 1924, 1928, 1932, 1936, 1940, 1944, 1948, 1952, 1956, 1960, 1964, 1968, 1972, 1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020, 2024, 2028, 2032, 2036, 2040, 2044, 2048, 2052, 2056, 2060, 2064, 2068, 2072, 2076, 2080, 2084, 2088, 2092, 2096, 2100, 2104, 2108, 2112, 2116, 2120, 2124, 2128, 2132, 2136, 2140, 2144, 2148, 2152, 2156, 2160, 2164, 2168, 2172, 2176, 2180, 2184, 2188, 2192, 2196, 2200, 2204, 2208, 2212, 2216, 2220, 2224, 2228, 2232, 2236, 2240, 2244, 2248, 2252, 2256, 2260, 2264, 2268, 2272, 2276, 2280, 2284, 2288, 2292, 2296, 2300, 2304, 2308, 2312, 2316, 2320, 2324, 2328, 2332, 2336, 2340, 2344, 2348, 2352, 2356, 2360, 2364, 2368, 2372, 2376, 2380, 2384, 2388, 2392, 2396, 2400, 2404, 2408, 2412, 2416, 2420, 2424, 2428, 2432, 2436, 2440, 2444, 2448, 2452, 2456, 2460, 2464, 2468, 2472, 2476, 2480, 2484, 2488, 2492, 2496, 2500, 2504, 2508, 2512, 2516, 2520, 2524, 2528, 2532, 2536, 2540, 2544, 2548, 2552, 2556, 2560, 2564, 2568, 2572, 2576, 2580, 2584, 2588, 2592, 2596, 2600, 2604, 2608, 2612, 2616, 2620, 2624, 2628, 2632, 2636, 2640, 2644, 2648, 2652, 2656, 2660, 2664, 2668, 2672, 2676, 2680, 2684, 2688, 2692, 2696, 2700, 2704, 2708, 2712, 2716, 2720, 2724, 2728, 2732, 2736, 2740, 2744, 2748, 2752, 2756, 2760, 2764, 2768, 2772, 2776, 2780, 2784, 2788, 2792, 2796, 2800, 2804, 2808, 2812, 2816, 2820, 2824, 2828, 2832, 2836, 2840, 2844, 2848, 2852, 2856, 2860, 2864, 2868, 2872, 2876, 2880, 2884, 2888, 2892, 2896, 2900, 2904, 2908, 2912, 2916, 2920, 2924, 2928, 2932, 2936, 2940, 2944, 2948, 2952, 2956, 2960, 2964, 2968, 2972, 2976, 2980, 2984, 2988, 2992, 2996, 3000, 3004, 3008, 3012, 3016, 3020, 3024, 3028, 3032, 3036, 3040, 3044, 3048, 3052, 3056, 3060, 3064, 3068, 3072, 3076, 3080, 3084, 3088, 3092, 3096, 3100, 3104, 3108, 3112, 3116, 3120, 3124, 3128, 3132, 3136, 3140, 3144, 3148, 3152, 3156, 3160, 3164, 3168, 3172, 3176, 3180, 3184, 3188, 3192, 3196, 3200, 3204, 3208, 3212, 3216, 3220, 3224, 3228, 3232, 3236, 3240, 3244, 3248, 3252, 3256, 3260, 3264, 3268, 3272, 3276, 3280, 3284, 3288, 3292, 3296, 3300, 3304, 3308, 3312, 3316, 3320, 3324, 3328, 3332, 3336, 3340, 3344, 3348, 3352, 3356, 3360, 3364, 3368, 3372, 3376, 3380, 3384, 3388, 3392, 3396, 3400, 3404, 3408, 3412, 3416, 3420, 3424, 3428, 3432, 3436, 3440, 3444, 3448, 3452, 3456, 3460, 3464, 3468, 3472, 3476, 3480, 3484, 3488, 3492, 3496, 3500, 3504, 3508, 3512, 3516, 3520, 3524, 3528, 3532, 3536, 3540, 3544, 3548, 3552, 3556, 3560, 3564, 3568, 3572, 3576, 3580, 3584, 3588, 3592, 3596, 3600, 3604, 3608, 3612, 3616, 3620, 3624, 3628, 3632, 3636, 3640, 3644, 3648, 3652, 3656, 3660, 3664, 3668, 3672, 3676, 3680, 3684, 3688, 3692, 3696, 3700, 3704, 3708, 3712, 3716, 3720, 3724, 3728, 3732, 3736, 3740, 3744, 3748, 3752, 3756, 3760, 3764, 3768, 3772, 3776, 3780, 3784, 3788, 3792, 3796, 3800, 3804, 3808, 3812, 3816, 3820, 3824, 3828, 3832, 3836, 3840, 3844, 3848, 3852, 3856, 3860, 3864, 3868, 3872, 3876, 3880, 3884, 3888, 3892, 3896, 3900, 3904, 3908, 3912, 3916, 3920, 3924, 3928, 3932, 3936, 3940, 3944, 3948, 3952, 3956, 3960, 3964, 3968, 3972, 3976, 3980, 3984, 3988, 3992, 3996, 4000, 4004, 4008, 4012, 4016, 4020, 4024, 4028, 4032, 4036, 4040, 4044, 4048, 4052, 4056, 4060, 4064, 4068, 4072, 4076, 4080, 4084, 4088, 4092, 4096, 4100, 4104, 4108, 4112, 4116, 4120, 4124, 4128, 4132, 4136, 4140, 4144, 4148, 4152, 4156, 4160, 4164, 4168, 4172, 4176, 4180, 4184, 4188, 4192, 4196, 4200, 4204, 4208, 4212, 4216, 4220, 4224, 4228, 4232, 4236, 4240, 4244, 4248, 4252, 4256, 4260, 4264, 4268, 4272, 4276, 4280, 4284, 4288, 4292, 4296, 4300, 4304, 4308, 4312, 4316, 4320, 4324, 4328, 4332, 4336, 4340, 4344, 4348, 4352, 4356, 4360, 4364, 4368, 4372, 4376, 4380, 4384, 4388, 4392, 4396, 4400, 4404, 4408, 4412, 4416, 4420, 4424, 4428, 4432, 4436, 4440, 4444, 4448, 4452, 4456, 4460, 4464, 4468, 4472, 4476, 4480, 4484, 4488, 4492, 4496, 4500, 4504, 4508, 4512, 4516, 4520, 4524, 4528, 4532, 4536, 4540, 4544, 4548, 4552, 4556, 4560, 4564, 4568, 4572, 4576, 4580, 4584, 4588, 4592, 4596, 4600, 4604, 4608, 4612, 4616, 4620, 4624, 4628, 4632, 4636, 4640, 4644, 4648, 4652, 4656, 4660, 4664, 4668, 4672, 4676, 4680, 4684, 4688, 4692, 4696, 4700, 4704, 4708, 4712, 4716, 4720, 4724, 4728, 4732, 4736, 4740, 4744, 4748, 4752, 4756, 4760, 4764, 4768, 4772, 4776, 4780, 4784, 4788, 4792, 4796, 4800, 4804, 4808, 4812, 4816, 4820, 4824, 4828, 4832, 4836, 4840]"
                    y_vec = "[[2295.3839055127514, 2295.3839055127514, 2295.3839055127514, 2292.1320256949853, 2300.2645733975714, 2298.6361114365545, 2300.2645733975714, 2301.8931168150025, 2298.6361114365545, 2303.517267235586, 2303.517267235586, 2305.145973048822, 2301.8931168150025, 2308.3991530374037, 2300.2645733975714, 2300.2645733975714, 2301.8931168150025, 2303.517267235586, 2311.652656015391, 2306.774760019022, 2297.0122044908217, 2311.652656015391, 2308.3991530374037, 2303.517267235586, 2308.3991530374037, 2305.145973048822, 2308.3991530374037, 2305.145973048822, 2311.652656015391, 2314.910957110873, 2305.145973048822, 2305.145973048822, 2308.3991530374037, 2306.774760019022, 2310.0281018244877, 2316.5357524455994, 2313.281766224858, 2308.3991530374037, 2314.910957110873, 2313.281766224858, 2310.0281018244877, 2311.652656015391, 2313.281766224858, 2316.5357524455994, 2319.7945362859905, 2310.0281018244877, 2319.7945362859905, 2316.5357524455994, 2318.1651041727578, 2316.5357524455994, 2316.5357524455994, 2313.281766224858, 2314.910957110873, 2314.910957110873, 2314.910957110873, 2316.5357524455994, 2314.910957110873, 2313.281766224858, 2316.5357524455994, 2319.7945362859905, 2314.910957110873, 2314.910957110873, 2316.5357524455994, 2311.652656015391, 2319.7945362859905, 2319.7945362859905, 2318.1651041727578, 2311.652656015391, 2314.910957110873, 2316.5357524455994, 2316.5357524455994, 2316.5357524455994, 2318.1651041727578, 2316.5357524455994, 2318.1651041727578, 2321.419571896306, 2324.674359511767, 2314.910957110873, 2318.1651041727578, 2318.1651041727578, 2321.419571896306, 2319.7945362859905, 2323.049164271576, 2321.419571896306, 2316.5357524455994, 2323.049164271576, 2323.049164271576, 2324.674359511767, 2323.049164271576, 2321.419571896306, 2319.7945362859905, 2324.674359511767, 2326.3041117645002, 2323.049164271576, 2324.674359511767, 2324.674359511767, 2324.674359511767, 2321.419571896306, 2323.049164271576, 2329.55937799787, 2323.049164271576, 2326.3041117645002, 2332.8149622006868, 2327.933943921677, 2327.933943921677, 2326.3041117645002, 2326.3041117645002, 2331.189369456996, 2327.933943921677, 2327.933943921677, 2326.3041117645002, 2324.674359511767, 2323.049164271576, 2324.674359511767, 2332.8149622006868, 2326.3041117645002, 2326.3041117645002, 2327.933943921677, 2331.189369456996, 2329.55937799787, 2336.0753423839387, 2334.4451125794053, 2332.8149622006868, 2332.8149622006868, 2331.189369456996, 2332.8149622006868, 2329.55937799787, 2329.55937799787, 2329.55937799787, 2327.933943921677, 2332.8149622006868, 2326.3041117645002, 2324.674359511767, 2327.933943921677, 2326.3041117645002, 2331.189369456996, 2326.3041117645002, 2327.933943921677, 2331.189369456996, 2326.3041117645002, 2331.189369456996, 2334.4451125794053, 2327.933943921677, 2329.55937799787, 2329.55937799787, 2326.3041117645002, 2324.674359511767, 2327.933943921677, 2329.55937799787, 2331.189369456996, 2334.4451125794053, 2339.3315606912797, 2331.189369456996, 2329.55937799787, 2331.189369456996, 2329.55937799787, 2326.3041117645002, 2327.933943921677, 2329.55937799787, 2327.933943921677, 2334.4451125794053, 2334.4451125794053, 2334.4451125794053, 2336.0753423839387, 2334.4451125794053, 2332.8149622006868, 2336.0753423839387, 2334.4451125794053, 2334.4451125794053, 2337.701172538976, 2334.4451125794053, 2337.701172538976, 2340.962027983585, 2339.3315606912797, 2340.962027983585, 2345.8449436217497, 2344.2187197599733, 2345.8449436217497, 2344.2187197599733, 2344.2187197599733, 2345.8449436217497, 2345.8449436217497, 2347.475726091496, 2349.106587227375, 2344.2187197599733, 2350.733046223672, 2353.9906794037547, 2353.9906794037547, 2360.511363898182, 2357.253106445134, 2350.733046223672, 2355.621853829909, 2349.106587227375, 2339.3315606912797, 2345.8449436217497, 2339.3315606912797, 2334.4451125794053, 2339.3315606912797, 2339.3315606912797, 2327.933943921677, 2337.701172538976, 2340.962027983585, 2350.733046223672, 2345.8449436217497, 2349.106587227375, 2347.475726091496, 2352.364064192774, 2353.9906794037547, 2353.9906794037547, 2352.364064192774, 2353.9906794037547, 2357.253106445134, 2350.733046223672, 2362.1428503274583, 2362.1428503274583, 2365.4015739139145, 2373.551977965439, 2375.1840837095237, 2371.9199493903416, 2375.1840837095237, 2383.3367967819136, 2380.071893936205, 2378.444041998255, 2384.964877998867, 2380.071893936205, 2380.071893936205, 2383.3367967819136, 2378.444041998255, 2380.071893936205, 2381.7043070085347, 2380.071893936205, 2381.7043070085347, 2381.7043070085347, 2375.1840837095237, 2375.1840837095237, 2375.1840837095237, 2368.660607182405, 2370.292481353759, 2370.292481353759, 2371.9199493903416, 2373.551977965439, 2380.071893936205, 2376.8117824056217, 2386.5975207060565, 2383.3367967819136, 2386.5975207060565, 2386.5975207060565, 2386.5975207060565, 2384.964877998867, 2386.5975207060565, 2391.491421032676, 2384.964877998867, 2384.964877998867, 2384.964877998867, 2398.01469405014, 2388.230239844547, 2389.858549516195, 2389.858549516195, 2393.119882481444, 2393.119882481444, 2384.964877998867, 2391.491421032676, 2388.230239844547, 2388.230239844547, 2389.858549516195, 2388.230239844547, 2391.491421032676, 2393.119882481444, 2393.119882481444, 2394.752906010632, 2398.01469405014, 2389.858549516195, 2384.964877998867, 2386.5975207060565, 2388.230239844547, 2386.5975207060565, 2386.5975207060565, 2386.5975207060565, 2396.386005513769, 2391.491421032676, 2393.119882481444, 2393.119882481444, 2394.752906010632, 2399.6479450194724, 2396.386005513769, 2393.119882481444, 2396.386005513769, 2393.119882481444, 2396.386005513769, 2393.119882481444, 2394.752906010632, 2394.752906010632, 2393.119882481444, 2396.386005513769, 2396.386005513769, 2398.01469405014, 2401.27678442482, 2394.752906010632, 2398.01469405014, 2394.752906010632, 2396.386005513769, 2396.386005513769, 2398.01469405014, 2393.119882481444, 2398.01469405014, 2396.386005513769, 2399.6479450194724, 2401.27678442482, 2401.27678442482, 2401.27678442482, 2404.543664089093, 2406.172729223313, 2398.01469405014, 2407.806357369041, 2404.543664089093, 2404.543664089093, 2401.27678442482, 2398.01469405014, 2402.9101864972777, 2401.27678442482, 2402.9101864972777, 2404.543664089093, 2394.752906010632, 2396.386005513769, 2394.752906010632, 2391.491421032676, 2384.964877998867, 2388.230239844547, 2386.5975207060565, 2386.5975207060565, 2388.230239844547, 2388.230239844547, 2383.3367967819136, 2378.444041998255, 2373.551977965439, 2355.621853829909, 2336.0753423839387, 2336.0753423839387, 2342.5880946896746, 2375.1840837095237, 2391.491421032676, 2398.01469405014, 2404.543664089093, 2409.4400607685743, 2412.7032042383125, 2415.966646794273, 2420.864614715646, 2422.498916240483, 2414.332643716981, 2409.4400607685743, 2327.933943921677, 2220.652472277268, 2175.2482111284257, 2243.375636270348, 2327.933943921677, 2308.3991530374037, 2298.6361114365545, 2270.9961053830293, 2259.622400640345, 2293.7601612977373, 2326.3041117645002, 2380.071893936205, 2381.7043070085347, 2297.0122044908217, 2266.119883322653, 2313.281766224858, 2394.752906010632, 2378.444041998255, 2246.626993656477, 2113.746830742009, 2157.4345995505537, 2194.7000268992733, 2215.7841365911263, 2355.621853829909, 2442.093853425437, 2450.261905088501, 2451.897531529811, 2451.897531529811, 2448.626351583093, 2451.897531529811, 2451.897531529811, 2453.528737040356, 2456.800353415414, 2446.995364079455, 2450.261905088501, 2450.261905088501, 2450.261905088501, 2448.626351583093, 2450.261905088501, 2450.261905088501, 2451.897531529811, 2450.261905088501, 2450.261905088501, 2451.897531529811, 2451.897531529811, 2453.528737040356, 2453.528737040356, 2450.261905088501, 2450.261905088501, 2448.626351583093, 2448.626351583093, 2451.897531529811, 2450.261905088501, 2451.897531529811, 2448.626351583093, 2450.261905088501, 2456.800353415414, 2456.800353415414, 2453.528737040356, 2456.800353415414, 2456.800353415414, 2456.800353415414, 2458.4317761430952, 2455.1645088910395, 2458.4317761430952, 2460.0677655540026, 2458.4317761430952, 2463.3354665530633, 2458.4317761430952, 2460.0677655540026, 2458.4317761430952, 2458.4317761430952, 2460.0677655540026, 2456.800353415414, 2458.4317761430952, 2455.1645088910395, 2455.1645088910395, 2450.261905088501, 2451.897531529811, 2451.897531529811, 2451.897531529811, 2453.528737040356, 2455.1645088910395, 2456.800353415414, 2458.4317761430952, 2458.4317761430952, 2461.699332602871, 2460.0677655540026, 2458.4317761430952, 2463.3354665530633, 2468.2398059228667, 2468.2398059228667, 2466.60345571424, 2466.60345571424, 2466.60345571424, 2464.971672742085, 2464.971672742085, 2464.971672742085, 2468.2398059228667, 2469.876228110584, 2468.2398059228667, 2468.2398059228667, 2469.876228110584, 2466.60345571424, 2469.876228110584, 2469.876228110584, 2468.2398059228667, 2464.971672742085, 2468.2398059228667, 2463.3354665530633, 2466.60345571424, 2458.4317761430952, 2460.0677655540026, 2451.897531529811, 2445.359956508053, 2450.261905088501, 2453.528737040356, 2451.897531529811, 2448.626351583093, 2445.359956508053, 2450.261905088501, 2451.897531529811, 2453.528737040356, 2466.60345571424, 2468.2398059228667, 2468.2398059228667, 2461.699332602871, 2463.3354665530633, 2456.800353415414, 2461.699332602871, 2461.699332602871, 2461.699332602871, 2466.60345571424, 2468.2398059228667, 2468.2398059228667, 2464.971672742085, 2460.0677655540026, 2456.800353415414, 2456.800353415414, 2451.897531529811, 2455.1645088910395, 2456.800353415414, 2464.971672742085, 2458.4317761430952, 2458.4317761430952, 2461.699332602871, 2456.800353415414, 2456.800353415414, 2451.897531529811, 2450.261905088501, 2448.626351583093, 2448.626351583093, 2443.729114712195, 2445.359956508053, 2430.662556746764, 2438.828043036855, 2442.093853425437, 2440.4586655136027, 2430.662556746764, 2427.393285986255, 2422.498916240483, 2424.128802058816, 2429.027884325069, 2438.828043036855, 2440.4586655136027, 2450.261905088501, 2451.897531529811, 2453.528737040356, 2448.626351583093, 2445.359956508053, 2443.729114712195, 2437.1930019374327, 2442.093853425437, 2445.359956508053, 2446.995364079455, 2461.699332602871, 2460.0677655540026, 2461.699332602871, 2464.971672742085, 2461.699332602871, 2460.0677655540026, 2458.4317761430952, 2460.0677655540026, 2458.4317761430952, 2456.800353415414, 2453.528737040356, 2448.626351583093, 2445.359956508053, 2445.359956508053, 2443.729114712195, 2451.897531529811, 2458.4317761430952, 2469.876228110584, 2481.3197001696785, 2489.4963867797933, 2491.1337358926353, 2489.4963867797933, 2486.226398957223, 2484.5892624978223, 2486.226398957223, 2484.5892624978223, 2489.4963867797933, 2491.1337358926353, 2494.40414767348, 2494.40414767348, 2496.0372097843024, 2489.4963867797933, 2492.7666572814624, 2489.4963867797933, 2484.5892624978223, 2487.8591085312496, 2487.8591085312496, 2487.8591085312496, 2492.7666572814624, 2499.312542889052, 2494.40414767348, 2487.8591085312496, 2492.7666572814624, 2496.0372097843024, 2491.1337358926353, 2487.8591085312496, 2494.40414767348, 2494.40414767348, 2491.1337358926353, 2487.8591085312496, 2492.7666572814624, 2482.9566944991857, 2482.9566944991857, 2484.5892624978223, 2486.226398957223, 2496.0372097843024, 2492.7666572814624, 2496.0372097843024, 2504.221570144863, 2500.9458155466227, 2502.58365775241, 2494.40414767348, 2494.40414767348, 2494.40414767348, 2497.674841116669, 2499.312542889052, 2505.855052591771, 2494.40414767348, 2509.126726729573, 2505.855052591771, 2502.58365775241, 2504.221570144863, 2509.126726729573, 2510.7649186425697, 2515.675411447691, 2518.947919871481, 2520.5865287460506, 2527.1326510101776, 2527.1326510101776, 2456.800353415414, 2334.4451125794053, 2316.5357524455994, 2404.543664089093, 2419.230387719589, 2420.864614715646, 2479.682777131201, 2504.221570144863, 2504.221570144863, 2497.674841116669, 2496.0372097843024, 2499.312542889052, 2507.493104912368, 2502.58365775241, 2504.221570144863, 2504.221570144863, 2500.9458155466227, 2497.674841116669, 2504.221570144863, 2505.855052591771, 2510.7649186425697, 2515.675411447691, 2520.5865287460506, 2520.5865287460506, 2525.498268290173, 2528.771605000255, 2527.1326510101776, 2530.410627840549, 2530.410627840549, 2528.771605000255, 2527.1326510101776, 2527.1326510101776, 2525.498268290173, 2530.410627840549, 2532.045216355217, 2528.771605000255, 2530.410627840549, 2527.1326510101776, 2528.771605000255, 2528.771605000255, 2528.771605000255, 2535.319101689849, 2533.6843764590803, 2533.6843764590803, 2533.6843764590803, 2533.6843764590803, 2536.9583987277115, 2538.59776420324, 2536.9583987277115, 2538.59776420324, 2538.59776420324, 2538.59776420324, 2541.8721959180084, 2543.511766025788, 2546.786605706409, 2548.4218747428768, 2551.701625886637, 2553.33709752624, 2550.061716423501, 2556.612748365151, 2556.612748365151, 2556.612748365151, 2558.252927773055, 2553.33709752624, 2559.893174551066, 2554.9771421240584, 2554.9771421240584, 2550.061716423501, 2553.33709752624, 2541.8721959180084, 2543.511766025788, 2545.146899648944, 2541.8721959180084, 2540.232694001457, 2541.8721959180084, 2541.8721959180084, 2536.9583987277115, 2543.511766025788, 2543.511766025788, 2548.4218747428768, 2546.786605706409, 2545.146899648944, 2546.786605706409, 2553.33709752624, 2553.33709752624, 2558.252927773055, 2559.893174551066, 2563.169363288648, 2564.809811530135, 2563.169363288648, 2561.5289821804213, 2559.893174551066, 2558.252927773055, 2556.612748365151, 2558.252927773055, 2551.701625886637, 2553.33709752624, 2556.612748365151, 2554.9771421240584, 2561.5289821804213, 2563.169363288648, 2568.086401903909, 2568.086401903909, 2573.004041439405, 2574.6403825024536, 2577.922279728953, 2581.19993394776, 2569.7225435080345, 2576.281297870696, 2568.086401903909, 2561.5289821804213, 2553.33709752624, 2554.9771421240584, 2551.701625886637, 2550.061716423501, 2548.4218747428768, 2545.146899648944, 2538.59776420324, 2533.6843764590803, 2532.045216355217, 2523.859452059613, 2520.5865287460506, 2522.2207049279473, 2517.3138817325885, 2515.675411447691, 2520.5865287460506, 2523.859452059613, 2530.410627840549, 2532.045216355217, 2532.045216355217, 2535.319101689849, 2546.786605706409, 2543.511766025788, 2546.786605706409, 2545.146899648944, 2550.061716423501, 2545.146899648944, 2546.786605706409, 2541.8721959180084, 2543.511766025788, 2546.786605706409, 2550.061716423501, 2554.9771421240584, 2558.252927773055, 2558.252927773055, 2564.809811530135, 2568.086401903909, 2573.004041439405, 2573.004041439405, 2573.004041439405, 2576.281297870696, 2571.3632591084493, 2573.004041439405, 2569.7225435080345, 2576.281297870696, 2577.922279728953, 2576.281297870696, 2579.558819531835, 2581.19993394776, 2582.836605785123, 2581.19993394776, 2587.7560345641323, 2587.7560345641323, 2592.6760556508266, 2589.397479071829, 2599.2385049773497, 2602.517866189871, 2605.7974875695277, 2609.077368490077, 2612.362020383005, 2612.362020383005, 2613.9999312575087, 2613.9999312575087, 2617.280458476961, 2620.565756004282, 2618.923075021018, 2620.565756004282, 2618.923075021018, 2617.280458476961, 2615.64241886708, 2613.9999312575087, 2612.362020383005, 2609.077368490077, 2609.077368490077, 2607.4396513903985, 2607.4396513903985, 2597.596666902599, 2602.517866189871, 2602.517866189871, 2604.1553888124845, 2605.7974875695277, 2607.4396513903985, 2610.7196620191658, 2612.362020383005, 2613.9999312575087, 2615.64241886708, 2613.9999312575087, 2612.362020383005, 2612.362020383005, 2613.9999312575087, 2615.64241886708, 2617.280458476961, 2620.565756004282, 2620.565756004282, 2618.923075021018, 2617.280458476961, 2617.280458476961, 2618.923075021018, 2622.203988224232, 2618.923075021018, 2622.203988224232, 2610.7196620191658, 2620.565756004282, 2618.923075021018, 2625.4896713345747, 2620.565756004282, 2618.923075021018, 2612.362020383005, 2612.362020383005, 2607.4396513903985, 2602.517866189871, 2599.2385049773497, 2589.397479071829, 2587.7560345641323, 2584.47785243999, 2577.922279728953, 2581.19993394776, 2584.47785243999, 2586.1191651798044, 2582.836605785123, 2589.397479071829, 2587.7560345641323, 2584.47785243999, 2586.1191651798044, 2582.836605785123, 2592.6760556508266, 2597.596666902599, 2600.875897616937, 2604.1553888124845, 2605.7974875695277, 2602.517866189871, 2604.1553888124845, 2604.1553888124845, 2600.875897616937, 2599.2385049773497, 2592.6760556508266, 2597.596666902599, 2607.4396513903985, 2599.2385049773497, 2602.517866189871, 2599.2385049773497, 2599.2385049773497, 2604.1553888124845, 2602.517866189871, 2599.2385049773497, 2604.1553888124845, 2612.362020383005, 2615.64241886708, 2615.64241886708, 2613.9999312575087, 2623.846797676207, 2620.565756004282, 2622.203988224232, 2617.280458476961, 2622.203988224232, 2620.565756004282, 2618.923075021018, 2623.846797676207, 2627.128095468655, 2620.565756004282, 2618.923075021018, 2617.280458476961, 2618.923075021018, 2622.203988224232, 2625.4896713345747, 2628.771097131524, 2630.4096487646066, 2640.2603505686907, 2633.695971302591, 2646.830257780553, 2646.830257780553, 2651.752705081901, 2659.9685763087905, 2653.396657252539, 2658.3243734615226, 2658.3243734615226, 2673.1108880804845, 2661.608324374881, 2666.536976541115, 2671.4661876740092, 2678.03632252136, 2669.821549263367, 2671.4661876740092, 2676.3959557484227, 2673.1108880804845, 2673.1108880804845, 2674.7511317451763, 2674.7511317451763, 2671.4661876740092, 2669.821549263367, 2673.1108880804845, 2674.7511317451763, 2673.1108880804845, 2678.03632252136, 2681.3262787460512, 2678.03632252136, 2673.1108880804845, 2671.4661876740092, 2668.1814909054588, 2664.892524398031, 2663.252652020696, 2659.9685763087905, 2666.536976541115, 2663.252652020696, 2664.892524398031, 2668.1814909054588, 2671.4661876740092, 2668.1814909054588, 2666.536976541115, 2669.821549263367, 2663.252652020696, 2656.680233212809, 2653.396657252539, 2638.6169032275925, 2630.4096487646066, 2627.128095468655, 2620.565756004282, 2615.64241886708, 2613.9999312575087, 2612.362020383005, 2610.7196620191658, 2609.077368490077, 2613.9999312575087, 2617.280458476961, 2617.280458476961, 2618.923075021018, 2625.4896713345747, 2627.128095468655, 2632.0527781235137, 2638.6169032275925, 2641.903861345891, 2641.903861345891, 2641.903861345891, 2638.6169032275925, 2632.0527781235137, 2630.4096487646066, 2623.846797676207, 2627.128095468655, 2628.771097131524, 2628.771097131524, 2630.4096487646066, 2622.203988224232, 2615.64241886708, 2615.64241886708, 2622.203988224232, 2625.4896713345747, 2623.846797676207, 2617.280458476961, 2610.7196620191658, 2595.954894284901, 2591.038989432036, 2587.7560345641323, 2587.7560345641323, 2591.038989432036, 2589.397479071829, 2595.954894284901, 2602.517866189871, 2612.362020383005, 2612.362020383005, 2613.9999312575087, 2615.64241886708, 2620.565756004282, 2620.565756004282, 2613.9999312575087, 2612.362020383005, 2600.875897616937, 2594.3176972977, 2584.47785243999, 2574.6403825024536, 2573.004041439405, 2569.7225435080345, 2568.086401903909, 2573.004041439405, 2573.004041439405, 2576.281297870696, 2584.47785243999, 2589.397479071829, 2595.954894284901, 2599.2385049773497, 2604.1553888124845, 2602.517866189871, 2589.397479071829, 2571.3632591084493, 2548.4218747428768, 2523.859452059613, 2494.40414767348, 2464.971672742085, 2438.828043036855, 2417.6007246692247, 2406.172729223313, 2404.543664089093, 2407.806357369041, 2412.7032042383125, 2407.806357369041, 2401.27678442482, 2393.119882481444, 2383.3367967819136, 2386.5975207060565, 2391.491421032676, 2376.8117824056217, 2357.253106445134, 2332.8149622006868, 2300.2645733975714, 2282.3738793077882, 2272.623169068415, 2253.121790082501, 2228.7666007930256, 2207.6734633698306, 2189.8358786344697, 2184.972524656564, 2196.3186129745363, 2206.049805289671, 2214.160043793569, 2210.916579983997, 2210.916579983997, 2220.652472277268, 2230.387005587836, 2256.369693414252, 2282.3738793077882, 2318.1651041727578, 2350.733046223672, 2388.230239844547, 2407.806357369041, 2420.864614715646, 2429.027884325069, 2437.1930019374327, 2440.4586655136027, 2437.1930019374327, 2435.5625260455404, 2432.29281199952, 2420.864614715646, 2412.7032042383125, 2402.9101864972777, 2389.858549516195, 2386.5975207060565, 2380.071893936205, 2376.8117824056217, 2370.292481353759, 2367.0288104585047, 2358.879955382741, 2355.621853829909, 2353.9906794037547, 2352.364064192774, 2347.475726091496, 2344.2187197599733, 2337.701172538976, 2326.3041117645002, 2318.1651041727578, 2310.0281018244877, 2305.145973048822, 2300.2645733975714, 2297.0122044908217, 2290.5039720400227, 2285.629247520897, 2285.629247520897, 2280.750790176519, 2272.623169068415, 2256.369693414252, 2241.754550653788, 2233.637000040919, 2228.7666007930256, 2227.1418178449776, 2233.637000040919, 2241.754550653788, 2251.495731004432, 2264.49315297065, 2269.3691249376448, 2272.623169068415, 2270.9961053830293, 2270.9961053830293, 2267.7466972159946, 2269.3691249376448, 2267.7466972159946, 2264.49315297065, 2264.49315297065, 2272.623169068415, 2287.252583079807, 2305.145973048822, 2331.189369456996, 2358.879955382741, 2380.071893936205, 2401.27678442482, 2415.966646794273, 2427.393285986255, 2440.4586655136027, 2455.1645088910395, 2468.2398059228667, 2479.682777131201, 2497.674841116669, 2505.855052591771, 2520.5865287460506, 2527.1326510101776, 2541.8721959180084, 2548.4218747428768, 2551.701625886637, 2550.061716423501, 2559.893174551066, 2563.169363288648, 2569.7225435080345, 2571.3632591084493, 2581.19993394776, 2581.19993394776, 2586.1191651798044, 2587.7560345641323, 2591.038989432036, 2595.954894284901, 2595.954894284901, 2595.954894284901, 2597.596666902599, 2600.875897616937, 2599.2385049773497, 2599.2385049773497, 2604.1553888124845, 2607.4396513903985, 2615.64241886708, 2615.64241886708, 2605.7974875695277, 2599.2385049773497, 2592.6760556508266, 2586.1191651798044, 2589.397479071829, 2589.397479071829, 2594.3176972977, 2599.2385049773497, 2604.1553888124845, 2612.362020383005, 2612.362020383005, 2613.9999312575087, 2620.565756004282, 2617.280458476961, 2623.846797676207, 2622.203988224232, 2617.280458476961, 2615.64241886708, 2612.362020383005, 2613.9999312575087, 2615.64241886708, 2613.9999312575087, 2613.9999312575087, 2617.280458476961, 2612.362020383005, 2618.923075021018, 2615.64241886708, 2615.64241886708, 2612.362020383005, 2612.362020383005, 2617.280458476961, 2620.565756004282, 2620.565756004282, 2625.4896713345747, 2628.771097131524, 2628.771097131524, 2628.771097131524, 2630.4096487646066, 2635.3347136954285, 2643.542920082269, 2650.1133319064184, 2658.3243734615226, 2666.536976541115, 2669.821549263367, 2673.1108880804845, 2673.1108880804845, 2671.4661876740092, 2668.1814909054588, 2664.892524398031, 2661.608324374881, 2658.3243734615226, 2650.1133319064184, 2645.1865573280884, 2643.542920082269, 2640.2603505686907, 2635.3347136954285, 2628.771097131524, 2628.771097131524, 2627.128095468655, 2633.695971302591, 2630.4096487646066, 2628.771097131524, 2627.128095468655, 2617.280458476961, 2613.9999312575087, 2607.4396513903985, 2604.1553888124845, 2602.517866189871, 2605.7974875695277, 2610.7196620191658, 2618.923075021018, 2625.4896713345747, 2641.903861345891, 2656.680233212809, 2668.1814909054588, 2678.03632252136, 2687.8978891321412, 2694.4749975181844, 2701.048558474045, 2704.335702200531, 2704.335702200531]]"
                }
                [
                    position = 7824, 8128
                    size = 48, 48
                ]

                port Pm {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7776, 8064
                    rotation = down
                    scale = -1, 1
                ]

                port Pref_ed {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8496, 8000
                ]

                port Pref_reg {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8504, 8072
                ]

                junction Junction1 sp
                [
                    position = 7824, 8064
                ]

                connect "ModBus Device4 (config4).coil_in" C_u11.out as Connection139
                connect C_u12.out "ModBus Device4 (config4).discrete_in" as Connection121
                [
                    breakpoints = 8000, 7968; 8080, 7968
                ]
                connect Termination1.in "ModBus Device4 (config4).coil_out" as Connection127
                connect C_u13.out "ModBus Device4 (config4).holding_in" as Connection120
                [
                    breakpoints = 7952, 8016; 8080, 8016
                ]
                connect Pm Junction1 as Connection182
                connect Junction1 "Rate Transition1.in" as Connection183
                connect P_probe.in Junction1 as Connection184
                connect "Bus Join1.out" "ModBus Device4 (config4).reg_in" as Connection226
                connect "Rate Transition1.out" "Bus Join1.in" as Connection227
                connect "Bus Split1.out" Pref_ed as Connection218
                connect "Bus Split1.in" "ModBus Device4 (config4).holding_out" as Connection231
                connect Pref_reg "Bus Split1.out1" as Connection232
                connect "Dynamic Table.P4max" "Bus Join1.in1" as Connection233
            }
            [
                position = 8256, 8456
                rotation = down
                scale = 1, -1
                size = 120, 112
            ]

            component gen_probe Pref_ed {
            }
            [
                position = 8096, 8424
                scale = -1, 1
            ]

            component gen_probe Pref_reg {
            }
            [
                position = 8096, 8488
                scale = -1, 1
            ]

            component Subsystem "Core coupling" {
                layout = dynamic
                component "core/Single Phase Core Coupling" "Core Coupling 1" {
                }
                [
                    position = 8184, 8168
                    size = 12, 256
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8264
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8264
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8088, 8072
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8072
                    rotation = down
                ]

                connect A "Core Coupling 1.a_in" as Connection1
                connect B "Core Coupling 1.b_in" as Connection2
                connect "Core Coupling 1.a_out" a as Connection3
                connect b "Core Coupling 1.b_out" as Connection4
            }
            [
                position = 8600, 8152
                size = 48, 80
            ]

            component src_voltage Vs1 {
                init_const_value = "500"
            }
            [
                position = 8272, 8152
                rotation = right
            ]

            component Subsystem Inverter {
                layout = dynamic
                component gen_probe V {
                }
                [
                    position = 7840, 8032
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                    }
                    [
                        position = 7064, 8360
                        scale = -1, 1
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8040
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[1]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7960
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 7920, 8600
                                scale = -1, 1
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "10"
                            }
                            [
                                position = 7840, 8600
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc1 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8128, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc2 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8136, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Iq_meas {
                                label = "Iq_meas"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Iq_ref {
                                label = "Iq_ref"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Id_ref {
                                label = "Id_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8032
                                rotation = down
                            ]

                            port Id_meas {
                                label = "Id_meas"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8128
                                rotation = down
                            ]

                            tag From23 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Vd"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Vq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8016, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8128
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8040
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Iq_meas Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Id_ref as Connection297
                            connect Sum9.in Iq_ref as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Id_meas Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8040; 8240, 8040
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                            connect From27 LPF_dc.in as Connection356
                            connect LPF_dc.out Limit3.in as Connection357
                            connect Limit3.out Gain5.in as Connection358
                            connect LPF_dc1.in From26 as Connection359
                            connect LPF_dc1.out Sum6.in as Connection360
                            connect LPF_dc2.in From24 as Connection361
                            connect Sum5.in LPF_dc2.out as Connection362
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Id_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Iq_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7976, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component gen_d_q2alpha_beta "dq to alpha beta" {
                        }
                        [
                            position = 7912, 8584
                            scale = -1, 1
                        ]

                        component gen_probe ud {
                        }
                        [
                            position = 8152, 8448
                        ]

                        component gen_probe uq {
                        }
                        [
                            position = 8144, 8744
                        ]

                        component Subsystem "outer power loop1" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8144
                                rotation = down
                            ]

                            port Id_r {
                                label = "Id_r"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8168
                                rotation = down
                            ]

                            port Iq_r {
                                label = "Iq_r"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8080
                                rotation = down
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect Ed Junction142 as Connection390
                            [
                                breakpoints = 8720, 8072
                            ]
                            connect P_ref Junction139 as Connection391
                            [
                                breakpoints = 8752, 8144; 8600, 8144
                            ]
                            connect Id_r Product2.out as Connection392
                            connect Iq_r Product1.out as Connection393
                        }
                        [
                            position = 8496, 8568
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8656, 8632
                            size = 48, 56
                        ]

                        component gen_probe Edq_sq {
                        }
                        [
                            position = 8656, 8712
                        ]

                        port ma {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port mb {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From29 {
                            value = "Id"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8736
                            hide_name = True
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Iq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8616
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From20 {
                            value = "Vd"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8568
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Vq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8600
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8512
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8544
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        junction Junction23 sp
                        [
                            position = 8352, 8664
                        ]

                        junction Junction17 sp
                        [
                            position = 8032, 8560
                        ]

                        junction Junction18 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction19 sp
                        [
                            position = 8112, 8520
                        ]

                        junction Junction20 sp
                        [
                            position = 8112, 8656
                        ]

                        junction Junction13 sp
                        [
                            position = 8728, 8568
                        ]

                        junction Junction14 sp
                        [
                            position = 8752, 8600
                        ]

                        junction Junction21 sp
                        [
                            position = 8608, 8632
                        ]

                        junction Junction22 sp
                        [
                            position = 8296, 8520
                        ]

                        connect From29 "inner current control loop.Id_meas" as Connection253
                        connect From30 "inner current control loop.Iq_meas" as Connection257
                        connect "inner current control loop.Iq_ref" Junction23 as Connection505
                        [
                            breakpoints = 8240, 8664
                        ]
                        connect Junction23 Iq_ref.in as Connection506
                        [
                            breakpoints = 8352, 8664; 8352, 8664; 8352, 8664
                        ]
                        connect "outer power loop1.Iq_r" Junction23 as Connection507
                        connect Ud.in Junction17 as Connection449
                        connect Junction17 Gain5.out as Connection450
                        connect "dq to alpha beta.d" Junction17 as Connection451
                        connect Uq.in Junction18 as Connection452
                        connect Junction18 Gain6.out as Connection453
                        [
                            breakpoints = 8032, 8624
                        ]
                        connect "dq to alpha beta.q" Junction18 as Connection454
                        connect From1 "dq to alpha beta.wt" as Connection455
                        connect ma "dq to alpha beta.alpha" as Connection456
                        connect mb "dq to alpha beta.beta" as Connection457
                        connect Gain5.in Junction19 as Connection458
                        connect Junction19 "inner current control loop.Ud1" as Connection459
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect ud.in Junction19 as Connection460
                        connect Gain6.in Junction20 as Connection461
                        connect Junction20 "inner current control loop.Uq1" as Connection462
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect uq.in Junction20 as Connection463
                        connect From42 "outer power loop1.P_ref" as Connection431
                        connect From43 "outer power loop1.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop1.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop1.Eq" as Connection437
                        [
                            breakpoints = 8752, 8600; 8696, 8600
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                        connect squared_Vt2.Et_p2 Junction21 as Connection464
                        connect Junction21 "outer power loop1.Et_p2" as Connection465
                        connect Edq_sq.in Junction21 as Connection466
                        connect Id_ref.in Junction22 as Connection499
                        [
                            breakpoints = 8296, 8416; 8296, 8504
                        ]
                        connect Junction22 "inner current control loop.Id_ref" as Connection500
                        [
                            breakpoints = 8296, 8520; 8296, 8520; 8288, 8520; 8296, 8520
                        ]
                        connect "outer power loop1.Id_r" Junction22 as Connection501
                    }
                    [
                        position = 7224, 8360
                        size = 128, 152
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 6880, 8512
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_split "Bus Split1" {
                    }
                    [
                        position = 6944, 8360
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain20 {
                        gain = "-1"
                    }
                    [
                        position = 6832, 8408
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_z_domain_transfer "Hilbert Transform" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7000, 8896
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts"
                        input_terminals = "real in;inherit pi;inherit Ts;"
                        input_terminals_dimensions = "inherit;inherit;inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7384, 8688
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 7608, 8736
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 7488, 8720
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe Vd {
                    }
                    [
                        position = 7656, 8856
                    ]

                    component gen_probe Vq {
                    }
                    [
                        position = 7648, 9040
                    ]

                    component gen_z_domain_transfer "Hilbert Transform1" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 6992, 9016
                    ]

                    component gen_probe Id {
                    }
                    [
                        position = 8168, 8856
                    ]

                    component gen_probe Iq {
                    }
                    [
                        position = 8168, 9056
                    ]

                    component gen_gain Gain28 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7528, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain29 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7520, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain30 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain31 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq1" {
                    }
                    [
                        position = 7408, 8944
                        hide_name = True
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq2" {
                    }
                    [
                        position = 7912, 8936
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8056, 8640
                        hide_name = True
                    ]

                    component gen_gain Gain22 {
                        gain = "1000/S"
                    }
                    [
                        position = 7968, 8432
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        input_terminals = "real ref;int charge;"
                        input_terminals_dimensions = "1;1"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'ref\', True), (\'charge\', True)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = -1;
else out = ref;
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7880, 8432
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8464
                        hide_name = True
                        size = 32, 32
                    ]

                    component src_scada_input charge {
                        execution_rate = "Ts"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 7720, 8464
                    ]

                    component "core/Rate Transition" "Rate Transition9" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8400
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_probe Pref {
                    }
                    [
                        position = 7864, 8296
                    ]

                    component gen_gain Gain23 {
                        gain = "1000"
                    }
                    [
                        position = 7768, 8296
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        execution_rate = "1"
                        global_variables = "int k;real t;"
                        init_fnc = "/*Begin code section*/
k = 0; t = 1;
/*End code section*/"
                        input_terminals = ""
                        input_terminals_dimensions = ""
                        input_terminals_feedthrough = ""
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
Pref = 0.2;

if (k>12) k = 0;
if (t>3) t = 0;
if (k==0) {Pref = 0.7;}
else if (k==1) {Pref = 0.8;}
else if (k==2) {Pref = 0.6;}
else if (k==3) {Pref = 0.5;}
else if (k==4) {Pref = 0.2;}
else if (k==5) {Pref = 0.8;}
else if (k==6) {Pref = 0.7;}
else if(k==7) {Pref = 0.5;}
else if(k==8) {Pref = 0.66;}
else if(k==9) {Pref =0.75;}
else if(k==10) {Pref =0.54;}
else if(k==11) {Pref =0.30;}
else if(k==12) {Pref =0.45;}

if (t>=3) k+=1;
t+=1;
/*End code section*/"
                        output_terminals = "real Pref;"
                        output_terminals_dimensions = "1"
                        output_terminals_feedthrough = "False"
                        output_terminals_show_labels = "True"
                    }
                    [
                        position = 7608, 8400
                        size = 72, 88
                    ]

                    component gen_gain Gain32 {
                        gain = "1/S"
                    }
                    [
                        position = 7760, 8560
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "2*np.pi*60"
                    }
                    [
                        position = 6992, 8680
                        hide_name = True
                    ]

                    port En {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6768, 8512
                        scale = -1, 1
                    ]

                    port ma {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6800, 8336
                        scale = -1, 1
                    ]

                    port mb {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6760, 8408
                        scale = -1, 1
                    ]

                    port PREF {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7688, 8560
                    ]

                    tag Goto60 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8848
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From54 {
                        value = "V"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6832, 8848
                        hide_name = True
                    ]

                    tag Goto61 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8896
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From55 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8920
                        hide_name = True
                    ]

                    tag From56 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8952
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7264, 8688
                        scale = -1, 1
                    ]

                    tag From57 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8992
                        hide_name = True
                    ]

                    tag Goto64 {
                        value = "Vd"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7632, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto65 {
                        value = "Vq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7624, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto66 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 8968
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From60 {
                        value = "I"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6824, 8968
                        hide_name = True
                    ]

                    tag Goto67 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 9016
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From61 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8904
                        hide_name = True
                    ]

                    tag From62 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8936
                        hide_name = True
                    ]

                    tag Goto68 {
                        value = "Id"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto69 {
                        value = "Iq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto57 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7136, 8680
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From65 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8672
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag From66 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8968
                        hide_name = True
                    ]

                    tag Goto55 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7848, 8560
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto56 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8192, 8640
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction276 sp
                    [
                        position = 6904, 8352
                    ]

                    junction Junction386 sp
                    [
                        position = 6912, 8848
                    ]

                    junction Junction392 sp
                    [
                        position = 6904, 8968
                    ]

                    junction Junction398 sp
                    [
                        position = 7568, 8920
                    ]

                    junction Junction399 sp
                    [
                        position = 7560, 8984
                    ]

                    junction Junction400 sp
                    [
                        position = 8064, 8920
                    ]

                    junction Junction401 sp
                    [
                        position = 8072, 8984
                    ]

                    junction Junction403 sp
                    [
                        position = 7696, 8400
                    ]

                    connect En Constant2.out as Connection1061
                    connect ma Junction276 as Connection1064
                    connect Junction276 "Bus Split1.out" as Connection1065
                    connect Gain20.in Junction276 as Connection1066
                    connect Gain20.out mb as Connection1067
                    connect "Bus Split1.in" "Bus Join1.out" as Connection4453
                    connect From54 Junction386 as Connection4478
                    connect Junction386 Goto60 as Connection4479
                    connect "Hilbert Transform.in" Junction386 as Connection4480
                    connect "Hilbert Transform.out" Goto61 as Connection4481
                    connect "C function4.out" Goto21 as Connection1023
                    connect Constant3.out "C function4.pi" as Connection1024
                    [
                        breakpoints = 7520, 8736; 7520, 8688
                    ]
                    connect Constant4.out "C function4.Ts" as Connection1025
                    connect From60 Junction392 as Connection4503
                    connect Junction392 Goto66 as Connection4504
                    connect "Hilbert Transform1.in" Junction392 as Connection4505
                    connect "Hilbert Transform1.out" Goto67 as Connection4506
                    connect Gain28.out Junction398 as Connection4539
                    connect Junction398 Goto64 as Connection4540
                    connect Vd.in Junction398 as Connection4541
                    connect Gain29.out Junction399 as Connection4543
                    connect Junction399 Goto65 as Connection4544
                    connect Vq.in Junction399 as Connection4545
                    connect Gain30.out Junction400 as Connection4548
                    connect Junction400 Goto68 as Connection4549
                    connect Id.in Junction400 as Connection4550
                    connect Gain31.out Junction401 as Connection4551
                    connect Junction401 Goto69 as Connection4552
                    connect Iq.in Junction401 as Connection4553
                    connect "Bus Join1.in" "Outer Voltage Loop + Inner Current Loop.ma" as Connection4554
                    [
                        breakpoints = 7104, 8304
                    ]
                    connect "Outer Voltage Loop + Inner Current Loop.mb" "Bus Join1.in1" as Connection4555
                    [
                        breakpoints = 7120, 8368
                    ]
                    connect From55 "alpha beta to dq1.alpha" as Connection4561
                    connect From56 "alpha beta to dq1.beta" as Connection4562
                    connect From57 "alpha beta to dq1.wt" as Connection4563
                    connect "alpha beta to dq1.d" Gain28.in as Connection4564
                    connect "alpha beta to dq1.q" Gain29.in as Connection4565
                    connect "alpha beta to dq2.d" Gain30.in as Connection4566
                    connect "alpha beta to dq2.q" Gain31.in as Connection4567
                    connect From61 "alpha beta to dq2.alpha" as Connection4568
                    connect From62 "alpha beta to dq2.beta" as Connection4569
                    connect From66 "alpha beta to dq2.wt" as Connection4570
                    connect From65 "C function4.in" as Connection4575
                    connect Constant5.out Goto56 as Connection4577
                    connect charge.out "Rate Transition8.in" as Connection4421
                    connect "Rate Transition9.out" "C function1.ref" as Connection4425
                    connect Pref.in Gain23.out as Connection4436
                    connect "Rate Transition8.out" "C function1.charge" as Connection4580
                    [
                        breakpoints = 7840, 8464
                    ]
                    connect PREF Gain32.in as Connection4585
                    connect "Rate Transition9.in" Junction403 as Connection4581
                    connect Gain32.out Goto55 as Connection4586
                    connect Junction403 Gain23.in as Connection4582
                    [
                        breakpoints = 7696, 8400
                    ]
                    connect "C function3.Pref" Junction403 as Connection4583
                    connect Constant6.out Goto57 as Connection4587
                    connect Gain22.in "C function1.out" as Connection4584
                    [
                        breakpoints = 7928, 8432
                    ]
                }
                [
                    position = 7408, 7760
                    size = 88, 96
                ]

                component pas_inductor La {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7848
                    rotation = down
                ]

                component pas_inductor Loa {
                    inductance = "L_o"
                }
                [
                    position = 8392, 7848
                    rotation = down
                ]

                component "core/Voltage Measurement" E {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8024, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" I {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7848
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Cs {
                    capacitance = "C_s"
                }
                [
                    position = 8104, 8096
                    rotation = right
                ]

                component gen_probe S {
                }
                [
                    position = 8144, 7656
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Q {
                }
                [
                    position = 8144, 7592
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 8144, 7720
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe P {
                }
                [
                    position = 8144, 7528
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem Power_Meas {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8232
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "S"
                    }
                    [
                        position = 7952, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component Subsystem Power_Meas_DQpu {
                        layout = dynamic
                        component gen_c_function S_and_pf {
                            init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                            input_terminals = "real P;inherit Q;"
                            input_terminals_dimensions = "inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = "False;False;"
                            output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                            output_terminals = "inherit S;inherit pf;"
                            output_terminals_dimensions = "inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = "False;False;"
                        }
                        [
                            position = 8392, 8192
                            size = 48, 48
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 8024, 8232
                            hide_name = True
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 8024, 8320
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_Q {
                            a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8272
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8024, 8064
                            hide_name = True
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8128, 8112
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_P {
                            a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8024, 8152
                            hide_name = True
                        ]

                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8128, 8272
                            hide_name = True
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8056
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8144
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8240
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8328
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8112
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8272
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8144
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8240
                        ]

                        junction Junction1 sp
                        [
                            position = 7920, 8240
                        ]

                        junction Junction2 sp
                        [
                            position = 7928, 8328
                        ]

                        junction Junction3 sp
                        [
                            position = 7944, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 7960, 8056
                        ]

                        junction Junction5 sp
                        [
                            position = 8264, 8112
                        ]

                        junction Junction6 sp
                        [
                            position = 8264, 8272
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                        [
                            position = 8000, 7976
                        ]

                        connect Junction1 Id as Connection49
                        connect Junction1 Product4.in1 as Connection24
                        connect Junction2 Iq as Connection52
                        connect Junction2 Product3.in1 as Connection27
                        connect Junction3 Product2.in as Connection32
                        connect Junction3 Vq as Connection53
                        connect Junction4 Product1.in as Connection35
                        connect Junction4 Vd as Connection50
                        connect Junction5 LPF_P.out as Connection44
                        connect Junction5 P as Connection55
                        connect Junction6 LPF_Q.out as Connection47
                        connect Junction6 Q as Connection56
                        connect LPF_P.in Sum1.out as Connection39
                        connect LPF_Q.in Sum2.out as Connection40
                        connect Product1.in1 Junction1 as Connection25
                        connect Product2.in1 Junction2 as Connection28
                        connect Product3.in Junction4 as Connection36
                        connect Product4.in Junction3 as Connection33
                        connect S_and_pf.P Junction5 as Connection45
                        connect S_and_pf.Q Junction6 as Connection48
                        connect S_and_pf.S S as Connection51
                        connect S_and_pf.pf pf as Connection54
                        connect Sum1.in Product1.out as Connection29
                        connect Sum1.in1 Product2.out as Connection30
                        connect Sum2.in1 Product3.out as Connection38
                        connect Sum2.in Product4.out as Connection37

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                            fc_P {
                                label = "Active power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            fc_Q {
                                label = "Reactive power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                            
                            ENDCODE
                        }
                    }
                    [
                        position = 7864, 8160
                        size = 72, 128
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8048
                        rotation = right
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8048
                        rotation = right
                    ]

                    port Id {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8248
                        rotation = left
                    ]

                    port Iq {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8248
                        rotation = left
                    ]

                    port P {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8000
                        rotation = left
                    ]

                    port Q {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8000
                        rotation = left
                    ]

                    port S {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                        rotation = right
                    ]

                    port pf {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7992, 8288
                        rotation = right
                    ]

                    connect Gain4.out P as Connection10
                    connect Gain5.in Power_Meas_DQpu.Q as Connection21
                    connect Gain5.out Q as Connection11
                    connect Gain6.in Power_Meas_DQpu.S as Connection16
                    connect Gain6.out S as Connection13
                    connect Id Power_Meas_DQpu.Id as Connection14
                    connect Iq Power_Meas_DQpu.Iq as Connection17
                    connect Vd Power_Meas_DQpu.Vd as Connection15
                    connect Vq Power_Meas_DQpu.Vq as Connection18
                    connect pf Power_Meas_DQpu.pf as Connection19
                    connect Gain4.in Power_Meas_DQpu.P as Connection25
                    [
                        breakpoints = 7920, 8128
                    ]
                }
                [
                    position = 7952, 7624
                    size = 96, 232
                ]

                component "core/Single Phase Inverter" "Single Phase Inverter1" {
                    ctrl_src = "Internal modulator"
                    fvd_def_method = "LUT"
                    ref_sig_min_max = "[-1, 1]"
                }
                [
                    position = 7544, 8000
                    size = 127, 256
                ]

                component pas_resistor Ra {
                    resistance = "R_i"
                }
                [
                    position = 7728, 7848
                    rotation = down
                ]

                component pas_resistor Rs {
                    resistance = "R_s"
                }
                [
                    position = 8104, 8000
                    rotation = right
                    scale = -1, 1
                ]

                component pas_resistor Roa {
                    resistance = "R_o"
                }
                [
                    position = 8280, 7848
                    rotation = down
                ]

                component "core/Voltage RMS" Vrms {
                    frequency = "60"
                    op_mode = "Fixed frequency"
                }
                [
                    position = 8192, 8008
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VDC {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7344, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_z_domain_transfer LPF_dc {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 7248, 8000
                    scale = -1, 1
                ]

                component pas_inductor Lb {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8136
                    rotation = down
                ]

                component pas_resistor Rb {
                    resistance = "R_i"
                }
                [
                    position = 7728, 8136
                    rotation = down
                ]

                component pas_inductor Lob {
                    inductance = "L_o"
                }
                [
                    position = 8400, 8136
                    rotation = down
                ]

                component pas_resistor Rob {
                    resistance = "R_o"
                }
                [
                    position = 8288, 8136
                    rotation = down
                ]

                component pas_capacitor C {
                    capacitance = "2000e-6"
                }
                [
                    position = 7416, 8000
                    rotation = right
                ]

                component gen_probe Pref_probe {
                }
                [
                    position = 7376, 7600
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7904, 8000
                    scale = -1, 1
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7896, 7928
                    scale = -1, 1
                    size = 88, 48
                ]

                port B {
                    label = "B"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8624, 8136
                    scale = -1, 1
                ]

                port A {
                    label = "A"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8624, 7848
                    scale = -1, 1
                ]

                port + {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7904
                ]

                port - {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8096
                ]

                port Pref {
                    position = top:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7264, 7760
                ]

                tag Goto35 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7776, 7928
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto41 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7720, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto49 {
                    value = "Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7568
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto50 {
                    value = "P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7504
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto51 {
                    value = "pf"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7696
                    hide_name = True
                    size = 0, 0
                ]

                tag From31 {
                    value = "Vq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto52 {
                    value = "S"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7632
                    hide_name = True
                    size = 0, 0
                ]

                tag From34 {
                    value = "Id"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Vd"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7528
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Iq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7720
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto53 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7144, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                junction Junction397 pe
                [
                    position = 7344, 8096
                ]

                junction Junction188 sp
                [
                    position = 8032, 7528
                ]

                junction Junction189 sp
                [
                    position = 8032, 7592
                ]

                junction Junction190 sp
                [
                    position = 8032, 7656
                ]

                junction Junction191 sp
                [
                    position = 8032, 7720
                ]

                junction Junction385 pe
                [
                    position = 8104, 7920
                ]

                junction Junction387 pe
                [
                    position = 8104, 7848
                ]

                junction Junction388 pe
                [
                    position = 8104, 7920
                ]

                junction Junction393 pe
                [
                    position = 7344, 7904
                ]

                junction Junction395 pe
                [
                    position = 8024, 8136
                ]

                junction Junction396 pe
                [
                    position = 8192, 8136
                ]

                junction Junction398 pe
                [
                    position = 7416, 7904
                ]

                junction Junction399 pe
                [
                    position = 7416, 8096
                ]

                junction Junction401 sp
                [
                    position = 7792, 8000
                ]

                junction Junction403 sp
                [
                    position = 7304, 7760
                ]

                connect - Junction397 as Connection4543
                connect Junction397 VDC.n_node as Connection4544
                [
                    breakpoints = 7344, 8096; 7344, 8096
                ]
                connect La.p_node I.p_node as Connection378
                connect From31 Power_Meas.Vq as Connection403
                connect From32 Power_Meas.Vd as Connection402
                connect From34 Power_Meas.Id as Connection404
                connect Goto49 Junction189 as Connection544
                connect Goto52 Junction190 as Connection547
                connect Goto51 Junction191 as Connection550
                connect Junction188 Power_Meas.P as Connection540
                connect Junction189 Power_Meas.Q as Connection543
                connect Junction190 Power_Meas.S as Connection546
                connect Junction191 Power_Meas.pf as Connection549
                connect P.in Junction188 as Connection539
                connect Power_Meas.Iq From35 as Connection405
                connect Q.in Junction189 as Connection542
                connect S.in Junction190 as Connection545
                connect pf.in Junction191 as Connection548
                connect Ra.p_node La.n_node as Connection4453
                connect Ra.n_node "Single Phase Inverter1.a_in" as Connection4454
                connect Rs.p_node Junction385 as Connection4472
                connect E.p_node Junction385 as Connection4474
                connect Rs.n_node Cs.p_node as Connection4475
                connect I.n_node Junction387 as Connection4486
                connect Roa.n_node Junction387 as Connection4488
                connect Roa.p_node Loa.n_node as Connection4489
                connect Junction387 Junction388 as Connection4498
                [
                    breakpoints = 8104, 7848; 8104, 7848
                ]
                connect Junction388 Junction385 as Connection4499
                [
                    breakpoints = 8104, 7920
                ]
                connect Vrms.p_node Junction388 as Connection4500
                connect Junction393 + as Connection4521
                [
                    breakpoints = 7344, 7904
                ]
                connect VDC.p_node Junction393 as Connection4522
                connect VDC.out LPF_dc.in as Connection4526
                connect "Single Phase Inverter1.b_in" Rb.n_node as Connection4529
                [
                    breakpoints = 7624, 8136; 7680, 8136
                ]
                connect Rb.p_node Lb.n_node as Connection4530
                connect E.n_node Junction395 as Connection4531
                connect Junction395 Cs.n_node as Connection4532
                [
                    breakpoints = 8024, 8136
                ]
                connect Lb.p_node Junction395 as Connection4533
                connect Rob.p_node Lob.n_node as Connection4534
                connect Vrms.n_node Junction396 as Connection4536
                connect Junction396 Cs.n_node as Connection4537
                [
                    breakpoints = 8192, 8136
                ]
                connect Rob.n_node Junction396 as Connection4538
                connect Lob.p_node B as Connection4539
                connect "Single Phase Inverter1.pos_out" Junction398 as Connection4546
                connect Junction398 Junction393 as Connection4547
                [
                    breakpoints = 7376, 7904; 7376, 7904; 7376, 7904
                ]
                connect C.p_node Junction398 as Connection4548
                connect "Single Phase Inverter1.neg_out" Junction399 as Connection4549
                connect Junction399 Junction397 as Connection4550
                connect C.n_node Junction399 as Connection4551
                connect Junction401 V.in as Connection4596
                [
                    breakpoints = 7792, 8000
                ]
                connect Goto41 Junction401 as Connection4597
                connect Controller.mb "Single Phase Inverter1.InB" as Connection4599
                connect Controller.ma "Single Phase Inverter1.InA" as Connection4600
                connect Controller.En "Single Phase Inverter1.En" as Connection4601
                connect Goto53 LPF_dc.out as Connection4602
                connect Pref Junction403 as Connection4607
                connect Junction403 Controller.PREF as Connection4608
                connect Pref_probe.in Junction403 as Connection4609
                connect E.out BPF.in as Connection4610
                connect BPF.out Junction401 as Connection4611
                connect Goto35 BPF1.out as Connection4612
                connect BPF1.in I.out as Connection4613
                connect Loa.p_node A as Connection4614
                connect Junction188 Goto50 as Connection4615
                [
                    breakpoints = 8032, 7528; 8032, 7504
                ]

                C_s = "40e-6"
                Imax = "1"
                Imin = "-1"
                Ki_I = "4*20"
                Kp_I = "0.076*20"
                L_i = "0.0133/2"
                L_o = "38e-6/2"
                R_i = "1e-3/2"
                R_o = "2e-3/2"
                R_s = "0.3244"
                S = "50e3"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A lead acid battery interfaced with a three-phase inverter and LCL filter</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "10e3"
                        unit = "VA"
                        group = "1. Single-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "1. Single-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Single-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_inv"
                        unit = "s"
                        group = "1. Single-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "0.0165"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "2.5872"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "5e-6"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "1e-4"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    Kp_I {
                        label = "Current Regulator Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.6079*30"
                        group = "3. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Current Regulator Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "4*30"
                        group = "3. Cascaded Controller"
                    }

                    Imax {
                        label = "Current Regulator Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1.5"
                        group = "3. Cascaded Controller"
                    }

                    Imin {
                        label = "Current Regulator Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1.5"
                        group = "3. Cascaded Controller"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE

                    CODE define_icon
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE
                }
            }
            [
                position = 8392, 8152
                size = 64, 80
            ]

            component gen_sum Sum1 {
            }
            [
                position = 7984, 8280
                rotation = left
                hide_name = True
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_inv"
            }
            [
                position = 8152, 8080
                hide_name = True
                size = 32, 32
            ]

            component Subsystem Measurement {
                layout = dynamic
                component "core/Voltage Measurement" Va {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8240, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts_m"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8192, 8088
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_probe P {
                }
                [
                    position = 8888, 7856
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8296, 8000
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 8344, 8152
                    size = 88, 48
                ]

                component gen_z_domain_transfer "Hilbert Transform" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8112, 7832
                ]

                component gen_z_domain_transfer "Hilbert Transform1" {
                    a_coeff = "[1/(2*np.pi*60),1]"
                    b_coeff = "[-1/(2*np.pi*60),1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8104, 7952
                ]

                component gen_product Product1 {
                }
                [
                    position = 8512, 7808
                    hide_name = True
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8616, 7856
                    hide_name = True
                ]

                component gen_z_domain_transfer LPF_P {
                    a_coeff = "[1.0/(2*np.pi),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8768, 7856
                ]

                component gen_product Product2 {
                }
                [
                    position = 8512, 7896
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "0.5"
                }
                [
                    position = 8696, 7856
                    hide_name = True
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8216
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8216
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8096, 8088
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8088
                    rotation = down
                ]

                port Pm {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8856, 7784
                ]

                tag From31 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7888
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7840
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7928
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto60 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7784
                    hide_name = True
                    size = 60, 20
                ]

                tag From54 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7944, 7784
                    hide_name = True
                ]

                tag Goto61 {
                    value = "Vbeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 7832
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto66 {
                    value = "Ialpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7904
                    hide_name = True
                    size = 60, 20
                ]

                tag From60 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7936, 7904
                    hide_name = True
                ]

                tag Goto67 {
                    value = "Ibeta"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8224, 7952
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto68 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8472, 8152
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto69 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8440, 8000
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Valpha"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 7800
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction647 pe
                [
                    position = 8240, 8216
                ]

                junction Junction651 pe
                [
                    position = 8240, 8088
                ]

                junction Junction386 sp
                [
                    position = 8024, 7784
                ]

                junction Junction392 sp
                [
                    position = 8016, 7904
                ]

                junction Junction652 sp
                [
                    position = 8824, 7856
                ]

                connect b Junction647 as Connection4978
                connect Junction647 Va.n_node as Connection4979
                [
                    breakpoints = 8240, 8216
                ]
                connect a Junction651 as Connection4996
                connect Junction651 Va.p_node as Connection4997
                [
                    breakpoints = 8240, 8088
                ]
                connect Ia.p_node Junction651 as Connection4998
                connect Ia.n_node A as Connection5000
                [
                    breakpoints = 8144, 8088
                ]
                connect B Junction647 as Connection5001
                [
                    breakpoints = 8144, 8216
                ]
                connect Goto69 BPF.out as Connection5041
                connect BPF.in Ia.out as Connection5042
                connect Goto68 BPF1.out as Connection5043
                connect BPF1.in Va.out as Connection5044
                connect From54 Junction386 as Connection4478
                connect Junction386 Goto60 as Connection4479
                connect "Hilbert Transform.in" Junction386 as Connection4480
                connect "Hilbert Transform.out" Goto61 as Connection4481
                connect From60 Junction392 as Connection4503
                connect Junction392 Goto66 as Connection4504
                connect "Hilbert Transform1.in" Junction392 as Connection4505
                connect "Hilbert Transform1.out" Goto67 as Connection4506
                connect Sum1.in Product1.out as Connection29
                connect Sum1.in1 Product2.out as Connection30
                connect From31 Product2.in as Connection5032
                connect From32 Product1.in as Connection5033
                connect From34 Product1.in1 as Connection5034
                connect From35 Product2.in1 as Connection5035
                connect P.in Junction652 as Connection5036
                connect Junction652 Pm as Connection5037
                [
                    breakpoints = 8816, 7856; 8816, 7856; 8816, 7856; 8816, 7832
                ]
                connect LPF_P.out Junction652 as Connection5038
                connect LPF_P.in Gain1.out as Connection5039
                connect Gain1.in Sum1.out as Connection5040
            }
            [
                position = 8424, 8320
                size = 48, 72
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8712, 8200
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8712, 8128
                rotation = down
            ]

            junction Junction3 sp
            [
                position = 8136, 8488
            ]

            junction Junction4 sp
            [
                position = 8152, 8424
            ]

            junction Junction5 pe
            [
                position = 8488, 8136
            ]

            junction Junction6 pe
            [
                position = 8512, 8168
            ]

            connect "Core coupling.a" a as Connection18
            connect "Core coupling.b" b as Connection19
            connect Vs1.p_node Inverter.+ as Connection4992
            connect Vs1.n_node Inverter.- as Connection4993
            connect Pref_reg.in Junction3 as Connection4995
            connect Junction3 Modbus.Pref_reg as Connection4996
            connect Sum1.in Junction3 as Connection4997
            connect Pref_ed.in Junction4 as Connection4998
            connect Junction4 Modbus.Pref_ed as Connection4999
            connect Sum1.in1 Junction4 as Connection5000
            connect Sum1.out "Rate Transition1.in" as Connection5002
            connect "Rate Transition1.out" Inverter.Pref as Connection5003
            connect Load.A Measurement.A as Connection5006
            connect Load.B Measurement.B as Connection5007
            connect Inverter.A Junction5 as Connection5008
            connect Junction5 "Core coupling.A" as Connection5009
            [
                breakpoints = 8496, 8136; 8496, 8136; 8496, 8136
            ]
            connect Measurement.a Junction5 as Connection5010
            connect "Core coupling.B" Junction6 as Connection5011
            [
                breakpoints = 8528, 8168; 8528, 8168; 8528, 8168
            ]
            connect Junction6 Inverter.B as Connection5012
            connect Measurement.b Junction6 as Connection5013
            connect Measurement.Pm Modbus.Pm as Connection5014

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6304, 7560
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem ESS {
            layout = dynamic
            component Subsystem Modbus {
                layout = dynamic
                component gen_terminator Termination1 {
                }
                [
                    position = 8400, 7920
                ]

                component src_constant C_u12 {
                    execution_rate = "Ts"
                }
                [
                    position = 7968, 7800
                ]

                component src_constant C_u13 {
                    execution_rate = "Ts"
                    value = "50"
                }
                [
                    position = 7920, 7872
                ]

                component src_constant C_u11 {
                    execution_rate = "Ts"
                }
                [
                    position = 8008, 7720
                ]

                component "core/ModBus Device" "ModBus Device (config)" {
                    configuration = "config"
                    execution_rate = "Ts"
                }
                [
                    position = 8192, 7992
                    size = 184, 184
                ]

                component gen_probe RegD_probe {
                }
                [
                    position = 7840, 8112
                ]

                component "core/Rate Transition" "Rate Transition2" {
                    execution_rate = "Ts"
                }
                [
                    position = 7712, 8232
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe Time_probe {
                }
                [
                    position = 7840, 8280
                ]

                component "core/Rate Transition" "Rate Transition3" {
                    execution_rate = "Ts"
                }
                [
                    position = 7712, 8400
                    hide_name = True
                    size = 32, 32
                ]

                component gen_bus_join "Bus Join1" {
                }
                [
                    position = 7952, 8240
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8384, 8064
                ]

                port RegD {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7632, 8232
                    rotation = down
                    scale = -1, 1
                ]

                port Time {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7632, 8400
                    rotation = down
                    scale = -1, 1
                ]

                port Pref_ed {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8512, 8000
                ]

                port Pref_reg {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8528, 8072
                ]

                junction Junction3 sp
                [
                    position = 7752, 8232
                ]

                junction Junction4 sp
                [
                    position = 7744, 8400
                ]

                connect "ModBus Device (config).coil_in" C_u11.out as Connection139
                connect C_u12.out "ModBus Device (config).discrete_in" as Connection121
                [
                    breakpoints = 8000, 7968; 8080, 7968
                ]
                connect Termination1.in "ModBus Device (config).coil_out" as Connection127
                connect C_u13.out "ModBus Device (config).holding_in" as Connection120
                [
                    breakpoints = 7952, 8016; 8080, 8016
                ]
                connect RegD "Rate Transition2.in" as Connection188
                connect Time "Rate Transition3.in" as Connection200
                connect "ModBus Device (config).reg_in" "Bus Join1.out" as Connection208
                [
                    breakpoints = 8024, 8064; 8024, 8240
                ]
                connect RegD_probe.in Junction3 as Connection211
                connect Junction3 "Rate Transition2.out" as Connection212
                [
                    breakpoints = 7752, 8232
                ]
                connect "Bus Join1.in" Junction3 as Connection213
                connect "Rate Transition3.out" Junction4 as Connection215
                connect Junction4 Time_probe.in as Connection216
                [
                    breakpoints = 7744, 8400; 7744, 8400
                ]
                connect "Bus Join1.in1" Junction4 as Connection217
                [
                    breakpoints = 7912, 8400; 7744, 8400
                ]
                connect "Bus Split1.out" Pref_ed as Connection218
                connect "Bus Split1.in" "ModBus Device (config).holding_out" as Connection229
                connect Pref_reg "Bus Split1.out1" as Connection230
            }
            [
                position = 8256, 8456
                rotation = down
                scale = 1, -1
                size = 120, 112
            ]

            component gen_probe Pref_ed {
            }
            [
                position = 8056, 8424
                scale = -1, 1
            ]

            component gen_c_function "C function3" {
                execution_rate = "1"
                global_variables = "int t;"
                init_fnc = "/*Begin code section*/
t = 0; time = 1;reg = RegD;
/*End code section*/"
                input_terminals = "real RegD;"
                input_terminals_dimensions = "inherit"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "True"
                output_fnc = "/*Begin code section*/
if (t>3) {t = 0; time+=1;reg = RegD;}
t+=1;
/*End code section*/"
                output_terminals = "real reg;real time;"
                output_terminals_dimensions = "1;1"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "True;True"
            }
            [
                position = 8464, 8440
                scale = -1, 1
                size = 64, 64
            ]

            component src_voltage Vs1 {
                init_const_value = "500"
            }
            [
                position = 8184, 8176
                rotation = right
            ]

            component Subsystem "Core coupling" {
                layout = dynamic
                component "core/Single Phase Core Coupling" "Core Coupling 1" {
                }
                [
                    position = 8184, 8168
                    size = 12, 256
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8264
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8264
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8088, 8072
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8072
                    rotation = down
                ]

                connect A "Core Coupling 1.a_in" as Connection1
                connect B "Core Coupling 1.b_in" as Connection2
                connect "Core Coupling 1.a_out" a as Connection3
                connect b "Core Coupling 1.b_out" as Connection4
            }
            [
                position = 8544, 8176
                size = 48, 80
            ]

            component gen_probe Pref_reg {
            }
            [
                position = 8064, 8488
                scale = -1, 1
            ]

            component Subsystem Inverter {
                layout = dynamic
                component gen_probe V {
                }
                [
                    position = 7848, 8032
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                    }
                    [
                        position = 7064, 8360
                        scale = -1, 1
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8040
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[1]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7960
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 7920, 8600
                                scale = -1, 1
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "10"
                            }
                            [
                                position = 7840, 8600
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc1 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8128, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc2 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8136, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Iq_meas {
                                label = "Iq_meas"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Iq_ref {
                                label = "Iq_ref"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Id_ref {
                                label = "Id_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8032
                                rotation = down
                            ]

                            port Id_meas {
                                label = "Id_meas"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8128
                                rotation = down
                            ]

                            tag From23 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Vd"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Vq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8016, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8128
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8040
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Iq_meas Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Id_ref as Connection297
                            connect Sum9.in Iq_ref as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Id_meas Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8040; 8240, 8040
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                            connect From27 LPF_dc.in as Connection356
                            connect LPF_dc.out Limit3.in as Connection357
                            connect Limit3.out Gain5.in as Connection358
                            connect LPF_dc1.in From26 as Connection359
                            connect LPF_dc1.out Sum6.in as Connection360
                            connect LPF_dc2.in From24 as Connection361
                            connect Sum5.in LPF_dc2.out as Connection362
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Id_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Iq_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7976, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component gen_d_q2alpha_beta "dq to alpha beta" {
                        }
                        [
                            position = 7912, 8584
                            scale = -1, 1
                        ]

                        component gen_probe ud {
                        }
                        [
                            position = 8152, 8448
                        ]

                        component gen_probe uq {
                        }
                        [
                            position = 8144, 8744
                        ]

                        component Subsystem "outer power loop1" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8784, 8144
                                rotation = down
                            ]

                            port Id_r {
                                label = "Id_r"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8168
                                rotation = down
                            ]

                            port Iq_r {
                                label = "Iq_r"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8080
                                rotation = down
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect Ed Junction142 as Connection390
                            [
                                breakpoints = 8720, 8072
                            ]
                            connect P_ref Junction139 as Connection391
                            [
                                breakpoints = 8752, 8144; 8600, 8144
                            ]
                            connect Id_r Product2.out as Connection392
                            connect Iq_r Product1.out as Connection393
                        }
                        [
                            position = 8496, 8568
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8656, 8632
                            size = 48, 56
                        ]

                        component gen_probe Edq_sq {
                        }
                        [
                            position = 8656, 8712
                        ]

                        port ma {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port mb {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From29 {
                            value = "Id"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8736
                            hide_name = True
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Iq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8616
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From20 {
                            value = "Vd"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8568
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Vq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8816, 8600
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8512
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8728, 8544
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        junction Junction23 sp
                        [
                            position = 8352, 8664
                        ]

                        junction Junction17 sp
                        [
                            position = 8032, 8560
                        ]

                        junction Junction18 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction19 sp
                        [
                            position = 8112, 8520
                        ]

                        junction Junction20 sp
                        [
                            position = 8112, 8656
                        ]

                        junction Junction13 sp
                        [
                            position = 8728, 8568
                        ]

                        junction Junction14 sp
                        [
                            position = 8752, 8600
                        ]

                        junction Junction21 sp
                        [
                            position = 8608, 8632
                        ]

                        junction Junction22 sp
                        [
                            position = 8296, 8520
                        ]

                        connect From29 "inner current control loop.Id_meas" as Connection253
                        connect From30 "inner current control loop.Iq_meas" as Connection257
                        connect "inner current control loop.Iq_ref" Junction23 as Connection505
                        [
                            breakpoints = 8240, 8664
                        ]
                        connect Junction23 Iq_ref.in as Connection506
                        [
                            breakpoints = 8352, 8664; 8352, 8664; 8352, 8664
                        ]
                        connect "outer power loop1.Iq_r" Junction23 as Connection507
                        connect Ud.in Junction17 as Connection449
                        connect Junction17 Gain5.out as Connection450
                        connect "dq to alpha beta.d" Junction17 as Connection451
                        connect Uq.in Junction18 as Connection452
                        connect Junction18 Gain6.out as Connection453
                        [
                            breakpoints = 8032, 8624
                        ]
                        connect "dq to alpha beta.q" Junction18 as Connection454
                        connect From1 "dq to alpha beta.wt" as Connection455
                        connect ma "dq to alpha beta.alpha" as Connection456
                        connect mb "dq to alpha beta.beta" as Connection457
                        connect Gain5.in Junction19 as Connection458
                        connect Junction19 "inner current control loop.Ud1" as Connection459
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect ud.in Junction19 as Connection460
                        connect Gain6.in Junction20 as Connection461
                        connect Junction20 "inner current control loop.Uq1" as Connection462
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect uq.in Junction20 as Connection463
                        connect From42 "outer power loop1.P_ref" as Connection431
                        connect From43 "outer power loop1.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop1.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop1.Eq" as Connection437
                        [
                            breakpoints = 8752, 8600; 8696, 8600
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                        connect squared_Vt2.Et_p2 Junction21 as Connection464
                        connect Junction21 "outer power loop1.Et_p2" as Connection465
                        connect Edq_sq.in Junction21 as Connection466
                        connect Id_ref.in Junction22 as Connection499
                        [
                            breakpoints = 8296, 8416; 8296, 8504
                        ]
                        connect Junction22 "inner current control loop.Id_ref" as Connection500
                        [
                            breakpoints = 8296, 8520; 8296, 8520; 8288, 8520; 8296, 8520
                        ]
                        connect "outer power loop1.Id_r" Junction22 as Connection501
                    }
                    [
                        position = 7224, 8360
                        size = 128, 152
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 6880, 8512
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_split "Bus Split1" {
                    }
                    [
                        position = 6944, 8360
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain20 {
                        gain = "-1"
                    }
                    [
                        position = 6832, 8408
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_z_domain_transfer "Hilbert Transform" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7000, 8896
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts"
                        input_terminals = "real in;inherit pi;inherit Ts;"
                        input_terminals_dimensions = "inherit;inherit;inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7384, 8688
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 7608, 8736
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 7488, 8720
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe Vd {
                    }
                    [
                        position = 7656, 8856
                    ]

                    component gen_probe Vq {
                    }
                    [
                        position = 7648, 9040
                    ]

                    component gen_z_domain_transfer "Hilbert Transform1" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 6992, 9016
                    ]

                    component gen_probe Id {
                    }
                    [
                        position = 8168, 8856
                    ]

                    component gen_probe Iq {
                    }
                    [
                        position = 8168, 9056
                    ]

                    component gen_gain Gain28 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7528, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain29 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7520, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain30 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8920
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain31 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8016, 8984
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq1" {
                    }
                    [
                        position = 7408, 8944
                        hide_name = True
                    ]

                    component gen_alpha_beta2d_q "alpha beta to dq2" {
                    }
                    [
                        position = 7912, 8936
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8056, 8640
                        hide_name = True
                    ]

                    component gen_gain Gain22 {
                        gain = "1000/S"
                    }
                    [
                        position = 7968, 8432
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        input_terminals = "real ref;int charge;"
                        input_terminals_dimensions = "1;1"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'ref\', True), (\'charge\', True)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = -1;
else out = ref;
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', False)]"
                    }
                    [
                        position = 7880, 8432
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8464
                        hide_name = True
                        size = 32, 32
                    ]

                    component src_scada_input charge {
                        execution_rate = "Ts"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 7720, 8464
                    ]

                    component "core/Rate Transition" "Rate Transition9" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7792, 8400
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_probe Pref {
                    }
                    [
                        position = 7864, 8296
                    ]

                    component gen_gain Gain23 {
                        gain = "1000"
                    }
                    [
                        position = 7768, 8296
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        execution_rate = "1"
                        global_variables = "int k;real t;"
                        init_fnc = "/*Begin code section*/
k = 0; t = 1;
/*End code section*/"
                        input_terminals = ""
                        input_terminals_dimensions = ""
                        input_terminals_feedthrough = ""
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
Pref = 0.2;

if (k>12) k = 0;
if (t>3) t = 0;
if (k==0) {Pref = 0.7;}
else if (k==1) {Pref = 0.8;}
else if (k==2) {Pref = 0.6;}
else if (k==3) {Pref = 0.5;}
else if (k==4) {Pref = 0.2;}
else if (k==5) {Pref = 0.8;}
else if (k==6) {Pref = 0.7;}
else if(k==7) {Pref = 0.5;}
else if(k==8) {Pref = 0.66;}
else if(k==9) {Pref =0.75;}
else if(k==10) {Pref =0.54;}
else if(k==11) {Pref =0.30;}
else if(k==12) {Pref =0.45;}

if (t>=3) k+=1;
t+=1;
/*End code section*/"
                        output_terminals = "real Pref;"
                        output_terminals_dimensions = "1"
                        output_terminals_feedthrough = "False"
                        output_terminals_show_labels = "True"
                    }
                    [
                        position = 7608, 8400
                        size = 72, 88
                    ]

                    component gen_gain Gain32 {
                        gain = "1/S"
                    }
                    [
                        position = 7760, 8560
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "2*np.pi*60"
                    }
                    [
                        position = 6912, 8680
                        hide_name = True
                    ]

                    port En {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6768, 8512
                        scale = -1, 1
                    ]

                    port ma {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6800, 8336
                        scale = -1, 1
                    ]

                    port mb {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6760, 8408
                        scale = -1, 1
                    ]

                    port PREF {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7688, 8560
                    ]

                    tag Goto60 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8848
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From54 {
                        value = "V"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6832, 8848
                        hide_name = True
                    ]

                    tag Goto61 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8896
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From55 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8920
                        hide_name = True
                    ]

                    tag From56 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8952
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7264, 8688
                        scale = -1, 1
                    ]

                    tag From57 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8992
                        hide_name = True
                    ]

                    tag Goto64 {
                        value = "Vd"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7632, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto65 {
                        value = "Vq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7624, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto66 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 8968
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From60 {
                        value = "I"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6824, 8968
                        hide_name = True
                    ]

                    tag Goto67 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7112, 9016
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From61 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8904
                        hide_name = True
                    ]

                    tag From62 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8936
                        hide_name = True
                    ]

                    tag Goto68 {
                        value = "Id"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto69 {
                        value = "Iq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8136, 8984
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto57 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7136, 8680
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From65 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8672
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag From66 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8968
                        hide_name = True
                    ]

                    tag Goto55 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7848, 8560
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto56 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8192, 8640
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction276 sp
                    [
                        position = 6904, 8352
                    ]

                    junction Junction386 sp
                    [
                        position = 6912, 8848
                    ]

                    junction Junction392 sp
                    [
                        position = 6904, 8968
                    ]

                    junction Junction398 sp
                    [
                        position = 7568, 8920
                    ]

                    junction Junction399 sp
                    [
                        position = 7560, 8984
                    ]

                    junction Junction400 sp
                    [
                        position = 8064, 8920
                    ]

                    junction Junction401 sp
                    [
                        position = 8072, 8984
                    ]

                    junction Junction403 sp
                    [
                        position = 7696, 8400
                    ]

                    connect En Constant2.out as Connection1061
                    connect ma Junction276 as Connection1064
                    connect Junction276 "Bus Split1.out" as Connection1065
                    connect Gain20.in Junction276 as Connection1066
                    connect Gain20.out mb as Connection1067
                    connect "Bus Split1.in" "Bus Join1.out" as Connection4453
                    connect From54 Junction386 as Connection4478
                    connect Junction386 Goto60 as Connection4479
                    connect "Hilbert Transform.in" Junction386 as Connection4480
                    connect "Hilbert Transform.out" Goto61 as Connection4481
                    connect "C function4.out" Goto21 as Connection1023
                    connect Constant3.out "C function4.pi" as Connection1024
                    [
                        breakpoints = 7520, 8736; 7520, 8688
                    ]
                    connect Constant4.out "C function4.Ts" as Connection1025
                    connect From60 Junction392 as Connection4503
                    connect Junction392 Goto66 as Connection4504
                    connect "Hilbert Transform1.in" Junction392 as Connection4505
                    connect "Hilbert Transform1.out" Goto67 as Connection4506
                    connect Gain28.out Junction398 as Connection4539
                    connect Junction398 Goto64 as Connection4540
                    connect Vd.in Junction398 as Connection4541
                    connect Gain29.out Junction399 as Connection4543
                    connect Junction399 Goto65 as Connection4544
                    connect Vq.in Junction399 as Connection4545
                    connect Gain30.out Junction400 as Connection4548
                    connect Junction400 Goto68 as Connection4549
                    connect Id.in Junction400 as Connection4550
                    connect Gain31.out Junction401 as Connection4551
                    connect Junction401 Goto69 as Connection4552
                    connect Iq.in Junction401 as Connection4553
                    connect "Bus Join1.in" "Outer Voltage Loop + Inner Current Loop.ma" as Connection4554
                    [
                        breakpoints = 7104, 8304
                    ]
                    connect "Outer Voltage Loop + Inner Current Loop.mb" "Bus Join1.in1" as Connection4555
                    [
                        breakpoints = 7120, 8368
                    ]
                    connect From55 "alpha beta to dq1.alpha" as Connection4561
                    connect From56 "alpha beta to dq1.beta" as Connection4562
                    connect From57 "alpha beta to dq1.wt" as Connection4563
                    connect "alpha beta to dq1.d" Gain28.in as Connection4564
                    connect "alpha beta to dq1.q" Gain29.in as Connection4565
                    connect "alpha beta to dq2.d" Gain30.in as Connection4566
                    connect "alpha beta to dq2.q" Gain31.in as Connection4567
                    connect From61 "alpha beta to dq2.alpha" as Connection4568
                    connect From62 "alpha beta to dq2.beta" as Connection4569
                    connect From66 "alpha beta to dq2.wt" as Connection4570
                    connect From65 "C function4.in" as Connection4575
                    connect Constant5.out Goto56 as Connection4577
                    connect charge.out "Rate Transition8.in" as Connection4421
                    connect "Rate Transition9.out" "C function1.ref" as Connection4425
                    connect Pref.in Gain23.out as Connection4436
                    connect "Rate Transition8.out" "C function1.charge" as Connection4580
                    [
                        breakpoints = 7840, 8464
                    ]
                    connect PREF Gain32.in as Connection4585
                    connect "Rate Transition9.in" Junction403 as Connection4581
                    connect Gain32.out Goto55 as Connection4586
                    connect Junction403 Gain23.in as Connection4582
                    [
                        breakpoints = 7696, 8400
                    ]
                    connect "C function3.Pref" Junction403 as Connection4583
                    connect Gain22.in "C function1.out" as Connection4584
                    [
                        breakpoints = 7928, 8432
                    ]
                    connect Constant6.out Goto57 as Connection4587
                }
                [
                    position = 7408, 7760
                    size = 88, 96
                ]

                component pas_inductor La {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7848
                    rotation = down
                ]

                component pas_inductor Loa {
                    inductance = "L_o"
                }
                [
                    position = 8392, 7848
                    rotation = down
                ]

                component "core/Voltage Measurement" E {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8024, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" I {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7848
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Cs {
                    capacitance = "C_s"
                }
                [
                    position = 8104, 8096
                    rotation = right
                ]

                component gen_probe S {
                }
                [
                    position = 8144, 7656
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Q {
                }
                [
                    position = 8144, 7592
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 8144, 7720
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe P {
                }
                [
                    position = 8144, 7528
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem Power_Meas {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8232
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "S"
                    }
                    [
                        position = 7952, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component Subsystem Power_Meas_DQpu {
                        layout = dynamic
                        component gen_c_function S_and_pf {
                            init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                            input_terminals = "real P;inherit Q;"
                            input_terminals_dimensions = "inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = "False;False;"
                            output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                            output_terminals = "inherit S;inherit pf;"
                            output_terminals_dimensions = "inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = "False;False;"
                        }
                        [
                            position = 8392, 8192
                            size = 48, 48
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 8024, 8232
                            hide_name = True
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 8024, 8320
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_Q {
                            a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8272
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8024, 8064
                            hide_name = True
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8128, 8112
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_P {
                            a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8024, 8152
                            hide_name = True
                        ]

                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8128, 8272
                            hide_name = True
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8056
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8144
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8240
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8328
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8112
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8272
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8144
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8240
                        ]

                        junction Junction1 sp
                        [
                            position = 7920, 8240
                        ]

                        junction Junction2 sp
                        [
                            position = 7928, 8328
                        ]

                        junction Junction3 sp
                        [
                            position = 7944, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 7960, 8056
                        ]

                        junction Junction5 sp
                        [
                            position = 8264, 8112
                        ]

                        junction Junction6 sp
                        [
                            position = 8264, 8272
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                        [
                            position = 8000, 7976
                        ]

                        connect Junction1 Id as Connection49
                        connect Junction1 Product4.in1 as Connection24
                        connect Junction2 Iq as Connection52
                        connect Junction2 Product3.in1 as Connection27
                        connect Junction3 Product2.in as Connection32
                        connect Junction3 Vq as Connection53
                        connect Junction4 Product1.in as Connection35
                        connect Junction4 Vd as Connection50
                        connect Junction5 LPF_P.out as Connection44
                        connect Junction5 P as Connection55
                        connect Junction6 LPF_Q.out as Connection47
                        connect Junction6 Q as Connection56
                        connect LPF_P.in Sum1.out as Connection39
                        connect LPF_Q.in Sum2.out as Connection40
                        connect Product1.in1 Junction1 as Connection25
                        connect Product2.in1 Junction2 as Connection28
                        connect Product3.in Junction4 as Connection36
                        connect Product4.in Junction3 as Connection33
                        connect S_and_pf.P Junction5 as Connection45
                        connect S_and_pf.Q Junction6 as Connection48
                        connect S_and_pf.S S as Connection51
                        connect S_and_pf.pf pf as Connection54
                        connect Sum1.in Product1.out as Connection29
                        connect Sum1.in1 Product2.out as Connection30
                        connect Sum2.in1 Product3.out as Connection38
                        connect Sum2.in Product4.out as Connection37

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                            fc_P {
                                label = "Active power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            fc_Q {
                                label = "Reactive power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                            
                            ENDCODE
                        }
                    }
                    [
                        position = 7864, 8160
                        size = 72, 128
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8048
                        rotation = right
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8048
                        rotation = right
                    ]

                    port Id {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8248
                        rotation = left
                    ]

                    port Iq {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8248
                        rotation = left
                    ]

                    port P {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8000
                        rotation = left
                    ]

                    port Q {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8000
                        rotation = left
                    ]

                    port S {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                        rotation = right
                    ]

                    port pf {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7992, 8288
                        rotation = right
                    ]

                    connect Gain4.out P as Connection10
                    connect Gain5.in Power_Meas_DQpu.Q as Connection21
                    connect Gain5.out Q as Connection11
                    connect Gain6.in Power_Meas_DQpu.S as Connection16
                    connect Gain6.out S as Connection13
                    connect Id Power_Meas_DQpu.Id as Connection14
                    connect Iq Power_Meas_DQpu.Iq as Connection17
                    connect Vd Power_Meas_DQpu.Vd as Connection15
                    connect Vq Power_Meas_DQpu.Vq as Connection18
                    connect pf Power_Meas_DQpu.pf as Connection19
                    connect Gain4.in Power_Meas_DQpu.P as Connection25
                    [
                        breakpoints = 7920, 8128
                    ]
                }
                [
                    position = 7952, 7624
                    size = 96, 232
                ]

                component "core/Single Phase Inverter" "Single Phase Inverter1" {
                    ctrl_src = "Internal modulator"
                    fvd_def_method = "LUT"
                    ref_sig_min_max = "[-1, 1]"
                }
                [
                    position = 7544, 8000
                    size = 127, 256
                ]

                component pas_resistor Ra {
                    resistance = "R_i"
                }
                [
                    position = 7728, 7848
                    rotation = down
                ]

                component pas_resistor Rs {
                    resistance = "R_s"
                }
                [
                    position = 8104, 8000
                    rotation = right
                    scale = -1, 1
                ]

                component pas_resistor Roa {
                    resistance = "R_o"
                }
                [
                    position = 8280, 7848
                    rotation = down
                ]

                component "core/Voltage RMS" Vrms {
                    frequency = "60"
                    op_mode = "Fixed frequency"
                }
                [
                    position = 8192, 8008
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VDC {
                    addr = "7"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7344, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_z_domain_transfer LPF_dc {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 7248, 8000
                    scale = -1, 1
                ]

                component pas_inductor Lb {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8136
                    rotation = down
                ]

                component pas_resistor Rb {
                    resistance = "R_i"
                }
                [
                    position = 7728, 8136
                    rotation = down
                ]

                component pas_inductor Lob {
                    inductance = "L_o"
                }
                [
                    position = 8400, 8136
                    rotation = down
                ]

                component pas_resistor Rob {
                    resistance = "R_o"
                }
                [
                    position = 8288, 8136
                    rotation = down
                ]

                component pas_capacitor C {
                    capacitance = "2000e-6"
                }
                [
                    position = 7416, 8000
                    rotation = right
                ]

                component gen_probe Pref_probe {
                }
                [
                    position = 7416, 7656
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem BPF {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7920, 8000
                    scale = -1, 1
                    size = 88, 48
                ]

                component Subsystem BPF1 {
                    layout = dynamic
                    component gen_z_domain_transfer LPF {
                        a_coeff = "[tau_h,1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8112, 8192
                    ]

                    component gen_z_domain_transfer HPF {
                        a_coeff = "[tau_l,1]"
                        b_coeff = "[tau_l,0]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8192, 8192
                    ]

                    component gen_gain Gain {
                        gain = "K"
                    }
                    [
                        position = 8272, 8192
                    ]

                    port in {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8192
                    ]

                    port out {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8192
                    ]

                    connect Gain.out out as Connection5049
                    connect LPF.in in as Connection5048
                    connect HPF.in LPF.out as Connection5045
                    connect Gain.in HPF.out as Connection5047

                    mask {
                        description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                        f {
                            label = "Fundamental frequency"
                            widget = edit
                            type = generic
                            default_value = "60"
                        }

                        f_l {
                            label = "Low frequency"
                            widget = edit
                            type = generic
                            default_value = "30"
                        }

                        f_h {
                            label = "High frequency"
                            widget = edit
                            type = generic
                            default_value = "120"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE

                        CODE init
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE

                        CODE pre_compile
                            # HEADER START
                            f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            # HEADER STOP
                            f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                            f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                            
                            tau_l = 1/(2*np.pi*f_l)
                            tau_h = 1/(2*np.pi*f_h)
                            w = 2*np.pi*f
                            K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                        ENDCODE
                    }
                }
                [
                    position = 7864, 7920
                    scale = -1, 1
                    size = 88, 48
                ]

                port B {
                    label = "B"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8624, 8136
                    scale = -1, 1
                ]

                port A {
                    label = "A"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8624, 7848
                    scale = -1, 1
                ]

                port + {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7904
                ]

                port - {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8096
                ]

                port Pout {
                    position = bottom:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 7440
                ]

                port Pref {
                    position = top:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7264, 7760
                ]

                tag Goto35 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 7920
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto41 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto49 {
                    value = "Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7568
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto50 {
                    value = "P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7504
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto51 {
                    value = "pf"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7696
                    hide_name = True
                    size = 0, 0
                ]

                tag From31 {
                    value = "Vq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto52 {
                    value = "S"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7632
                    hide_name = True
                    size = 0, 0
                ]

                tag From34 {
                    value = "Id"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Vd"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7528
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Iq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7720
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto53 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7144, 8000
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                junction Junction397 pe
                [
                    position = 7344, 8096
                ]

                junction Junction188 sp
                [
                    position = 8032, 7528
                ]

                junction Junction189 sp
                [
                    position = 8032, 7592
                ]

                junction Junction190 sp
                [
                    position = 8032, 7656
                ]

                junction Junction191 sp
                [
                    position = 8032, 7720
                ]

                junction Junction385 pe
                [
                    position = 8104, 7920
                ]

                junction Junction387 pe
                [
                    position = 8104, 7848
                ]

                junction Junction388 pe
                [
                    position = 8104, 7920
                ]

                junction Junction393 pe
                [
                    position = 7344, 7904
                ]

                junction Junction395 pe
                [
                    position = 8024, 8136
                ]

                junction Junction396 pe
                [
                    position = 8192, 8136
                ]

                junction Junction398 pe
                [
                    position = 7416, 7904
                ]

                junction Junction399 pe
                [
                    position = 7416, 8096
                ]

                junction Junction401 sp
                [
                    position = 7800, 8000
                ]

                junction Junction402 sp
                [
                    position = 8032, 7504
                ]

                junction Junction403 sp
                [
                    position = 7312, 7760
                ]

                connect - Junction397 as Connection4543
                connect Junction397 VDC.n_node as Connection4544
                [
                    breakpoints = 7344, 8096; 7344, 8096
                ]
                connect La.p_node I.p_node as Connection378
                connect From31 Power_Meas.Vq as Connection403
                connect From32 Power_Meas.Vd as Connection402
                connect From34 Power_Meas.Id as Connection404
                connect Goto49 Junction189 as Connection544
                connect Goto52 Junction190 as Connection547
                connect Goto51 Junction191 as Connection550
                connect Junction188 Power_Meas.P as Connection540
                connect Junction189 Power_Meas.Q as Connection543
                connect Junction190 Power_Meas.S as Connection546
                connect Junction191 Power_Meas.pf as Connection549
                connect P.in Junction188 as Connection539
                connect Power_Meas.Iq From35 as Connection405
                connect Q.in Junction189 as Connection542
                connect S.in Junction190 as Connection545
                connect pf.in Junction191 as Connection548
                connect Ra.p_node La.n_node as Connection4453
                connect Ra.n_node "Single Phase Inverter1.a_in" as Connection4454
                connect Rs.p_node Junction385 as Connection4472
                connect E.p_node Junction385 as Connection4474
                connect Rs.n_node Cs.p_node as Connection4475
                connect I.n_node Junction387 as Connection4486
                connect Roa.n_node Junction387 as Connection4488
                connect Roa.p_node Loa.n_node as Connection4489
                connect Junction387 Junction388 as Connection4498
                [
                    breakpoints = 8104, 7848; 8104, 7848
                ]
                connect Junction388 Junction385 as Connection4499
                [
                    breakpoints = 8104, 7920
                ]
                connect Vrms.p_node Junction388 as Connection4500
                connect Junction393 + as Connection4521
                [
                    breakpoints = 7344, 7904
                ]
                connect VDC.p_node Junction393 as Connection4522
                connect VDC.out LPF_dc.in as Connection4526
                connect "Single Phase Inverter1.b_in" Rb.n_node as Connection4529
                [
                    breakpoints = 7624, 8136; 7680, 8136
                ]
                connect Rb.p_node Lb.n_node as Connection4530
                connect E.n_node Junction395 as Connection4531
                connect Junction395 Cs.n_node as Connection4532
                [
                    breakpoints = 8024, 8136
                ]
                connect Lb.p_node Junction395 as Connection4533
                connect Rob.p_node Lob.n_node as Connection4534
                connect Vrms.n_node Junction396 as Connection4536
                connect Junction396 Cs.n_node as Connection4537
                [
                    breakpoints = 8192, 8136
                ]
                connect Rob.n_node Junction396 as Connection4538
                connect Lob.p_node B as Connection4539
                connect "Single Phase Inverter1.pos_out" Junction398 as Connection4546
                connect Junction398 Junction393 as Connection4547
                [
                    breakpoints = 7376, 7904; 7376, 7904; 7376, 7904
                ]
                connect C.p_node Junction398 as Connection4548
                connect "Single Phase Inverter1.neg_out" Junction399 as Connection4549
                connect Junction399 Junction397 as Connection4550
                connect C.n_node Junction399 as Connection4551
                connect Junction401 V.in as Connection4596
                [
                    breakpoints = 7800, 8000
                ]
                connect Goto41 Junction401 as Connection4597
                connect Controller.mb "Single Phase Inverter1.InB" as Connection4599
                connect Controller.ma "Single Phase Inverter1.InA" as Connection4600
                connect Controller.En "Single Phase Inverter1.En" as Connection4601
                connect Goto53 LPF_dc.out as Connection4602
                connect Goto50 Junction402 as Connection4603
                connect Junction402 Junction188 as Connection4604
                connect Pout Junction402 as Connection4605
                connect Pref Junction403 as Connection4607
                connect Junction403 Controller.PREF as Connection4608
                connect Pref_probe.in Junction403 as Connection4609
                connect E.out BPF.in as Connection4610
                connect BPF.out Junction401 as Connection4611
                connect Goto35 BPF1.out as Connection4612
                connect BPF1.in I.out as Connection4613
                connect Loa.p_node A as Connection4614

                C_s = "40e-6"
                Imax = "1"
                Imin = "-1"
                Ki_I = "4*20"
                Kp_I = "0.076*20"
                L_i = "0.0133/2"
                L_o = "38e-6/2"
                R_i = "1e-3/2"
                R_o = "2e-3/2"
                R_s = "0.3244"
                S = "50e3"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A lead acid battery interfaced with a three-phase inverter and LCL filter</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "10e3"
                        unit = "VA"
                        group = "1. Single-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "1. Single-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Single-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_inv"
                        unit = "s"
                        group = "1. Single-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "0.0165"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "2.5872"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "5e-6"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "1e-4"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    Kp_I {
                        label = "Current Regulator Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.6079*30"
                        group = "3. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Current Regulator Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "4*30"
                        group = "3. Cascaded Controller"
                    }

                    Imax {
                        label = "Current Regulator Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1.5"
                        group = "3. Cascaded Controller"
                    }

                    Imin {
                        label = "Current Regulator Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1.5"
                        group = "3. Cascaded Controller"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE

                    CODE define_icon
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE
                }
            }
            [
                position = 8376, 8176
                size = 64, 80
            ]

            component gen_sum Sum1 {
            }
            [
                position = 7928, 8248
                rotation = left
                hide_name = True
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_inv"
            }
            [
                position = 8112, 8104
                hide_name = True
                size = 32, 32
            ]

            component "core/Dynamic Table" "Dynamic Table1" {
                execution_rate = "Ts"
                import_dynamic_table_file = "C:/Users/zholbar1/Documents/microgrid_testbed/APRA-E MST project/Q4/Test 2/Solar Village Test2/RegD_array.csv"
                signal_names = "[\'RegD\']"
                x_vec = "[0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788, 792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844, 848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 960, 964, 968, 972, 976, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1092, 1096, 1100, 1104, 1108, 1112, 1116, 1120, 1124, 1128, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1180, 1184, 1188, 1192, 1196, 1200, 1204, 1208, 1212, 1216, 1220, 1224, 1228, 1232, 1236, 1240, 1244, 1248, 1252, 1256, 1260, 1264, 1268, 1272, 1276, 1280, 1284, 1288, 1292, 1296, 1300, 1304, 1308, 1312, 1316, 1320, 1324, 1328, 1332, 1336, 1340, 1344, 1348, 1352, 1356, 1360, 1364, 1368, 1372, 1376, 1380, 1384, 1388, 1392, 1396, 1400, 1404, 1408, 1412, 1416, 1420, 1424, 1428, 1432, 1436, 1440, 1444, 1448, 1452, 1456, 1460, 1464, 1468, 1472, 1476, 1480, 1484, 1488, 1492, 1496, 1500, 1504, 1508, 1512, 1516, 1520, 1524, 1528, 1532, 1536, 1540, 1544, 1548, 1552, 1556, 1560, 1564, 1568, 1572, 1576, 1580, 1584, 1588, 1592, 1596, 1600, 1604, 1608, 1612, 1616, 1620, 1624, 1628, 1632, 1636, 1640, 1644, 1648, 1652, 1656, 1660, 1664, 1668, 1672, 1676, 1680, 1684, 1688, 1692, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1724, 1728, 1732, 1736, 1740, 1744, 1748, 1752, 1756, 1760, 1764, 1768, 1772, 1776, 1780, 1784, 1788, 1792, 1796, 1800, 1804, 1808, 1812, 1816, 1820, 1824, 1828, 1832, 1836, 1840, 1844, 1848, 1852, 1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1900, 1904, 1908, 1912, 1916, 1920, 1924, 1928, 1932, 1936, 1940, 1944, 1948, 1952, 1956, 1960, 1964, 1968, 1972, 1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020, 2024, 2028, 2032, 2036, 2040, 2044, 2048, 2052, 2056, 2060, 2064, 2068, 2072, 2076, 2080, 2084, 2088, 2092, 2096, 2100, 2104, 2108, 2112, 2116, 2120, 2124, 2128, 2132, 2136, 2140, 2144, 2148, 2152, 2156, 2160, 2164, 2168, 2172, 2176, 2180, 2184, 2188, 2192, 2196, 2200, 2204, 2208, 2212, 2216, 2220, 2224, 2228, 2232, 2236, 2240, 2244, 2248, 2252, 2256, 2260, 2264, 2268, 2272, 2276, 2280, 2284, 2288, 2292, 2296, 2300, 2304, 2308, 2312, 2316, 2320, 2324, 2328, 2332, 2336, 2340, 2344, 2348, 2352, 2356, 2360, 2364, 2368, 2372, 2376, 2380, 2384, 2388, 2392, 2396, 2400, 2404, 2408, 2412, 2416, 2420, 2424, 2428, 2432, 2436, 2440, 2444, 2448, 2452, 2456, 2460, 2464, 2468, 2472, 2476, 2480, 2484, 2488, 2492, 2496, 2500, 2504, 2508, 2512, 2516, 2520, 2524, 2528, 2532, 2536, 2540, 2544, 2548, 2552, 2556, 2560, 2564, 2568, 2572, 2576, 2580, 2584, 2588, 2592, 2596, 2600, 2604, 2608, 2612, 2616, 2620, 2624, 2628, 2632, 2636, 2640, 2644, 2648, 2652, 2656, 2660, 2664, 2668, 2672, 2676, 2680, 2684, 2688, 2692, 2696, 2700, 2704, 2708, 2712, 2716, 2720, 2724, 2728, 2732, 2736, 2740, 2744, 2748, 2752, 2756, 2760, 2764, 2768, 2772, 2776, 2780, 2784, 2788, 2792, 2796, 2800, 2804, 2808, 2812, 2816, 2820, 2824, 2828, 2832, 2836, 2840, 2844, 2848, 2852, 2856, 2860, 2864, 2868, 2872, 2876, 2880, 2884, 2888, 2892, 2896, 2900, 2904, 2908, 2912, 2916, 2920, 2924, 2928, 2932, 2936, 2940, 2944, 2948, 2952, 2956, 2960, 2964, 2968, 2972, 2976, 2980, 2984, 2988, 2992, 2996, 3000, 3004, 3008, 3012, 3016, 3020, 3024, 3028, 3032, 3036, 3040, 3044, 3048, 3052, 3056, 3060, 3064, 3068, 3072, 3076, 3080, 3084, 3088, 3092, 3096, 3100, 3104, 3108, 3112, 3116, 3120, 3124, 3128, 3132, 3136, 3140, 3144, 3148, 3152, 3156, 3160, 3164, 3168, 3172, 3176, 3180, 3184, 3188, 3192, 3196, 3200, 3204, 3208, 3212, 3216, 3220, 3224, 3228, 3232, 3236, 3240, 3244, 3248, 3252, 3256, 3260, 3264, 3268, 3272, 3276, 3280, 3284, 3288, 3292, 3296, 3300, 3304, 3308, 3312, 3316, 3320, 3324, 3328, 3332, 3336, 3340, 3344, 3348, 3352, 3356, 3360, 3364, 3368, 3372, 3376, 3380, 3384, 3388, 3392, 3396, 3400, 3404, 3408, 3412, 3416, 3420, 3424, 3428, 3432, 3436, 3440, 3444, 3448, 3452, 3456, 3460, 3464, 3468, 3472, 3476, 3480, 3484, 3488, 3492, 3496, 3500, 3504, 3508, 3512, 3516, 3520, 3524, 3528, 3532, 3536, 3540, 3544, 3548, 3552, 3556, 3560, 3564, 3568, 3572, 3576, 3580, 3584, 3588, 3592, 3596, 3600, 3604, 3608, 3612, 3616, 3620, 3624, 3628, 3632, 3636, 3640, 3644, 3648, 3652, 3656, 3660, 3664, 3668, 3672, 3676, 3680, 3684, 3688, 3692, 3696, 3700, 3704, 3708, 3712, 3716, 3720, 3724, 3728, 3732, 3736, 3740, 3744, 3748, 3752, 3756, 3760, 3764, 3768, 3772, 3776, 3780, 3784, 3788, 3792, 3796, 3800, 3804, 3808, 3812, 3816, 3820, 3824, 3828, 3832, 3836, 3840, 3844, 3848, 3852, 3856, 3860, 3864, 3868, 3872, 3876, 3880, 3884, 3888, 3892, 3896, 3900, 3904, 3908, 3912, 3916, 3920, 3924, 3928, 3932, 3936, 3940, 3944, 3948, 3952, 3956, 3960, 3964, 3968, 3972, 3976, 3980, 3984, 3988, 3992, 3996, 4000, 4004, 4008, 4012, 4016, 4020, 4024, 4028, 4032, 4036, 4040, 4044, 4048, 4052, 4056, 4060, 4064, 4068, 4072, 4076, 4080, 4084, 4088, 4092, 4096, 4100, 4104, 4108, 4112, 4116, 4120, 4124, 4128, 4132, 4136, 4140, 4144, 4148, 4152, 4156, 4160, 4164, 4168, 4172, 4176, 4180, 4184, 4188, 4192, 4196, 4200, 4204, 4208, 4212, 4216, 4220, 4224, 4228, 4232, 4236, 4240, 4244, 4248, 4252, 4256, 4260, 4264, 4268, 4272, 4276, 4280, 4284, 4288, 4292, 4296, 4300, 4304, 4308, 4312, 4316, 4320, 4324, 4328, 4332, 4336, 4340, 4344, 4348, 4352, 4356, 4360, 4364, 4368, 4372, 4376, 4380, 4384, 4388, 4392, 4396, 4400, 4404, 4408, 4412, 4416, 4420, 4424, 4428, 4432, 4436, 4440, 4444, 4448, 4452, 4456, 4460, 4464, 4468, 4472, 4476, 4480, 4484, 4488, 4492, 4496, 4500, 4504, 4508, 4512, 4516, 4520, 4524, 4528, 4532, 4536, 4540, 4544, 4548, 4552, 4556, 4560, 4564, 4568, 4572, 4576, 4580, 4584, 4588, 4592, 4596, 4600, 4604, 4608, 4612, 4616, 4620, 4624, 4628, 4632, 4636, 4640, 4644, 4648, 4652, 4656, 4660, 4664, 4668, 4672, 4676, 4680, 4684, 4688, 4692, 4696, 4700, 4704, 4708, 4712, 4716, 4720, 4724, 4728, 4732, 4736, 4740, 4744, 4748, 4752, 4756, 4760, 4764, 4768, 4772, 4776, 4780, 4784, 4788, 4792, 4796, 4800, 4804, 4808, 4812, 4816, 4820, 4824, 4828, 4832, 4836, 4840]"
                y_vec = "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, -17, -75, -173, -286, -399, -524, -654, -784, -914, -1044, -1174, -1304, -1397, -1477, -1556, -1607, -1647, -1687, -1727, -1737, -1737, -1736, -1698, -1645, -1592, -1540, -1487, -1434, -1381, -1308, -1228, -1147, -1066, -1044, -995, -929, -863, -796, -745, -699, -644, -586, -540, -500, -459, -418, -377, -314, -244, -173, -102, -32, 38, 108, 179, 263, 353, 443, 533, 626, 721, 816, 910, 974, 1026, 1078, 1129, 1171, 1208, 1246, 1283, 1320, 1380, 1449, 1517, 1586, 1684, 1793, 1902, 1980, 2062, 2176, 2288, 2399, 2509, 2642, 2784, 2925, 3067, 3209, 3312, 3401, 3490, 3563, 3630, 3697, 3764, 3831, 3898, 3965, 3983, 3982, 3981, 3981, 3980, 3979, 3979, 3978, 3977, 3977, 3976, 3975, 3975, 3974, 3973, 3973, 3944, 3904, 3865, 3805, 3737, 3670, 3602, 3535, 3467, 3399, 3332, 3264, 3197, 3131, 3064, 2998, 2931, 2865, 2798, 2732, 2666, 2599, 2533, 2465, 2396, 2328, 2260, 2191, 2123, 2076, 2038, 2001, 1963, 1925, 1887, 1864, 1846, 1829, 1812, 1794, 1777, 1760, 1742, 1742, 1749, 1756, 1763, 1770, 1777, 1784, 1786, 1787, 1787, 1787, 1787, 1788, 1788, 1788, 1789, 1816, 1854, 1891, 1928, 1977, 2029, 2081, 2133, 2186, 2213, 2232, 2250, 2269, 2288, 2306, 2325, 2343, 2362, 2363, 2358, 2353, 2322, 2282, 2242, 2184, 2119, 2054, 1989, 1924, 1859, 1794, 1729, 1688, 1655, 1621, 1598, 1577, 1557, 1537, 1511, 1484, 1456, 1429, 1427, 1434, 1489, 1563, 1637, 1728, 1827, 1925, 2024, 2122, 2220, 2319, 2417, 2514, 2610, 2706, 2802, 2899, 2995, 3091, 3161, 3221, 3281, 3341, 3401, 3461, 3521, 3581, 3641, 3670, 3688, 3706, 3685, 3650, 3615, 3555, 3487, 3419, 3350, 3254, 3147, 3040, 2932, 2816, 2697, 2578, 2458, 2339, 2220, 2124, 2037, 1950, 1899, 1863, 1858, 1867, 1964, 2094, 2224, 2260, 2380, 2546, 2735, 2931, 3211, 3368, 3466, 3565, 3630, 3683, 3736, 3789, 3818, 3838, 3858, 3879, 3899, 3919, 3939, 3948, 3952, 3956, 3960, 3964, 3968, 3972, 3976, 3980, 3984, 3988, 3992, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3961, 3917, 3833, 3734, 3636, 3517, 3392, 3266, 3140, 3015, 2914, 2823, 2732, 2647, 2565, 2484, 2402, 2307, 2208, 2109, 2041, 1985, 1929, 1886, 1848, 1810, 1772, 1705, 1627, 1550, 1433, 1301, 1169, 1024, 682, 341, 0, 0, -162, -324, -487, -649, -649, -829, -1010, -1176, -1336, -1496, -1657, -1817, -1952, -2076, -2200, -2324, -2444, -2561, -2678, -2800, -2924, -3049, -3173, -3263, -3339, -3415, -3461, -3496, -3471, -3422, -3353, -3274, -3196, -3118, -3040, -2961, -2883, -2805, -2726, -2648, -2596, -2554, -2512, -2470, -2428, -2386, -2356, -2331, -2306, -2322, -2353, -2419, -2497, -2601, -2715, -2829, -2944, -3058, -3172, -3286, -3383, -3472, -3562, -3651, -3741, -3819, -3893, -3966, -3987, -3987, -3986, -3986, -3985, -3985, -3984, -3984, -3984, -3983, -3983, -3982, -3982, -3981, -3981, -3980, -3980, -3979, -3979, -3978, -3978, -3977, -3977, -3976, -3976, -3975, -3975, -3974, -3974, -3973, -3973, -3972, -3972, -3971, -3971, -3971, -3970, -3970, -3969, -3969, -3968, -3968, -3967, -3943, -3909, -3876, -3842, -3809, -3775, -3742, -3708, -3689, -3675, -3661, -3647, -3633, -3619, -3605, -3602, -3603, -3604, -3605, -3573, -3528, -3482, -3436, -3353, -3255, -3156, -3058, -2996, -2948, -2900, -2860, -2823, -2786, -2749, -2712, -2675, -2638, -2593, -2546, -2526, -2518, -2509, -2541, -2589, -2666, -2755, -2867, -2987, -3108, -3229, -3349, -3464, -3577, -3690, -3802, -3915, -3985, -3999, -3999, -3999, -3998, -3998, -3998, -3997, -3997, -3997, -3996, -3996, -3996, -3920, -3814, -3531, -3293, -3103, -2913, -2722, -2532, -2342, -2151, -1961, -1797, -1643, -1489, -1372, -1270, -1202, -1147, -1134, -1138, -1177, -1230, -1283, -1366, -1462, -1558, -1654, -1743, -1829, -1915, -2001, -2068, -2128, -2188, -2248, -2308, -2367, -2406, -2437, -2468, -2498, -2529, -2560, -2590, -2589, -2574, -2559, -2519, -2469, -2419, -2368, -2318, -2268, -2226, -2188, -2149, -2111, -2073, -2034, -2037, -2056, -2074, -2093, -2117, -2142, -2168, -2193, -2219, -2277, -2296, -2427, -2561, -2676, -2791, -2906, -3057, -3223, -3388, -3554, -3720, -3885, -3981, -3999, -3999, -3999, -3999, -3999, -3999, -3999, -3999, -3999, -3999, -3999, -3999, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -4000, -3973, -3901, -3766, -3731, -3435, -3171, -2944, -2681, -2408, -2097, -1776, -1434, -1087, -739, -392, -44, 302, 650, 997, 1312, 1616, 1685, 2091, 2393, 2625, 2939, 3133, 3282, 3398, 3503, 3473, 3555, 3618, 3661, 3705, 3748, 3792, 3835, 3858, 3873, 3889, 3905, 3921, 3937, 3953, 3959, 3962, 3925, 3875, 3797, 3710, 3624, 3537, 3451, 3431, 3261, 3100, 2956, 2813, 2669, 2526, 2382, 2239, 2095, 1952, 1830, 1714, 1599, 1523, 1459, 1395, 1330, 1266, 1202, 1104, 997, 889, 782, 661, 537, 413, 385, 197, 48, -70, -189, -308, -336, -481, -573, -636, -699, -762, -803, -837, -871, -905, -940, -961, -979, -997, -1015, -1033, -1050, -1032, -1001, -971, -896, -808, -720, -596, -562, -308, -86, -368, -390, -367, -345, -323, -300, -278, -256, -244, -270, -295, -321, -346, -372, -398, -421, -436, -452, -455, -418, -380, -343, -306, -268, -238, -233, -238, -278, -317, -356, -391, -407, -424, -445, -478, -511, -544, -577, -605, -613, -622, -630, -630, -600, -563, -497, -431, -365, -300, -237, -173, -110, -46, 16, 80, 133, 150, 166, 175, 157, 138, 120, 92, 31, -30, -90, -145, -199, -254, -308, -362, -417, -471, -517, -530, -543, -556, -570, -578, -568, -558, -548, -538, -528, -518, -508, -498, -489, -479, -478, -512, -545, -578, -617, -674, -731, -788, -846, -903, -960, -1017, -1074, -1145, -1236, -1252, -1326, -1407, -1488, -1570, -1651, -1732, -1813, -1894, -1966, -2007, -2048, -2075, -2055, -2023, -1946, -1854, -1709, -1548, -1331, -1115, -898, -674, -426, -178, 80, 375, 670, 1032, 1502, 1565, 1844, 2124, 2388, 2587, 2719, 2785, 2851, 2918, 2971, 2977, 2983, 2978, 2933, 2877, 2780, 2683, 2585, 2488, 2391, 2294, 2196, 2099, 2002, 1911, 1844, 1776, 1709, 1641, 1587, 1582, 1576, 1579, 1612, 1657, 1745, 1832, 1920, 2008, 2096, 2184, 2272, 2361, 2449, 2537, 2625, 2714, 2802, 2890, 2979, 3062, 3129, 3196, 3251, 3265, 3271, 3245, 3220, 3180, 3110, 3096, 3036, 2961, 2833, 2705, 2577, 2448, 2320, 2192, 2058, 1906, 1753, 1600, 1451, 1316, 1182, 1047, 919, 812, 705, 598, 491, 384, 277, 179, 112, 45, -8, -17, -27, -25, 11, 58, 139, 219, 310, 438, 565, 692, 817, 930, 1044, 1146, 1206, 1266, 1313, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1324, 1326, 1327, 1328, 1330, 1327, 1310, 1282, 1220, 1158, 1095, 1023, 889, 782, 661, 537, 413, 385, 197, 48, -70, -189, -308, -336, -481, -573, -636, -699, -762, -803, -837, -871, -905, -940, -961, -979, -997, -1015, -1033, -1050, -1032, -1001, -971, -896, -808, -720, -596, -562, -308, -86, 98, 283, 468, 653, 838, 1023, 1208, 1380, 1547, 1715, 1882, 2020, 2150, 2279, 2378, 2467, 2556, 2645, 2700, 2744, 2789, 2831, 2873, 2915, 2957, 3020, 3090, 3107, 3209, 3275, 3320, 3365, 3410, 3405, 3383, 3327, 3259, 3167, 3067, 2967, 2902, 2850, 2839, 2841, 2844, 2891, 2953, 3015, 3077, 3161, 3252, 3343, 3433, 3524, 3615]]"
            }
            [
                position = 8648, 8440
                scale = -1, 1
                size = 48, 48
            ]

            component "core/Rate Transition" "Rate Transition2" {
                execution_rate = "1"
            }
            [
                position = 8552, 8440
                hide_name = True
                scale = -1, 1
                size = 32, 32
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8720, 8320
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8712, 8128
                rotation = down
            ]

            junction Junction1 sp
            [
                position = 8120, 8488
            ]

            junction Junction2 sp
            [
                position = 8120, 8424
            ]

            connect "Core coupling.a" a as Connection4996
            connect "Core coupling.b" b as Connection4997
            connect Inverter.A "Core coupling.A" as Connection5006
            connect Inverter.B "Core coupling.B" as Connection5007
            connect Vs1.p_node Inverter.+ as Connection5008
            connect Vs1.n_node Inverter.- as Connection5009
            connect Pref_reg.in Junction1 as Connection5011
            connect Junction1 Modbus.Pref_reg as Connection5012
            connect Sum1.in Junction1 as Connection5013
            connect Pref_ed.in Junction2 as Connection5014
            connect Junction2 Modbus.Pref_ed as Connection5015
            connect Sum1.in1 Junction2 as Connection5016
            connect Sum1.out "Rate Transition1.in" as Connection5018
            connect "Rate Transition1.out" Inverter.Pref as Connection5019
            connect "C function3.reg" Modbus.RegD as Connection5020
            connect "C function3.time" Modbus.Time as Connection5021
            connect "C function3.RegD" "Rate Transition2.out" as Connection5022
            connect "Dynamic Table1.RegD" "Rate Transition2.in" as Connection5023

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5984, 7560
            rotation = right
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem Measurement {
            layout = dynamic
            component "core/Voltage Measurement" Va {
                execution_rate = "Ts_m"
                feed_forward = "true"
                sig_output = "True"
            }
            [
                position = 8240, 8152
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" Ia {
                execution_rate = "Ts_m"
                feed_forward = "true"
                sig_output = "True"
            }
            [
                position = 8192, 8088
                scale = -1, 1
                size = 64, 32
            ]

            component gen_probe P {
            }
            [
                position = 8888, 7856
                rotation = down
                scale = -1, 1
            ]

            component Subsystem BPF {
                layout = dynamic
                component gen_z_domain_transfer LPF {
                    a_coeff = "[tau_h,1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8112, 8192
                ]

                component gen_z_domain_transfer HPF {
                    a_coeff = "[tau_l,1]"
                    b_coeff = "[tau_l,0]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8192, 8192
                ]

                component gen_gain Gain {
                    gain = "K"
                }
                [
                    position = 8272, 8192
                ]

                port in {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8048, 8192
                ]

                port out {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8336, 8192
                ]

                connect Gain.out out as Connection5049
                connect LPF.in in as Connection5048
                connect HPF.in LPF.out as Connection5045
                connect Gain.in HPF.out as Connection5047

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    f {
                        label = "Fundamental frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                    }

                    f_l {
                        label = "Low frequency"
                        widget = edit
                        type = generic
                        default_value = "30"
                    }

                    f_h {
                        label = "High frequency"
                        widget = edit
                        type = generic
                        default_value = "120"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                        f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                        
                        tau_l = 1/(2*np.pi*f_l)
                        tau_h = 1/(2*np.pi*f_h)
                        w = 2*np.pi*f
                        K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                        f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                        f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                        # HEADER STOP
                        f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                        f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                        
                        tau_l = 1/(2*np.pi*f_l)
                        tau_h = 1/(2*np.pi*f_h)
                        w = 2*np.pi*f
                        K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                    ENDCODE
                }
            }
            [
                position = 8352, 8032
                size = 88, 48
            ]

            component Subsystem BPF1 {
                layout = dynamic
                component gen_z_domain_transfer LPF {
                    a_coeff = "[tau_h,1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8112, 8192
                ]

                component gen_z_domain_transfer HPF {
                    a_coeff = "[tau_l,1]"
                    b_coeff = "[tau_l,0]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8192, 8192
                ]

                component gen_gain Gain {
                    gain = "K"
                }
                [
                    position = 8272, 8192
                ]

                port in {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8048, 8192
                ]

                port out {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8336, 8192
                ]

                connect Gain.out out as Connection5049
                connect LPF.in in as Connection5048
                connect HPF.in LPF.out as Connection5045
                connect Gain.in HPF.out as Connection5047

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    f {
                        label = "Fundamental frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                    }

                    f_l {
                        label = "Low frequency"
                        widget = edit
                        type = generic
                        default_value = "30"
                    }

                    f_h {
                        label = "High frequency"
                        widget = edit
                        type = generic
                        default_value = "120"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                        f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                        
                        tau_l = 1/(2*np.pi*f_l)
                        tau_h = 1/(2*np.pi*f_h)
                        w = 2*np.pi*f
                        K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        f = mdl.get_property_value(mdl.prop(item_handle, "f"))
                        f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                        f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                        # HEADER STOP
                        f_l = mdl.get_property_value(mdl.prop(item_handle, "f_l"))
                        f_h = mdl.get_property_value(mdl.prop(item_handle, "f_h"))
                        
                        tau_l = 1/(2*np.pi*f_l)
                        tau_h = 1/(2*np.pi*f_h)
                        w = 2*np.pi*f
                        K = np.sqrt(1+(tau_h*w)**2)*np.sqrt(1+(tau_l*w)**2)/tau_l/w
                    ENDCODE
                }
            }
            [
                position = 8368, 8152
                size = 88, 48
            ]

            component gen_z_domain_transfer "Hilbert Transform" {
                a_coeff = "[1/(2*np.pi*60),1]"
                b_coeff = "[-1/(2*np.pi*60),1]"
                domain = "S-domain"
                method = "Bilinear"
            }
            [
                position = 8112, 7832
            ]

            component gen_z_domain_transfer "Hilbert Transform1" {
                a_coeff = "[1/(2*np.pi*60),1]"
                b_coeff = "[-1/(2*np.pi*60),1]"
                domain = "S-domain"
                method = "Bilinear"
            }
            [
                position = 8104, 7952
            ]

            component gen_product Product1 {
            }
            [
                position = 8512, 7808
                hide_name = True
            ]

            component gen_sum Sum1 {
            }
            [
                position = 8616, 7856
                hide_name = True
            ]

            component gen_z_domain_transfer LPF_P {
                a_coeff = "[1.0/(2*np.pi),1]"
                b_coeff = "1"
                domain = "S-domain"
                method = "Bilinear"
            }
            [
                position = 8768, 7856
            ]

            component gen_product Product2 {
            }
            [
                position = 8512, 7896
                hide_name = True
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 8696, 7856
                hide_name = True
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8288, 8216
                rotation = down
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8096, 8216
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8096, 8088
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8288, 8088
                rotation = down
            ]

            tag From31 {
                value = "Vbeta"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 8392, 7888
                hide_name = True
                size = 60, 20
            ]

            tag From34 {
                value = "Ialpha"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 8392, 7840
                hide_name = True
                size = 60, 20
            ]

            tag From35 {
                value = "Ibeta"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 8392, 7928
                hide_name = True
                size = 60, 20
            ]

            tag Goto60 {
                value = "Valpha"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8232, 7784
                hide_name = True
                size = 60, 20
            ]

            tag From54 {
                value = "V"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 7944, 7784
                hide_name = True
            ]

            tag Goto61 {
                value = "Vbeta"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8232, 7832
                hide_name = True
                size = 60, 20
            ]

            tag Goto66 {
                value = "Ialpha"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8224, 7904
                hide_name = True
                size = 60, 20
            ]

            tag From60 {
                value = "I"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 7936, 7904
                hide_name = True
            ]

            tag Goto67 {
                value = "Ibeta"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8224, 7952
                hide_name = True
                size = 60, 20
            ]

            tag Goto68 {
                value = "V"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8544, 8152
                hide_name = True
                size = 60, 20
            ]

            tag Goto69 {
                value = "I"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8520, 8032
                hide_name = True
                size = 60, 20
            ]

            tag From32 {
                value = "Valpha"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 8392, 7800
                hide_name = True
                size = 60, 20
            ]

            junction Junction647 pe
            [
                position = 8240, 8216
            ]

            junction Junction651 pe
            [
                position = 8240, 8088
            ]

            junction Junction386 sp
            [
                position = 8024, 7784
            ]

            junction Junction392 sp
            [
                position = 8016, 7904
            ]

            connect b Junction647 as Connection4978
            connect Junction647 Va.n_node as Connection4979
            [
                breakpoints = 8240, 8216
            ]
            connect a Junction651 as Connection4996
            connect Junction651 Va.p_node as Connection4997
            [
                breakpoints = 8240, 8088
            ]
            connect Ia.p_node Junction651 as Connection4998
            connect Ia.n_node A as Connection5000
            [
                breakpoints = 8144, 8088
            ]
            connect B Junction647 as Connection5001
            [
                breakpoints = 8144, 8216
            ]
            connect LPF_P.out P.in as Connection5041
            [
                breakpoints = 8824, 7856
            ]
            connect Ia.out BPF.in as Connection5042
            connect Goto69 BPF.out as Connection5043
            connect BPF1.out Goto68 as Connection5044
            connect BPF1.in Va.out as Connection5045
            connect From54 Junction386 as Connection4478
            connect Junction386 Goto60 as Connection4479
            connect "Hilbert Transform.in" Junction386 as Connection4480
            connect "Hilbert Transform.out" Goto61 as Connection4481
            connect From60 Junction392 as Connection4503
            connect Junction392 Goto66 as Connection4504
            connect "Hilbert Transform1.in" Junction392 as Connection4505
            connect "Hilbert Transform1.out" Goto67 as Connection4506
            connect Sum1.in Product1.out as Connection29
            connect Sum1.in1 Product2.out as Connection30
            connect From31 Product2.in as Connection5032
            connect From32 Product1.in as Connection5033
            connect From34 Product1.in1 as Connection5034
            connect From35 Product2.in1 as Connection5035
            connect LPF_P.in Gain1.out as Connection5039
            connect Gain1.in Sum1.out as Connection5040
        }
        [
            position = 5888, 7792
            size = 56, 96
        ]

        junction Junction2 pe
        [
            position = 6048, 7760
        ]

        junction Junction3 pe
        [
            position = 6048, 7672
        ]

        junction Junction4 pe
        [
            position = 6048, 7760
        ]

        junction Junction5 pe
        [
            position = 6096, 7824
        ]

        junction Junction6 pe
        [
            position = 6096, 7704
        ]

        junction Junction7 pe
        [
            position = 6096, 7824
        ]

        junction Junction8 pe
        [
            position = 5968, 7760
        ]

        junction Junction9 pe
        [
            position = 6000, 7824
        ]

        connect Junction2 "Line 2.A" as Connection5088
        connect "Line 3.A" Junction3 as Connection5090
        connect Junction3 Junction4 as Connection5093
        connect Junction4 Junction2 as Connection5094
        connect "Line 1.A" Junction4 as Connection5095
        connect Junction5 "Line 2.B" as Connection5097
        connect "Line 3.B" Junction6 as Connection5099
        connect Junction6 Junction7 as Connection5102
        [
            breakpoints = 6096, 7728; 6096, 7824
        ]
        connect Junction7 Junction5 as Connection5103
        connect "Line 1.B" Junction7 as Connection5104
        connect "Line 1.a" SolarHouse1.a as Connection5135
        connect "Line 1.b" SolarHouse1.b as Connection5136
        connect ESS.a "Line 5.a" as Connection5154
        connect ESS.b "Line 5.b" as Connection5155
        connect "Line 4.a" SolarHouse4.a as Connection5156
        connect "Line 4.b" SolarHouse4.b as Connection5157
        connect "Line 3.a" SolarHouse3.a as Connection5158
        connect "Line 3.b" SolarHouse3.b as Connection5159
        connect "Line 2.a" SolarHouse2.a as Connection5160
        connect "Line 2.b" SolarHouse2.b as Connection5161
        connect "Line 4.B" Junction6 as Connection5172
        [
            breakpoints = 6120, 7576; 6096, 7576; 6096, 7704
        ]
        connect Junction3 "Line 4.A" as Connection5173
        [
            breakpoints = 6048, 7672; 6048, 7672; 6048, 7544; 6056, 7544
        ]
        connect Measurement.A Grid.A as Connection5176
        connect Measurement.B Grid.Gnd as Connection5177
        connect "Line 5.A" Junction8 as Connection5178
        connect Junction8 Junction2 as Connection5179
        [
            breakpoints = 5968, 7760; 5968, 7760; 5968, 7760
        ]
        connect Measurement.a Junction8 as Connection5180
        connect Junction5 Junction9 as Connection5181
        [
            breakpoints = 6096, 7824
        ]
        connect Junction9 "Line 5.B" as Connection5182
        [
            breakpoints = 6000, 7824; 6000, 7824; 6000, 7824
        ]
        connect Measurement.b Junction9 as Connection5183
    }

    default {
        gen_alpha_beta2d_q {
            alignment = "-pi/2"
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_d_q2alpha_beta {
            alignment = "-pi/2"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            show_reset = "none"
            upper_sat_lim = "1"
            upper_sat_lim_source = "internal"
            lower_sat_lim = "-1"
            lower_sat_lim_source = "internal"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1,1]"
            a_coeff = "[1,1]"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
            param_set = ""
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        src_voltage {
            sig_input = "False"
            type = "signal generator"
            param_set = "1phase"
            parent_label = ""
            addr = "0"
            spc_nb = "0"
            execution_rate = "100e-6"
            cpd_visible = "True"
            enable_snb = "False"
            snb_type = "R2"
            R2 = "0.0"
            L1 = "0.1"
            override_signal_name = "False"
            signal_name = ""
            init_source_nature = "Constant"
            init_const_value = "0.0"
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Dynamic Table" {
            x_vec = "[0,2,3,1,5]"
            y_vec = "[[0,2,3,1,5]]"
            signal_names = "[\'out0\']"
            import_dynamic_table_file = "not selected"
            preview = "Preview Dynamic Table Curve"
            execution_rate = "100e-6"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            ip_addr = "192.168.0.210"
            ip_addr_src = "Dictionary"
            netmask = "255.255.255.0"
            netmask_src = "Dictionary"
            port = "502"
            port_src = "Dictionary"
            slave_id = "1"
            slave_id_src = "Dictionary"
            gateway_enable = "False"
            gateway = "192.168.0.210"
            gateway_src = "Dictionary"
            ip_address_port = "False"
            request_counter_port = "None"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
            _supported_platforms = "[\'hil\']"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Signal Controlled Sinusoidal Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Single Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100000.0"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
        }

        "core/Single Phase Inverter" {
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            phase_op_mode = "Fixed carrier phase offset"
            carr_ph_offset = "[0.0, 180.0]"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            losses_estimation = "False"
            fvd_def_method = "Voltage and Resistance"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Switch_type = "IGBT"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            vce_table_out = "[1.3, 1.3, 1.3, 1.3, 1.3]"
            vd_table_out = "[1.2, 1.2, 1.2, 1.2, 1.2]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            show_monitoring = "false"
            FSM_select = "converter"
            _control_property = "all high"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
            dtv_flag_en = "True"
            PESB_Optimization = "True"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        Ts = 1e-4
        Ts_ess = 2e-4
        Ts_pv = 2e-4
        Ts_inv = 2e-4
        Ts_m = 2e-4
        
        scale_const = 1
        scale_back_const = 1
        # Grid specs
        
        R01=1e-3
        L01=100e-6
        
        R02=1.2e-3
        L02=120e-6
        
        R03=1.1e-3
        L03=110e-6
        
        R04=1.5e-3
        L04=150e-6
        
        R05=1.01e-3
        L05=95e-6
        
        R06=0.91e-3
        L06=55e-6
        
        
        # Solar irradiance model parameters
        ang = 0
        ang_z = 20*np.pi/180
        ang_t = 20*np.pi/180
        rho = 0.2
        GHI = 304
        ETR = 346
        
        # EV charging station
        Ts_ev = 200e-6  #s
        #Tbatt = 200e-6
        T_charging_station = 200e-6
        
        ex_rate=200e-6
        #Tprotection = 200e-6
        
        #base values
        Vb = 400     #V
        Pb = 250e3   #W
        fb = 600     #Hz
        
        #filter parameters
        Lf = 1e-6    #H
        Cf = 2000e-6 #F
        
        #machine parameters
        pms = 2      #number of pole pairs 
        Rs = 9e-3    #Ω
        Rr = 15e-3   #Ω
        Lls = 1e-5   #H
        Llr = 1e-5   #H
        Lm = 8e-3    #H
        
        #maximum torque slip lookup table
        f =  [5,   100, 110,  120,   130,  140,  150,   160,   180 , 200,   225,  250,  275,   300,   350,  400,    450,   500  , 550,   600]
        sp = [0.5, 0.5, 0.6, 0.655, 0.804, 0.76, 0.72, 0.681, 0.616, 0.56, 0.506, 0.46, 0.42, 0.387, 0.334, 0.294, 0.262, 0.236, 0.215, 0.197]
        
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        # RMS, phase and power calculation execuiton rate
        Rshunt_msr = 1e4
        
        
        # -------- Calculating R and L values for load ----------
        # --------- Functions definition ---------
        def calc_R(V,P,S):
            R = V**2*P/S**2
            return R
            
        def calc_L(V,Q,S):
            XL = V**2*Q/S**2
            L = XL/(2*np.pi*freq)
            return L
        
        # Constants
        freq = 60.0
        # Phase 1 load configuration
        P1 = 1800000.0/3.0
        pf1 = 0.9
        S1 = P1/pf1
        Q1 = np.sqrt(S1**2-P1**2)
        # Phase 2 load configuration
        P2 = 1800000.0/3.0
        pf2 = 0.9
        S2 = P2/pf2
        Q2 = np.sqrt(S2**2-P2**2)
        # Phase 3 load configuration
        P3 = 1800000.0/3.0
        pf3 = 0.9
        S3 = P3/pf3
        Q3 = np.sqrt(S3**2-P3**2)
        
        # Voltages measured at node 4
        V1_node4 = 1920.0
        V2_node4 = 2054.0
        V3_node4 = 1986.0
        
        # Calulating R and L values 
        R1 = calc_R(V1_node4, P1, S1)
        R2 = calc_R(V2_node4, P2, S2)
        R3 = calc_R(V3_node4, P3, S3)
        
        L1 = calc_L(V1_node4, Q1, S1)
        L2 = calc_L(V2_node4, Q2, S2)
        L3 = calc_L(V3_node4, Q3, S3)
        
        config = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.69',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 17,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0i,1i',
                                            'input_register_adresses': '0i,1'
        }
        
        
        config1 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.70',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 18,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0i,1i',
                                            'input_register_adresses': '0,1'
        }
        
        config2 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.71',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 19,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0i,1i',
                                            'input_register_adresses': '0,1'
        }
        
        
        config3 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.72',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 20,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0i,1i',
                                            'input_register_adresses': '0,1'
        }
        
        config4 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.73',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 21,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0i,1i',
                                            'input_register_adresses': '0,1'
        }
    ENDCODE
}
